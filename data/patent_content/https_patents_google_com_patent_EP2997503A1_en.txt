EP2997503A1 - Efficient fetching of map tile data - Google Patents
Efficient fetching of map tile dataInfo
- Publication number
- EP2997503A1 EP2997503A1 EP14731468.6A EP14731468A EP2997503A1 EP 2997503 A1 EP2997503 A1 EP 2997503A1 EP 14731468 A EP14731468 A EP 14731468A EP 2997503 A1 EP2997503 A1 EP 2997503A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- map
- map tiles
- tiles
- request
- tile
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
Definitions
- the present disclosure relates generally to displaying digital maps on client devices, and, more particularly, to requesting and retrieving map content for displaying digital maps.
- Digital maps are often generated by assembling a set of map tiles (e.g. 256 by 256 pixel images).
- the content of the map tiles can include shading, colors, roads, navigation routes, label, markers, building footprints, etc. in either raster, vector, or combined image formats.
- a mapping application Upon receiving a geographic query or other input from a user, a mapping application identifies relevant map tiles needed to assemble a digital map and requests the necessary map tiles from a server (i.e. the mapping application "fetches" the map tiles).
- a browser or a mapping application fetches every map tile separately via individual hypertext transfer protocol (HTTP) requests for each rectangular portion of a digital map displayed in a map viewport.
- HTTP hypertext transfer protocol
- a typical browser can only have a limited number of concurrently outstanding HTTP requests.
- sending out a request for each map tile adds a significant amount of communication overhead to the transmission of map data.
- map tiles needed for the assembly a digital map
- a single content request to the map content server may include an identification of multiple map tiles, such that multiple map tiles are fetched without the need for multiple content requests.
- the map tiles identified in the multi- tile content request typically make up a contiguous portion of the digital map.
- any set of map tiles may be fetched by sending a multi-tile request to the server, where the multi- tile request includes an identification of a reference map tile and an identification of multiple other map tiles relative to the reference map tile.
- a computer-implemented method for fetching map tiles for digital maps comprises receiving, via a user interface, a request to display a digital map, identifying, with a processor, a plurality of map tiles each representing a portion of the digital map, and generating a single map content request including multiple identifiers corresponding to the plurality of map tiles. Further, the method comprises communicating, via a computer network, the map content request to a server, in response to the map content request, receiving, via the computer network, the plurality of map tiles from the server, and displaying, via the user interface, the digital map based on the plurality of map tiles.
- a computer device for efficiently fetching map tiles comprises one or more processors and one or more memories coupled to the one or more processors, wherein the one or more memories include computer executable
- the one or more processors identify a plurality of map tiles each representing a portion of the digital map, generate a single map content request including multiple identifiers
- the one or more processors receive, via the computer network, the plurality of map tiles from the server and display, via the user interface, the digital map based on the plurality of map tiles
- a method in a network device for retrieving map tiles comprises receiving, from a client device, a request for map data including a plurality of map tiles, wherein the request for map data includes multiple identifiers corresponding to the plurality of map tiles. Further, the method comprises parsing, with one or more processors, the request for map data to identify the plurality of map tiles based on the unique identifier and the set of relative identifiers, retrieving, with the one or more processors, the plurality of map tiles from a map content database, and providing the requested map tiles to the client device.
- computer device for efficiently fetching retrieving map tiles comprises one or more processors and one or more memories coupled to the one or more processors, wherein the one or more memories include computer executable instructions stored therein that, when executed by the one or more processors, cause the one or more processors to receive, from a client device, a request for map data including multiple identifiers corresponding to the plurality of map tiles. Further, the one or more processors parse the request for map data to identify the plurality of map tiles based on the unique identification and the set of relative identifications, retrieve the plurality of map tiles from a map content database, and provide the requested map tiles to the client device.
- a device includes a means for receiving, via a user interface, a request to display a digital map; a means for identifying, with a processor, a plurality of map tiles each representing a portion of the digital map; a means for generating a single map content request including multiple identifiers corresponding to the plurality of map tiles; a means for communicating, via a computer network, the map content request to a server; a means for, in response to the map content request, receiving, via the computer network, the plurality of map tiles from the server; and a means for displaying, via the user interface, the digital map based on the plurality of map tiles.
- Fig. 1 illustrates an example computing environment in which map tiles can be efficiently fetched for displaying digital maps.
- Fig. 2 illustrates an example client device which can generate multi-tile requests and can be implemented as part of the computing environment illustrated in Fig. 1.
- FIGs. 3A and 3B illustrate example implementations of existing techniques for fetching map tiles.
- Fig. 4 illustrates an example implementation of a multi-tile request which can be implemented in the example computing environment illustrated in Fig. 1.
- Fig. 5 is a flow diagram of an example method for efficient fetching of map tiles which can be implemented in the example computing environment illustrated in Fig. 1.
- Fig. 6 illustrates an example labeling or indexing scheme for map tiles which can be implemented as part of the example method of Fig. 5.
- Fig. 7 is a flow diagram of an example method for generating and sending a multi- tile request from a client device to a server which can be implemented in the example computing environment illustrated in Fig. 1.
- Fig. 8 is a flow diagram of an example method for servicing a multi-tile request from a client device which can be implemented in the example computing environment illustrated in Fig. 1.
- map tiles needed for the assembly of digital maps, to be fetched efficiently from a map content server.
- a single content request to the map content server includes an identification of multiple map tiles, such that multiple map tiles are fetched without the need for multiple content requests.
- the map tiles identified in the multi-tile content request typically make up a contiguous portion of the digital map.
- any set of map tiles may be fetched by sending a multi-tile request to the server, where the multi-tile request includes an identification of multiple map tiles.
- each map tile identification may be a complete or unique identification.
- the multi-tile request may include a full or complete identification of one of the map tiles in the multi-tile request and may include abbreviated or indexed identifications for other map tiles in the multi-tile request, wherein the indexed tile identifications are referenced to the tile for which a complete identification is provided for example, to reduce the amount of communications needed to request all of the map tiles.
- Fig. 1 illustrates an example computing environment 100 in which map tiles may be efficiently fetched via a multi-tile request.
- the example computing environment 100 includes a client device 102 communicatively coupled to the network 104.
- the client device 102 may be a smartphone, tablet computer, laptop computer, desktop computer, geographic positioning system (GPS) receiver, etc., and further details of an example client device are discussed with reference to Fig. 2.
- the communications network 104 may include one or more of a local area network (LAN), a wireless LAN, a wide area network (WAN), a mobile communications network, the Internet, or any other suitable public or private wired or wireless communication network.
- LAN local area network
- WAN wide area network
- mobile communications network the Internet, or any other suitable public or private wired or wireless communication network.
- the client device 102 may execute a mapping application to display digital maps to a user, where the digital maps include map content downloaded from a map content server 106.
- the mapping application may be available at an online application store disposed at the map content server 106 or an application server (not shown), for example.
- a user of the client device 102 may retrieve a copy of the mapping application from the application server and "install" the retrieved copy of the mapping application on the client device 102.
- the client device 102 may display an interactive mapping application within a web browser application.
- the client device 102 may display digital maps, constructed from a plurality of map tiles (e.g., 256 by 256 pixels images). For example, a user of the client device 102 may identify an area of interest via a geographic query, and the mapping application may display a digital map of the area of interest constructed from multiple rectangular map tiles each representing a rectangular portion of the area of interest. In order to service such client requests, the mapping application may fetch relevant map tiles via a multi-tile request, as discussed below.
- map tiles e.g., 256 by 256 pixels images.
- a map tile making up a portion of a digital map, may be generated by overlaying, blending, and/or otherwise combining: (i) vector graphics stored in a vector database 108, and (ii) background raster images stored in a background raster database 110.
- the vector database 108 may include geometric definitions of building footprints, label/marker positions, road segments, navigation routes, etc.
- Background raster images may include raster images showing terrain information, smaller roads, residential subdivisions, etc., for example.
- vector graphics, background raster images, and the resulting map tiles are generated by a content generation engine 112.
- the content generation engine 112 may generate map content (e.g. vector/raster images and map tiles) via batch processing, and the map content server 106 may retrieve the map content in real-time to service client requests.
- a map tile may be made up entirely as a raster image or entirely as a vector graphics image.
- Fig. 2 illustrates an example client device 150 which can efficiently fetch map tiles via multi-tile requests.
- the client device 150 includes a display device 152 on which digital maps may be displayed, such as a liquid crystal display (LCD), light emitting diode (LED) display, organic LED (OLED) display, etc.
- the client device 150 includes a network interface 154 to facilitate communications over a network, such as network 104, a CPU 156 for executing computer-readable instructions stored in a memory 158, and a graphics processing unit (GPU) 160 for rendering images to be displayed on the display device 152.
- a network interface 154 to facilitate communications over a network, such as network 104, a CPU 156 for executing computer-readable instructions stored in a memory 158, and a graphics processing unit (GPU) 160 for rendering images to be displayed on the display device 152.
- GPU graphics processing unit
- the memory 158 may include a mapping application 164, in some embodiments.
- the mapping application 164 may include a tile request routine 168 for generating multi-tile content requests and a map display routine 170 for constructing and displaying digital maps based on received map tiles.
- the memory 158 may also store a plurality of shaders (not shown) for describing and/or defining the traits (e.g. position, colors, etc.) of portions of images to be displayed on the display device 152.
- the plurality of shaders may include pixel shaders, vertex shaders, geometry shaders, etc. which can be executed by the GPU 160.
- a plurality of shaders may be part of one or more shader "pipelines" in the GPU 160, as known in the industry, in an implementation.
- Figs. 3A and 3B illustrate an example implementation of existing map tile fetching techniques.
- a content request such as a hypertext transfer protocol (HTTP) request
- HTTP hypertext transfer protocol
- the map content server 202 retrieves map tiles 1-N from a content database 204 and sends each of the map tiles 1-N back to the client device 200 as they are received or generated, as illustrated by multiple arrows labeled Tile 1 - Tile N in Fig. 3B.
- the use of multiple content requests in existing map fetching techniques results in a significant amount of communication overhead and/or queued or stalled content requests when the number of content requests exceeds browser limits.
- the techniques of the present disclosure can utilize a single content request to fetch multiple map tiles.
- the techniques of the present disclosure may significantly reduce communication overhead and prevent queued or stalled content requests in many scenarios.
- a single content request may reach a map content server faster than all of the set of multiple content requests reach the map content server, thus providing the map content server more timely notification of requested content and allowing the map content server to begin to fetch or generate all of the requested map tiles more quickly than if requests for individual map tiles are received in serially sent messages.
- Fig. 4 illustrates an example implementation of the techniques of the present disclosure in which a single multi-tile request is utilized to fetch multiple map tiles.
- a client device 300 may identify (e.g. via a geographic queries or zoom operation) multiple map tiles needed to display new or different portions of a digital map, in an example scenario.
- the client device 300 may construct a multi-tile content request and send the request to a map content server 302 (as illustrated by a single arrow labeled "multi-tile request"), in the example scenario.
- the map content server 302 may parse the multi-tile request to identify individual tiles requested by the client device 300 and retrieve the individual tiles (Tile 1 - Tile N) from a content database 304, as illustrated by multiple arrows between the map content server 302 and the content database 304.
- the retrieved map tiles may be raster image map tiles, stored, for example, in raster database 110, or vector graphics map tiles, stored, for example, in vector database 108 (of Fig. 1).
- the map content server may still send each retrieved or fetched map tile back to the client device in a separate message as these tiles are fetched, to assure that the tiles are sent to and received by the client device as quickly as possible.
- Fig. 5 is a flow diagram of an example method 400 for fetching map tiles via a multi-tile request.
- the method 400 may be implemented in the client device 102, for example.
- a set of map tiles, needed to assemble a digital map is identified.
- the set of map tiles is identified in response to a geographic query.
- a user of the client device 102 may enter, via a keyboard, touchscreen, or other user interface, an indication of an area of interest, and the client device 102 may identify a set of map tiles corresponding to that area of interest.
- a user of the client device 102 may perform a zoom operation, miscellaneous content selection (e.g. selection indicating the display of traffic information), or other operation that requires additional map content identified as a set of new map tiles.
- the client device generates a multi-tile request, where the multi-tile request includes an identifier of each of the set of map tiles, needed to construct a digital map.
- the multi-tile request may specify a reference map tile in absolute terms (e.g., using x and y coordinates, latitude /longitude coordinates, map tile identifier numbers, or any other full or complete identification methodology that uniquely identifies a map tile) and specify the remaining tiles in relative terms.
- the multi-tile request may specify the tile (132, 124) and list the adjacent tiles as having coordinates (+1, 0), (+2, 0), ... (+1, +1), (+2, +1), all measured relative to (132, 124).
- the multi-tile request may also specify a map tile in absolute terms and a bounding box in any suitable format (e.g., all adjacent tiles, five tiles down, 10 tiles to the right), so that the server can provide all the tiles that belong to the bounding box.
- a map tile in absolute terms and a bounding box in any suitable format (e.g., all adjacent tiles, five tiles down, 10 tiles to the right), so that the server can provide all the tiles that belong to the bounding box.
- a uniform resource locator URL
- Fig. 6 illustrates an example set of map tiles including a reference map tile and surrounding map tiles specified by relative coordinates.
- the reference map is labeled by the coordinates (x, y) and the surrounding map tiles are labeled in increments of the map tile size.
- the map tile directly on the right hand side of the reference map tile is labeled by the coordinates (+1, 0), whereas the map tile directly above the reference map tile is labeled by the coordinates (0,+l).
- a set of map tiles may be indentified in a multi-tile request via relative coordinates. While not illustrated in Fig.
- the reference map tile identifier may also including other information such as the zoom level for the map tile, a map view associated with the requested map tile, etc.
- the indexed map tiles i.e., the map tiles specified by indexing to the reference map tile, need not include the zoom level identifier, the map view identifier or other information that is typically the same for all of the map tiles sent to display or that are associated with a particular single map image. This feature further reduces the information needed to be sent in the request for multiple map tiles.
- Fig. 6 illustrates a set of map tiles as a contiguous set of map tiles
- the set of map tiles specified in a multi-tile request may include detached, or separated, map tiles.
- a client device such as client device 102
- a reference map tile may be arbitrarily, or otherwise, chosen and the remaining disjoint map tiles may be identified relative to the coordinates of the reference map tile.
- map tiles identified in a multi-tile request may include map tiles of various sizes, in an implementation.
- the raster database 110 may include raster based map tiles of various sizes for displaying maps on various scales.
- a multi-tile request may include an indication of zoom level or scale along with a reference map tile location and relative map tile locations.
- a particular mapping application may display maps on one of eighteen map zoom levels, and a multi-tile request, generated by the mapping application, may include a number between one and eighteen to identify a relevant zoom or scale related to a geographic query.
- the multi-tile request is sent from a client device to a map content server, such as map content server 106.
- a map content server such as map content server 106.
- the client device 150 may send the multi-tile request as a single HTTP request via the network interface 154.
- individual map tiles, corresponding to the map tiles identified in the multi-tile request are received from the map content server.
- the received tiles may include any of or a combination of raster image tiles, vector image tiles, and supplementary tiles, in an implementation.
- a client device may receive supplementary tiles (e.g.
- the client device may receive only vector image tiles or only raster image tiles based on the nature of the geographic query or operation that triggered the multi-tile request. For example, a request for additional building information may trigger a request for vector based tiles and no raster based tiles.
- a digital map is rendered for display based on the received map tiles.
- the client device 102 may stitch, blend, overlay, or otherwise combine the received map tiles to generate a digital map for display on the display device 152.
- the client device 102 may receive the individual map tiles at various different times. In such as case, the client device 102 may display only portions of a digital map based on a subset of received map tiles. Then the client device 102 may display further portions of the digital map as more map tiles are received, for example.
- Fig. 7 is a flow diagram of an example method 450 for generating and sending a multi-tile request from a client device to a server which may be used in for example, the block 404 of Fig. 5.
- the example method 450 may be implemented in the client device 150 in any other manner, however.
- a geographic region, for which new map tiles are needed is determined.
- the tile request routine 168 may process a geographic query to determine an area of interest. For example, if a user of the client device 150 enters a search query for "Chicago," via a user interface, the mapping application 164 may parse the search query, as known in the industry, to identify the region including the Chicago metropolitan area. In another scenario, a user of the client device 150 may zoom/pan from a view of a neighborhood of Chicago to a view of the whole Chicago metropolitan area. In such a scenario, the tile request routine 168 may determine map tiles needed for all of the Chicago metropolitan area but the geographic area of the currently viewed neighborhood.
- a particular set of map tiles corresponding to the geographic area and zoom level for which a map is to be displayed, is determined.
- the tile request routine 168 may determine the number and/or location of new map tiles by an amount of zoom or pan, a geographic scale of a geographic query (e.g. city scale, country scale, etc.), a bounding box of a digital map viewport, etc.
- the tile request routine 168 may determine that all map tiles fully or partially visible in a viewport, minus the map tiles currently being used by the mapping application 164, is the set of map tiles needed by the mapping application 164.
- one of the set of map tiles identified at block 454 is selected as a reference map tile and is assigned a unique identifier.
- the tile request routine 168 may select the map tile with the most central location in a current or expected map viewport, the map tile with a location closest to the average location of the set of map tiles as the reference map tile, the map tile at one corner of the entire geographical area for which map tiles are to be requested, etc.
- the tile request routine 168 may assign or determine the reference map tile a unique identifier in terms of latitude and longitude, or any other suitable coordinate system. For example, the coordinates
- corresponding to the reference map tile may indicate the latitude and longitude of the centroid of the map tile.
- relative identifiers are determined and assigned to the remaining map tile in the particular set of map tiles.
- the tile request routine 168 may assign the remaining map tiles positive and negative integer values representing the location of the map tiles relative to the reference map tile, as discussed further with reference to Fig. 5.
- the tile request routine 168 may assign relative coordinates to the remaining map tiles representing relative distances in a suitable unit, such as meters, feet, etc.
- the tile request routine 168 may assign a map tile coordinates (x r , y r ), where x r and y r are the east/west distance and north/south distance between the centroid of the reference map tile and the map tile, respectively.
- each of the other map tiles may be specified separately.
- the other map tiles may be specified as a group with a group index, such as all map tiles within a certain distance or spacing from the reference map tile, all map tiles adjacent to the reference map tile, etc.
- each of the set of map tiles is assigned a unique identifier that may be used to independently identify a map tile.
- the client device 150 may assign absolute latitude and longitude coordinates, unique map tile identification numbers, or any other suitable unique identifiers, to each of the set of map tiles.
- blocks 456 and 458 of method 450 may be combined, such that unique identifiers are assigned to each of the set of map tiles.
- the client device may assign a set of integer number identifiers, such as ⁇ (132, 124), (133, 124), ... , (137, 128) ⁇ , to a set of map tiles, where each integer number identifier uniquely identifies one of the set of map tiles.
- a multi-tile request is generated including the coordinates of the reference map tile and the relative coordinates of the remaining map tiles, with each set of relative coordinates specifying either a single map tile or a group of map tiles, or including unique identifiers corresponding to each of the set of map tiles.
- the multi-tile request may be an HTTP request may include a request line, headers, and an empty line, as known in the industry.
- the multi-tile request may include alphanumeric characters, symbols, or any other suitable representations of the coordinates of the reference map tile and remaining map tiles, for example.
- the multi-tile request is sent to a map content server, such as map content server 106.
- the client device 150 may send the multi-tile request to the map content server 106 via the network interface 154.
- Fig. 8 is a flow diagram of an example method 500 for servicing multi-tile requests received by a map content server.
- the method 500 may be implemented in the map content server 106, for example.
- a multi-tile request is received from a client device.
- the map content server 106 may receive the multi-tile request as a single HTTP request via the network 104.
- the multi-tile request is parsed to determine individual map tiles identified in the multi-tile request.
- the parsing of the multi-tile request may include any of a number of parsing techniques known in the industry, such as identifying delimiters, generating signatures/grammars, etc.
- the map content server 504 may execute a series of computer- readable instructions, such as a parsing script, to parse the multi-tile request via known rules for a multi-tile request format.
- the map content server 504 may execute a script that parses the multi-tile request based on integer numbers representing the width or increments of map tiles, where the integer numbers are known to exist at certain locations in a multi-tile request.
- map content server 106 may generate a database query, such as a SQL query or MapReduce function, corresponding to each of the map tiles identified in the multi-tile request. The map content server 106 may then execute the database queries on the raster database 110 or the vector database 108 and receive the map tiles as results of the queries.
- a database query such as a SQL query or MapReduce function
- the retrieving of the individual map tiles may be distributed across multiple processors.
- the map content server 106 may distribute the retrieval of individual map tiles such that each map tile is retrieved from a database via a different processor.
- a map content server may distribute the retrieval of raster and vector content to multiple processors such that the raster content corresponding to a certain map tile is retrieved by a different processor than the processor used to retrieve vector content corresponding to the certain map tile.
- the individual tiles retrieved from the content database are sent to the client device.
- the map content server 106 may send map tiles to the client device 102 as they are retrieved from the raster database 110 or the vector database 108. As such, the client device may begin to display portions of the digital map as new map tiles are available, for example.
- the map content server 102 may prioritize the communication of map tiles, in an implementation. For example, the map content server 102 may send raster content before vector content, map tiles for one geographic area before map tiles for another geographic area, map tiles most relevant to a query before less relevant map tiles, etc.
- the techniques of the present disclosure utilize a single content request to fetch multiple map tiles. As such, the techniques of the present disclosure may significantly reduce communication overhead and prevent queued or stalled content requests in many scenarios. Moreover, a single content request may provide a map content server timely notification of requested content and allow the map content server to begin to fetch or generate all of the requested map tiles more quickly than if requests for individual map tiles are received in serially sent messages.
- Modules may constitute either software modules (e.g., code stored on a machine-readable medium) or hardware modules.
- a hardware module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner.
- one or more computer systems e.g., a standalone, client or server computer system
- one or more hardware modules of a computer system e.g., a processor or a group of processors
- software e.g., an application or application portion
- a hardware module may be implemented mechanically or electronically.
- a hardware module may comprise dedicated circuitry or logic that is permanently configured (e.g., as a special-purpose processor, such as a field programmable gate array (FPGA) or an application- specific integrated circuit (ASIC)) to perform certain operations.
- a hardware module may also comprise programmable logic or circuitry (e.g., as encompassed within a general-purpose processor or other programmable processor) that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically, in dedicated and permanently configured circuitry, or in temporarily configured circuitry (e.g., configured by software) may be driven by cost and time considerations.
- the term hardware should be understood to encompass a tangible entity, be that an entity that is physically constructed, permanently configured (e.g., hardwired), or temporarily configured (e.g., programmed) to operate in a certain manner or to perform certain operations described herein.
- hardware modules are temporarily configured (e.g., programmed)
- each of the hardware modules need not be configured or instantiated at any one instance in time.
- the hardware modules comprise a general-purpose processor configured using software
- the general-purpose processor may be configured as respective different hardware modules at different times.
- Software may accordingly configure a processor, for example, to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.
- Hardware and software modules can provide information to, and receive information from, other hardware and/or software modules. Accordingly, the described hardware modules may be regarded as being communicatively coupled. Where multiple of such hardware or software modules exist contemporaneously, communications may be achieved through signal transmission (e.g., over appropriate circuits and buses) that connect the hardware or software modules. In embodiments in which multiple hardware modules or software are configured or instantiated at different times, communications between such hardware or software modules may be achieved, for example, through the storage and retrieval of information in memory structures to which the multiple hardware or software modules have access. For example, one hardware or software module may perform an operation and store the output of that operation in a memory device to which it is
- a further hardware or software module may then, at a later time, access the memory device to retrieve and process the stored output.
- Hardware and software modules may also initiate communications with input or output devices, and can operate on a resource (e.g., a collection of information).
- processors may be temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions.
- the modules referred to herein may, in some example embodiments, comprise processor-implemented modules.
- the methods or routines described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or processors or processor-implemented hardware modules. The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors may be located in a single location (e.g., within a home environment, an office environment or as a server farm), while in other embodiments the processors may be distributed across a number of locations. [0056] The one or more processors may also operate to support performance of the relevant operations in a "cloud computing" environment or as a SaaS.
- At least some of the operations may be performed by a group of computers (as examples of machines including processors), these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., APIs).
- a network e.g., the Internet
- APIs e.g., APIs
- the performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines.
- the one or more processors or processor- implemented modules may be located in a single geographic location (e.g., within a home environment, an office environment, or a server farm). In other example embodiments, the one or more processors or processor-implemented modules may be distributed across a number of geographic locations.
- Coupled along with their derivatives.
- some embodiments may be described using the term “coupled” to indicate that two or more elements are in direct physical or electrical contact.
- the term “coupled,” however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.
- the embodiments are not limited in this context.
- the terms “comprises,” “comprising,” “includes,” “including,” “has,” “having” or any other variation thereof, are intended to cover a non-exclusive inclusion.
- a process, method, article, or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process, method, article, or apparatus.
- "or” refers to an inclusive or and not to an exclusive or. For example, a condition A or B is satisfied by any one of the following: A is true (or present) and B is false (or not present), A is false (or not present) and B is true (or present), and both A and B are true (or present).
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/895,301 US9201898B2 (en) | 2013-05-15 | 2013-05-15 | Efficient fetching of map tile data |
PCT/US2014/038069 WO2014186506A1 (en) | 2013-05-15 | 2014-05-15 | Efficient fetching of map tile data |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2997503A1 true EP2997503A1 (en) | 2016-03-23 |
Family
ID=50977101
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14731468.6A Ceased EP2997503A1 (en) | 2013-05-15 | 2014-05-15 | Efficient fetching of map tile data |
Country Status (5)
Country | Link |
---|---|
US (1) | US9201898B2 (en) |
EP (1) | EP2997503A1 (en) |
CN (1) | CN105339938A (en) |
DE (1) | DE202014010936U1 (en) |
WO (1) | WO2014186506A1 (en) |
Families Citing this family (39)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9846735B2 (en) * | 2011-04-20 | 2017-12-19 | Here Global B.V. | Method and apparatus for processing probe data |
CA2932747C (en) * | 2013-12-04 | 2023-04-11 | Urthecast Corp. | Systems and methods for processing distributing earth observation images |
US10210592B2 (en) * | 2014-03-30 | 2019-02-19 | Teoco Ltd. | System, method, and computer program product for efficient aggregation of data records of big data |
US20150356088A1 (en) * | 2014-06-06 | 2015-12-10 | Microsoft Corporation | Tile-based geocoder |
WO2015192056A1 (en) | 2014-06-13 | 2015-12-17 | Urthecast Corp. | Systems and methods for processing and providing terrestrial and/or space-based earth observation video |
US9593955B2 (en) * | 2015-01-19 | 2017-03-14 | Here Global B.V. | Updating navigational map data |
CA2980920C (en) | 2015-03-25 | 2023-09-26 | King Abdulaziz City Of Science And Technology | Apparatus and methods for synthetic aperture radar with digital beamforming |
WO2017044168A2 (en) | 2015-06-16 | 2017-03-16 | King Abdulaziz City Of Science And Technology | Efficient planar phased array antenna assembly |
US10255293B2 (en) * | 2015-10-16 | 2019-04-09 | Oracle Internatinoal Corporation | Generating virtual map tiles according to an ad hoc specification |
CN105447500B (en) * | 2015-10-30 | 2017-10-17 | 张弓 | A kind of method and system of automatic identification crop straw burning fire point |
CA3044806A1 (en) | 2015-11-25 | 2017-06-01 | Urthecast Corp. | Synthetic aperture radar imaging apparatus and methods |
CN105677912A (en) * | 2016-02-29 | 2016-06-15 | 南京华苏科技股份有限公司 | Displaying method and system for mass data of online electronic map |
CN105824899B (en) * | 2016-03-15 | 2019-05-21 | 深圳市两步路信息技术有限公司 | A kind of method for down loading of the offline map based on tile technology |
US10593074B1 (en) * | 2016-03-16 | 2020-03-17 | Liberty Mutual Insurance Company | Interactive user interface for displaying geographic boundaries |
US9874450B2 (en) * | 2016-04-28 | 2018-01-23 | Here Global B.V. | Referencing closed area geometry |
US9686357B1 (en) * | 2016-08-02 | 2017-06-20 | Palantir Technologies Inc. | Mapping content delivery |
US10319062B2 (en) * | 2016-09-27 | 2019-06-11 | Google Llc | Rendering map data using descriptions of raster differences |
US10055808B1 (en) * | 2017-01-23 | 2018-08-21 | Kinetica Db, Inc. | Distributed and parallelized visualization framework |
US20180276880A1 (en) * | 2017-03-21 | 2018-09-27 | EarthX, Inc. | System and method for rendering geospatial maps |
EP3631504B8 (en) | 2017-05-23 | 2023-08-16 | Spacealpha Insights Corp. | Synthetic aperture radar imaging apparatus and methods |
US11378682B2 (en) | 2017-05-23 | 2022-07-05 | Spacealpha Insights Corp. | Synthetic aperture radar imaging apparatus and methods for moving targets |
CN109002452B (en) * | 2017-06-07 | 2020-10-23 | 杭州海康威视系统技术有限公司 | Map tile updating method and device and computer readable storage medium |
US10921136B2 (en) * | 2017-10-27 | 2021-02-16 | Mapbox, Inc. | Efficient processing for vector tile generation |
CN107977407B (en) * | 2017-11-20 | 2020-03-31 | 深圳市科比特航空科技有限公司 | Tile map storage method and device, storage medium and computer equipment |
US11525910B2 (en) | 2017-11-22 | 2022-12-13 | Spacealpha Insights Corp. | Synthetic aperture radar apparatus and methods |
CN108108481B (en) * | 2018-01-05 | 2022-06-28 | 中译语通科技股份有限公司 | Method for increasing 2D map flashing point effect and spatial information processing and analyzing system |
CN110047371B (en) * | 2018-01-15 | 2022-03-25 | 北京四维图新科技股份有限公司 | Rendering method and device of vector electronic map |
DE102018000459A1 (en) | 2018-01-22 | 2019-07-25 | Joachim Becker | Method and device for displaying user-defined vector graphics with intelligent information points from a cloud-based CAD archive on mobile devices, portable or stationary computers |
CN110309243A (en) * | 2018-03-22 | 2019-10-08 | 杭州海康威视系统技术有限公司 | Obtain method, apparatus, equipment and the storage medium of outdoor scene electronic map |
CN108830794B (en) * | 2018-05-31 | 2022-02-18 | 中国人民解放军61540部队 | Cross-map seamless splicing display method for PDF map of Gaussian projection |
CN109325083B (en) * | 2018-08-03 | 2021-01-26 | 江苏联旺信息科技有限公司 | Aviation flight image map loading method, aviation flight image map loading software and aerial photographing device |
CN109726260B (en) * | 2018-12-29 | 2023-05-12 | 浪潮软件科技有限公司 | Method for adding specific mark based on offline map tile |
WO2020149427A1 (en) * | 2019-01-15 | 2020-07-23 | 엘지전자 주식회사 | Route providing device and route providing method therefor |
CN110189392B (en) * | 2019-06-21 | 2023-02-03 | 重庆大学 | Automatic framing method for flow velocity and flow direction map |
CN110866132B (en) * | 2019-11-18 | 2023-04-07 | 浪潮软件股份有限公司 | Tile map using method suitable for low network bandwidth environment |
CN114061599A (en) * | 2020-07-31 | 2022-02-18 | 华为技术有限公司 | Navigation positioning method, electronic equipment and navigation positioning system |
US11721052B2 (en) * | 2020-09-24 | 2023-08-08 | Nuvolo Technologies Corporation | Floorplan image tiles |
CN112800470A (en) * | 2021-02-20 | 2021-05-14 | 和芯星通科技(北京)有限公司 | Management method and system of differential data, server and client |
CN113076440A (en) * | 2021-04-01 | 2021-07-06 | 广东南方数码科技股份有限公司 | Map tile image processing method, device, equipment and storage medium |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120238250A1 (en) * | 2011-03-14 | 2012-09-20 | Nokia Corporation | Methods and apparatuses for facilitating provision of a map resource |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5977988A (en) * | 1995-12-29 | 1999-11-02 | Xerox Corporation | Method for mapping line segment intersections to machine representable points |
US5902347A (en) * | 1996-11-19 | 1999-05-11 | American Navigation Systems, Inc. | Hand-held GPS-mapping device |
US6072507A (en) * | 1998-04-10 | 2000-06-06 | Ati Technologies, Inc. | Method and apparatus for mapping a linear address to a tiled address |
US6415227B1 (en) * | 1999-04-21 | 2002-07-02 | American Gnc Corporation | Enhanced global positioning system and map navigation process |
US6667745B1 (en) * | 1999-12-22 | 2003-12-23 | Microsoft Corporation | System and method for linearly mapping a tiled image buffer |
US6430501B1 (en) * | 2000-01-19 | 2002-08-06 | Magellan Dis, Inc. | Navigation system with route indicators |
US6671773B2 (en) * | 2000-12-07 | 2003-12-30 | Spinnaker Networks, Llc | Method and system for responding to file system requests |
US7599790B2 (en) | 2004-03-23 | 2009-10-06 | Google Inc. | Generating and serving tiles in a digital mapping system |
CN103398718B (en) | 2004-03-23 | 2017-04-12 | 咕果公司 | Digital mapping system |
EP1681656A1 (en) | 2005-01-18 | 2006-07-19 | Oculus Info Inc. | System and method for processing map data |
US8788613B2 (en) * | 2006-03-31 | 2014-07-22 | Blackberry Limited | Method and system for distribution of map content to mobile communication devices |
US7925982B2 (en) * | 2006-09-01 | 2011-04-12 | Cheryl Parker | System and method of overlaying and integrating data with geographic mapping applications |
US7734412B2 (en) | 2006-11-02 | 2010-06-08 | Yahoo! Inc. | Method of client side map rendering with tiled vector data |
US8130245B2 (en) | 2007-01-18 | 2012-03-06 | Harris Corporation | System and method for processing map images |
US8244770B2 (en) * | 2007-09-26 | 2012-08-14 | Telecommunication Systems, Inc. | Image tile server |
CN101742395B (en) * | 2008-11-21 | 2012-12-05 | 厦门雅迅网络股份有限公司 | Method for downloading and displaying map data by mobile phone |
EP2389637A1 (en) | 2009-06-24 | 2011-11-30 | International Business Machines Corporation | Requesting computer data assets |
US8204966B1 (en) | 2011-09-26 | 2012-06-19 | Google Inc. | Map tile data pre-fetching based on user activity analysis |
US20130124563A1 (en) | 2011-11-16 | 2013-05-16 | Google Inc. | Controlling pre-fetching of map data tiles based on selectable parameters |
US8803920B2 (en) | 2011-12-12 | 2014-08-12 | Google Inc. | Pre-fetching map tile data along a route |
-
2013
- 2013-05-15 US US13/895,301 patent/US9201898B2/en active Active
-
2014
- 2014-05-15 CN CN201480036114.XA patent/CN105339938A/en active Pending
- 2014-05-15 EP EP14731468.6A patent/EP2997503A1/en not_active Ceased
- 2014-05-15 DE DE202014010936.2U patent/DE202014010936U1/en not_active Expired - Lifetime
- 2014-05-15 WO PCT/US2014/038069 patent/WO2014186506A1/en active Application Filing
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120238250A1 (en) * | 2011-03-14 | 2012-09-20 | Nokia Corporation | Methods and apparatuses for facilitating provision of a map resource |
Non-Patent Citations (2)
Title |
---|
ANONYMOUS: "Absolute coordinates - GIS Wiki | The GIS Encyclopedia", 3 November 2010 (2010-11-03), pages 1 - 2, XP055499848, Retrieved from the Internet <URL:http://wiki.gis.com/wiki/index.php?title=Absolute_coordinates&oldid=729830> [retrieved on 20180815] * |
See also references of WO2014186506A1 * |
Also Published As
Publication number | Publication date |
---|---|
CN105339938A (en) | 2016-02-17 |
US20140344296A1 (en) | 2014-11-20 |
DE202014010936U1 (en) | 2017-01-23 |
US9201898B2 (en) | 2015-12-01 |
WO2014186506A1 (en) | 2014-11-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9201898B2 (en) | Efficient fetching of map tile data | |
US9811879B2 (en) | Keeping map labels consistent across multiple zoom levels | |
AU2012316226B2 (en) | Managing map elements using aggregate feature identifiers | |
EP2958033A1 (en) | Tile-based distribution of searchable geospatial data to client devices | |
US20150062114A1 (en) | Displaying textual information related to geolocated images | |
US8972187B1 (en) | Varying the degree of precision in navigation data analysis | |
CN104221008A (en) | Pre-fetching map tile data along a route | |
US9197713B2 (en) | Method and apparatus for pre-fetching remote resources for subsequent display on a mobile computing device | |
JP2019016393A (en) | System and method for disambiguating item selection | |
US20170013080A1 (en) | Caching geographic data according to server-specified policy | |
US9779543B2 (en) | Method for providing and receiving information representing physical features of a portion of a three dimensional surface | |
CN112654837A (en) | Selecting points of interest for display on a personalized digital map | |
US8849867B1 (en) | Intersection clustering in a map editor | |
JP5406172B2 (en) | Information output apparatus and information output method | |
US8976188B1 (en) | Optimized data communication system and method for an image rendering system | |
US8977719B1 (en) | Content oriented copyright display | |
US20150254717A1 (en) | Identifying Related Activities Occurring in Geographic Proximity of Each Other | |
CN111090713A (en) | Map processing method, server, intelligent terminal and computer readable storage medium | |
KR100996327B1 (en) | Method of registering advertisements on an electronic map at an advertisement registration server and displaying the advertisement on a user terminal | |
JP2014038356A (en) | Information output device and information output method | |
CN104182391A (en) | Method and device for displaying UGC (User Generated Content) | |
KR20170099137A (en) | Apparatus and method for generating map | |
Ogunshile | A Big Data Analysis System for Use in Vehicular Outdoor Advertising | |
JP2018041214A (en) | Information provision system and information registration system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20151112 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20170714 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20180912 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
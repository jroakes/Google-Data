CN117059087A - Digital assistant processing of stack data structures - Google Patents
Digital assistant processing of stack data structures Download PDFInfo
- Publication number
- CN117059087A CN117059087A CN202310923755.8A CN202310923755A CN117059087A CN 117059087 A CN117059087 A CN 117059087A CN 202310923755 A CN202310923755 A CN 202310923755A CN 117059087 A CN117059087 A CN 117059087A
- Authority
- CN
- China
- Prior art keywords
- data structure
- profile
- profile layer
- processing system
- data processing
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000012545 processing Methods 0.000 title claims abstract description 324
- 230000009471 action Effects 0.000 claims abstract description 168
- 230000005236 sound signal Effects 0.000 claims abstract description 106
- 238000000034 method Methods 0.000 claims description 102
- 230000004044 response Effects 0.000 claims description 65
- 230000008569 process Effects 0.000 claims description 33
- 238000003058 natural language processing Methods 0.000 description 36
- 238000003860 storage Methods 0.000 description 18
- 238000004891 communication Methods 0.000 description 15
- 238000005108 dry cleaning Methods 0.000 description 15
- 238000004590 computer program Methods 0.000 description 11
- 230000006870 function Effects 0.000 description 11
- 230000000694 effects Effects 0.000 description 10
- 230000003287 optical effect Effects 0.000 description 8
- 230000000007 visual effect Effects 0.000 description 7
- 238000013515 script Methods 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 5
- 238000001914 filtration Methods 0.000 description 5
- 230000003993 interaction Effects 0.000 description 5
- 238000007726 management method Methods 0.000 description 4
- 238000007781 pre-processing Methods 0.000 description 4
- 230000000153 supplemental effect Effects 0.000 description 4
- 238000006243 chemical reaction Methods 0.000 description 3
- 230000000670 limiting effect Effects 0.000 description 3
- 238000010801 machine learning Methods 0.000 description 3
- 230000007246 mechanism Effects 0.000 description 3
- 238000003909 pattern recognition Methods 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 238000000926 separation method Methods 0.000 description 3
- 238000004422 calculation algorithm Methods 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000003066 decision tree Methods 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000033001 locomotion Effects 0.000 description 2
- 239000011159 matrix material Substances 0.000 description 2
- 235000012054 meals Nutrition 0.000 description 2
- 238000011176 pooling Methods 0.000 description 2
- 230000001737 promoting effect Effects 0.000 description 2
- 238000013139 quantization Methods 0.000 description 2
- 230000009467 reduction Effects 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- 238000012384 transportation and delivery Methods 0.000 description 2
- 239000013598 vector Substances 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- 238000013528 artificial neural network Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 235000021167 banquet Nutrition 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 230000003247 decreasing effect Effects 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 238000011143 downstream manufacturing Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000001815 facial effect Effects 0.000 description 1
- 239000000446 fuel Substances 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000005259 measurement Methods 0.000 description 1
- 239000000203 mixture Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000036961 partial effect Effects 0.000 description 1
- 230000037081 physical activity Effects 0.000 description 1
- 238000011045 prefiltration Methods 0.000 description 1
- 238000010926 purge Methods 0.000 description 1
- 230000002829 reductive effect Effects 0.000 description 1
- 230000008439 repair process Effects 0.000 description 1
- 238000013468 resource allocation Methods 0.000 description 1
- 230000017280 response to inactivity Effects 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000000779 smoke Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000013179 statistical model Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
- G06F21/32—User authentication using biometric data, e.g. fingerprints, iris scans or voiceprints
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/2866—Architectures; Arrangements
- H04L67/30—Profiles
- H04L67/306—User profiles
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/02—Services making use of location information
- H04W4/021—Services related to particular areas, e.g. point of interest [POI] services, venue services or geofences
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L17/00—Speaker identification or verification
- G10L17/22—Interactive procedures; Man-machine interfaces
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
Abstract
The present disclosure relates to digital assistant processing of stack data structures. A system receives an input audio signal detected by a sensor of a local computing device, identifies an acoustic signature, and identifies an account corresponding to the feature. The system establishes a session and includes a profile stack data structure having a first profile layer with policies configured by third party devices. The system pushes a second profile layer retrieved from the account to a profile stack data structure. The system parses the input audio signal to identify the request and trigger keywords. The system generates a first action data structure compatible with the first profile layer based on the trigger key and the second profile layer. The system provides a first action data structure for execution. The system disassembles the profile stack data structure to remove the first profile layer or the second profile layer from the profile stack data structure.
Description
Description of the division
The application belongs to a divisional application of Chinese patent application 201780004310.2 with the application date of 2017, 12 and 8.
Technical Field
The present disclosure relates to digital assistant processing of stack data structures.
Background
Computing devices located within a common space may not be secure. Various entities may access or utilize a common computing device. As different entities access or utilize a common computing device, accurately processing remote procedure calls, applications, or scripts for a particular entity can be challenging due to the ambiguity associated with the policies of the different entity, thereby causing erroneous network transmissions, application calls, and remote procedure calls, resulting in wasted network and processing resources.
Disclosure of Invention
The present disclosure relates generally to processing stack data structures to improve the efficiency of digital assistants in a common location. The data processing system is capable of speaker recognition to identify an electronic account and then pushes a profile associated with the speaker to a profile stack data structure that includes a first layer having a baseline profile (baseline profile) established by a third party entity associated with a public location. The data processing system is capable of disassembling the profile stack data structure in response to a triggering event, thereby maintaining security and reducing erroneous remote procedure calls.
At least one aspect relates to a system for processing a stack data structure. The system can include a data processing system having one or more processors and memory to execute natural language processor components, interfaces, speaker recognition components, and direct action application programming interfaces. The interface is capable of receiving data packets including an input audio signal detected by a sensor of a local computing device. The data processing system is capable of identifying an acoustic signature (acoustic signature) from the input audio signal. The data processing system can identify an electronic account corresponding to the acoustic signature based on a lookup in a data store. The data processing system can establish a session and a profile stack data structure for use in the session in response to identifying the electronic account. The profile stack data structure can include a first profile layer having one or more policies configured by devices of third party entities. The data processing system can push a second profile layer retrieved from the account to the profile stack data structure established for the session. The data processing system is capable of parsing the input audio signal to identify a request and a trigger key corresponding to the request. The data processing system can generate a first action data structure responsive to the request that is compatible with the first profile layer of the profile stack data structure based on the trigger key and the second profile layer pushed to the profile stack data structure. The data processing system is capable of providing the first action data structure for execution. The data processing system is capable of tearing down the profile stack data structure to remove one of the first profile layer or the second profile layer from the profile stack data structure in response to detecting a trigger event.
At least one aspect relates to a method of processing a stack data structure. The method can be performed by a data processing system having one or more processors and memory. The method can include: an interface of the data processing system receives data packets including an input audio signal detected by a sensor of a local computing device. The method can include: the data processing system identifies an acoustic signature from the input audio signal. The method can include: the data processing system identifies an electronic account corresponding to the acoustic signature based on a lookup in a data store. The method can include: the data processing system establishes a session in response to identifying the electronic account, and a profile stack data structure for use in the session. The profile stack data structure can include a first profile layer having one or more policies configured by devices of third party entities. The method can include: the data processing system pushes a second profile layer retrieved from the account to the profile stack data structure established for the session. The method can include: the data processing system parses the input audio signal to identify a request and a trigger key corresponding to the request. The method can include: the data processing system generates a first action data structure responsive to the request that is compatible with a first profile layer of the profile stack data structure based on the trigger key and the second profile layer pushed to the profile stack data structure. The method can include: the data processing system provides the first action data structure for execution. The method can include: the data processing system disassembles the profile stack data structure to remove one of the first profile layer or the second profile layer from the profile stack data structure in response to detecting a trigger event.
At least one aspect relates to a digital assistant device. The digital assistant device can include an audio driver, a transducer, a sensor that detects an input audio signal, and a preprocessor component coupled to the audio driver, the transducer, and the sensor. The preprocessor component is capable of filtering the input audio signal to create a filtered input audio signal. The pre-processor component is capable of converting the filtered input audio signal into data packets. The preprocessor component is capable of transmitting the data packets to a data processing system that includes one or more processors and memory that execute a natural language processor component, an interface, a speaker recognition component, and a direct action application programming interface. The data processing system is capable of receiving the data packets comprising the filtered input audio signal detected by the sensor from the pre-processor component via the interface. The data processing system is capable of identifying an acoustic signature from the input audio signal. The data processing system can identify an electronic account corresponding to the acoustic signature based on a lookup in a data store. The data processing system can establish a session and a profile stack data structure for use in the session in response to identifying the electronic account. The profile stack data structure can include a first profile layer having one or more policies configured by devices of third party entities. The data processing system can push a second profile layer retrieved from the electronic account to the profile stack data structure established for the session. The data processing system is capable of parsing the input audio signal to identify a request and a trigger key corresponding to the request. The data processing system can generate a first action data structure responsive to the request that is compatible with the first profile layer of the profile stack data structure based on the trigger key and the second profile layer pushed to the profile stack data structure. The data processing system is capable of providing the first action data structure for execution. The data processing system is capable of tearing down the profile stack data structure to remove one of the first profile layer or the second profile layer from the profile stack data structure in response to detecting a trigger event. The data processing system can provide the status of the profile stack data structure to the preprocessor component. The audio driver of the digital assistant device is further capable of receiving an indication of a state of the profile stack data structure and generating an output signal based on the indication. The transducer of the digital assistant device is capable of further generating sound based on an output signal generated by the audio driver.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments and are incorporated in and constitute a part of this specification.
Drawings
The figures are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is an illustration of a system for processing a stack data structure via a computer network.
FIG. 2 is an illustration of the operation of a system for processing a stack data structure via a computer network.
FIG. 3 is an illustration of the operation of a system for processing a stack data structure via a computer network.
FIG. 4 is an illustration of the operation of a system for processing a stack data structure via a computer network.
FIG. 5 is an illustration of a method of processing a stack data structure via a computer network.
FIG. 6 is a block diagram illustrating the general architecture of a computer system that can be used to implement the elements of the systems and methods described and illustrated herein.
Detailed Description
The following are specific embodiments of various concepts and embodiments of methods, apparatuses, and systems related to routing packetized actions via a computer network. The various concepts introduced above and discussed in more detail below may be implemented in any of a number of ways.
The present disclosure relates generally to processing stack data structures to operate and improve the efficiency of digital assistants in a common location. The data processing system is capable of speaker recognition to identify an electronic account and then pushing a profile associated with the speaker to a profile stack data structure that includes a first layer having a baseline profile established by a third party entity associated with a public location. The data processing system is capable of tearing down profile stack data structures in response to a triggering event, thereby maintaining security and reducing erroneous remote procedure calls.
The present solution can reduce the amount of time consumed by a resource consumption, processor utilization, battery consumption, bandwidth utilization, audio file size, or speaker by: parsing the voice-based instruction from the end user, identifying an acoustic signature, selecting a corresponding profile, pushing the profile to a profile stack that includes a default profile in a first layer, constructing an action data structure using the selected profile, determining whether the action data structure matches the default profile, routing the action data structure to the corresponding device, and then tearing down the profile stack in response to a triggering event.
The system and method of the present solution can configure the digital assistant for public situations (public settings), such as hotel rooms, or allow guests to log in to the digital assistant for temporary use (e.g., 10 minutes, 30 minutes, 1 hour, 2 hours, 24 hours, 48 hours, 72 hours). The present solution can allow the digital assistant to intelligently engage (engage) and disengage (disengage) accounts by reverting to the previous configuration and erasing or protecting all session information. The digital assistant can interface in an intelligent manner by further establishing a session or link with any third party device or interface. The digital assistant can provide a secure authentication mechanism to help ensure that the correct device is used for service, such as showing a quick response code, optical code, bar code, or other visual or audible signal that can provide a fingerprint feature (finger print). The present solution can be disengaged by resetting the digital assistant to factory settings, automatically triggering disengagement, and providing a redundant mechanism to ensure proper disengagement. The present solution also allows for subscribing to digital assistants or digital content provided by digital assistants. For example, the weight of the digital components of a hotel providing a digital assistant can be weighted to provide a branding effect (branding) for the hotel. Further, if the user does not already have a digital assistant, the digital assistant can be provided with digital components.
Fig. 1 illustrates an example system 100 for processing a profile stack. The system 100 can include a content selection infrastructure. System 100 can include a data processing system 102. The data processing system 102 is capable of communicating with the content provider computing device 106, the third party device 146, or the local computing device 104 via the network 105. The network 105 can include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network or other area network, an intranet, a satellite network, and other communication networks such as a voice or data mobile phone network. The network 105 can be used to access information resources such as web pages, web sites, domain names, or uniform resource locators that can be presented, output, rendered, or displayed on at least one local computing device 104 such as a laptop computer, desktop computer, tablet computer, digital assistant device, smart phone, portable computer, or speaker. For example, via network 105, a user of local computing device 104 can access information or data provided by content provider 106. The computing device 104 may or may not include a display; for example, a computing device may include a limited type of user interface, such as a microphone and speaker. In some cases, the primary user interface of the computing device 104 may be a microphone and speaker or a voice interface.
The local computing device 104 can refer to a computing device or client device that is located in a public context such as the public location 202 or a private context (private setting) such as the private location 402. The term local can refer to a computing device being located where a user can interact with the computing device using voice input or other input. The local computing device can be located remotely from a remote server such as data processing system 102. Thus, for example, the local computing device 104 can be located in a hotel room, mall, bay, or other building or residence where a user can interact with the local computing device 104 using voice input, while the data processing system 102 can be remotely located in a data center. The local computing device 104 can be referred to as a digital assistant device.
The network 105 can include or constitute a presentation network, e.g., a subset of information resources available on the Internet, associated with a content placement or search engine results system or otherwise qualifying to include third party digital components as part of a digital component placement campaign. The data processing system 102 can use the network 105 to access information resources, such as web pages, web sites, domain names, or uniform resource locators, that can be rendered, output, rendered, or displayed by the local client computing device 104. For example, via network 105, a user of local client computing device 104 can access information or data provided by content provider computing device 106 or service provider computing device 108.
The network 105 may be any type or form of network and may include any of the following: point-to-point networks, broadcast networks, wide area networks, local area networks, telecommunication networks, data communication networks, computer networks, ATM (asynchronous transfer mode) networks, SONET (synchronous optical network) networks, SDH (synchronous digital hierarchy) networks, wireless networks, and wired networks. The network 105 may include wireless links such as infrared channels or satellite bands. The topology of the network 105 may include a bus, star, or ring network topology. The network may include a mobile telephone network using any one or more protocols for communication between mobile devices, including advanced mobile phone protocol ("AMPS"), time division multiple access ("TDMA"), code division multiple access ("CDMA"), global system for mobile communications ("GSM"), general packet radio service ("GPRS"), or universal mobile telecommunications system ("UMTS"). Different types of data may be transmitted via different protocols, or the same type of data may be transmitted via different protocols.
The system 100 can include at least one data processing system 102. The data processing system 102 can include at least one logic device, such as a computing device having a processor, to communicate with, for example, the computing device 104, the content provider computing device 106 (content provider 106), or the third party device 146 (or third party 146) via the network 105. Data processing system 102 can include at least one computing resource, server, processor, or memory. For example, data processing system 102 can include multiple computing resources or servers located in at least one data center. Data processing system 102 can include multiple logically grouped servers and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, a server farm, or a machine farm. Servers can also be geographically dispersed. The data center or machine farm may be managed as a single entity or the machine farm can include multiple machine farms. The servers within each machine farm can be heterogeneous—one or more of the servers or machines can operate in accordance with one or more types of operating system platforms.
Servers in a machine farm can be stored in a high-density rack system and associated storage systems and located in an enterprise data center. Integrating servers in this manner may improve system manageability, data security, physical security of the system, and system performance by locating servers and high-performance storage systems on a localized high-performance network, for example. Centralizing the data processing system 102 components, including all or some of the servers and storage systems, and coupling them with advanced system management tools allows for more efficient utilization of server resources, which saves power and processing requirements and reduces bandwidth consumption.
The system 100 can include, access, or otherwise interact with at least one third party device 146. The third party device 146 can include at least one logical device, such as a computing device having a processor, to communicate with the computing device 104, the data processing system 102, or the content provider 106 via the network 105, for example. The third party device 146 can include at least one computing resource, server, processor, or memory. For example, the third party device 146 can include a plurality of computing resources or servers located in at least one data center.
The content provider device 106 can provide the audio-based digital components for display by the local computing device 104 as audio output digital components. The digital component can include a bid for the good or service, such as a voice-based message stating: "Would you like me to order you a taxi? (do you want me to be you taxi for you. The content provider computing device 106 is also capable of providing audio-based digital components (or other digital components) to the data processing system 102 where they can be stored in the data store 124. The data processing system 102 can select an audio digital component and provide the audio digital component (or instruct the content provider computing device 104 to provide) to the local client computing device 104. The audio-based digital component can be audio only or can be combined with text, image or video data.
The third party device 146 can include, interface with, or otherwise communicate with the data processing system 102. The third party device 146 can include, interface with, or otherwise communicate with the local computing device 104. The third party device 146 can include, interface with, or otherwise communicate with the mobile computing device 144. The third party device 146 can include, interface with, or otherwise communicate with the content provider device 106. For example, the third party device 106 can provide a profile to the data processing system 102 to cause the data processing system 102 to update a stack profile data structure that is used to generate a response to a request associated with the local computing device 104. The third party device 106 is capable of providing configuration information or settings for the local computing device 104.
The local computing device 104 can include, interface with, or otherwise communicate with at least one sensor 134, transducer 136, audio driver 138, or pre-processor 140. The local computing device 104 can include a light source 148, such as a light indicator, a light emitting diode ("LED"), an organic light emitting diode ("OLED"), or other visual indicator, configured to provide a visual or optical output. The sensor 134 can include, for example, an ambient light sensor, a proximity sensor, a temperature sensor, an accelerometer, a gyroscope, a motion detector, a GPS sensor, a position sensor, a microphone, or a touch sensor. Transducer 136 can include a speaker or microphone. The audio driver 138 can provide a software interface to the hardware transducer 136. The audio driver is capable of executing an audio file or other instructions provided by the data processing system 102 to control the transducer 136 to generate corresponding sound waves or sound waves. The preprocessor 140 can include a processing unit having hardware configured to detect a keyword and perform an action based on the keyword. The preprocessor 140 can filter out one or more terms or modify the terms before transmitting the terms to the data processing system 102 for further processing. The preprocessor 140 is capable of converting analog audio signals detected by the microphone into digital audio signals and transmitting one or more data packets carrying the digital audio signals to the data processing system 102 via the network 105. In some cases, the preprocessor 140 is capable of transmitting data packets carrying some or all of the input audio signal in response to detecting an instruction to perform such transmission. The instructions can include, for example, a trigger key or other key or approval to transmit a data packet including the input audio signal to the data processing system 102.
The local client computing device 104 can be associated with an end user that enters the voice query as audio input (via the sensor 134) to the local client computing device 104 and receives audio output in the form of computer-generated voice, which can be provided to the local client computing device 104 from the data processing system 102 (or the content provider computing device 106 or the service provider computing device 108) and output from the transducer 136 (e.g., a speaker). The computer-generated speech can include a sound recording from a real person or a computer-generated language.
The data store 124 can include one or more local or distributed databases and can include a database management system. The data store 124 can include a computer data store or memory and can store one or more parameters 126, one or more policies 128, content data 130, signatures and accounts 132, or profile stacks 142, among other data. Parameters 126, policies 128, and signature 132 or profile stack 142 can include information such as rules regarding voice session based between local client computing device 104 and data processing system 102 (or third party device 146). The content data 130 can include digital components of audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with the local client computing device 104.
The data processing system 102 can include a content placement system having at least one computing resource or server. Data processing system 102 can include, interface with, or otherwise communicate with at least one interface 110. The data processing system 102 can include, interface with, or otherwise communicate with at least one natural language processor component 112. Data processing system 102 may include, interface with, or otherwise communicate with at least one stack engine component 114. Data processing system 102 can include, interface with, or otherwise communicate with at least one direct action application programming interface ("API") 116. The data processing system 102 can include, interface with, or otherwise communicate with at least one content selector component 118. The data processing system 102 can include, interface with, or otherwise communicate with at least one speaker recognition component 120. Data processing system 102 may include, interface with, or otherwise communicate with at least one data store 124. The at least one data store 124 can include or store parameters 126, policies 128, content data 130, signatures 132, or profile stacks 142 in one or more data structures or databases. Parameters 126 can include, for example, a threshold, distance, time interval, duration, score, or weight. The content data 130 can include, for example, content campaign information, content groups, content selection criteria, digital component objects, or other information provided by the content provider 106 or obtained or determined by the data processing system to facilitate content selection. The content data 130 can, for example, include historical effectiveness of content campaigns. Policy 128 can, for example, include a policy that allows or prevents certain types of actions or content delivery at local computing device 104. Signature 132 can include an acoustic or audio signature. Signature 132 can refer to an acoustic fingerprint that can include a reduced digital digest—a fingerprint that is deterministically generated from an audio signal, can be used to identify audio samples, or quickly locate similar items in an audio database. Signature 132 can include data that facilitates identification of a profile by speaker recognition component 120. The profile stack data structure 142 can include one or more profiles that are layered, stacked, or merged and applied to process the input audio signal at the local computing device 104.
The interface 110, natural language processor component 112, stack engine component 114, direct action API116, content selector component 118, or speaker recognition component 120 can each include at least one processing unit or other logic device, such as a programmable logic array engine, or module configured to communicate with a library stock or database 124. The interface 110, natural language processor component 112, stack engine component 114, direct action API116, content selector component 118, or speaker recognition component 120 and data store 124 can be separate components, a single component, or a portion of the data processing system 102. System 100 and its components, such as data processing system 102, can include hardware elements such as one or more processors, logic devices, or circuits.
The data processing system 102 is capable of obtaining anonymous computer network activity information associated with a plurality of computing devices 104. A user of the local computing device 104 or the mobile computing device 144 can positively calibrate the data processing system 102 to obtain network activity information corresponding to the local computing device 104 or the mobile computing device 144. For example, data processing system 102 can prompt a user of computing device 104 for consent to obtain one or more types of network activity information. The identity of the mobile computing device 144 or the user of the local computing device 104 can remain anonymous and the computing device 104 or 144 can be associated with a unique identifier (e.g., a unique identifier of the user or computing device provided by the user of the data processing system or computing device). The data processing system can associate each observation with a corresponding unique identifier.
The content provider 106 is able to establish an electronic content campaign. Electronic content promotional campaigns can be stored as content data 130 in the data store 124. Electronic content promotional campaigns can refer to one or more groups of content corresponding to a common theme. The content promotion campaign can include a hierarchical data structure including content groups, digital component data objects, and content selection criteria. To create a content campaign, the content provider 106 can specify values for campaign-level parameters for the content campaign. Campaign-level parameters can include, for example: campaign names, preferred content networks for placement of digital component objects, values for resources to be used for content campaigns, start and end dates of content campaigns, duration of content campaigns, time course, language, geographic location of placement of digital component objects, type of computing device on which digital component objects are provided. In some cases, flash (compression) can refer to when a digital component object is extracted from its source (e.g., data processing system 102 or content provider 106) and is countable. In some cases, due to the likelihood of click fraud, the robotic activity can be filtered and excluded from flashing. Thus, in some cases, a flash can refer to a measurement of the response by the Web server to a page request from the browser that is filtered out of the robot activity and error code and recorded at a point as close as possible to the opportunity to render the digital component object for display on the computing device 104. In some cases, a flash can refer to a visible or audible flash; for example, the digital component object is at least partially (e.g., 20%, 30%, 40%, 50%, 60%, 70%, or more) visible on a display device of the local client computing device 104 or audible via a speaker 136 of the computing device 104. Clicking or selecting can refer to user interaction with a digital component object, such as a voice response to an audible flash, a mouse click, a touch interaction, a gesture, a shake, an audio interaction, or a keyboard click. Conversion can refer to a user taking a desired action with respect to a digital component object; such as purchasing a product or service, completing a group survey, visiting an entity store corresponding to the digital component, or completing an electronic transaction.
The content provider 106 may further establish one or more content groups of the content campaign. The content group includes one or more digital component objects and corresponding content selection criteria, such as keywords, words, terms, phrases, geographic locations, type of computing device, time of day, interests, topics, or vertical elements. Content groups under the same content campaign can share the same campaign-level parameters, but may have customized specifications for specific content group-level parameters, such as keywords, negative keywords (e.g., preventing placement of digital components if negative keywords are present with respect to primary content), keyword bidding, or parameters associated with bidding or content campaigns.
To create a new content group, the content provider can provide values for the content group level parameters of the content group. The content group level parameters include, for example, content group names or content group titles, and bids for different content placement opportunities (e.g., automatic placement or managed placement) or effects (e.g., click, impression, or conversion). The content group name or content group topic can be one or more terms that the content provider 106 can use to capture topics or subjects for which the digital component objects of the content group are to be selected for display. For example, an automobile dealer can create a different content set for each brand of vehicle it is operating, and can further create a different content set for each model of vehicle it is operating. For example, examples of content group titles that may be used by an automobile dealer include "Make A sports car (brand a sports car)", "Make B sports car (brand B sports car)", "Make C sadan (brand C car)", "Make C truck)", "Make C hybrid (brand C hybrid car)", or "Make D hybrid (brand D hybrid car)". An example content campaign topic can be "hybrid" and include a content set of both "Make C hybrid" and "Make D hybrid".
The content provider 106 can provide one or more keywords and digital component objects to each content group. Keywords can include terms related to a product or service associated with or identified by the digital component object. Keywords can include one or more terms or phrases. For example, an automobile dealer may include "sports car", "V-6 engine", "four wheel drive", "fuel efficiency", as keywords for a content group or content campaign. In some cases, the content provider can specify negative keywords to avoid, prevent, block, or disable content placement for particular terms or keywords. The content provider can specify a type of match, such as exact match, phrase match, or broad match, for selecting the digital component object.
Content provider 106 can provide one or more keywords that data processing system 102 uses to select digital component objects provided by content provider 106. The content provider 106 can identify one or more keywords to bid on and further provide the bid amounts for the respective keywords. Content provider 106 can provide additional content selection criteria to be used by data processing system 102 to select digital component objects. Multiple content providers 106 can bid on the same or different keywords and the data processing system 102 can run a content selection process or advertisement auction in response to receiving an indication of the keywords of the electronic message.
Content provider 106 can provide one or more digital component objects for selection by data processing system 102. When a content placement opportunity becomes available, the data processing system 102 (e.g., via the content selector component 118) can select a digital component object that matches the resource allocation, content scheduling, maximum bidding, keywords, and other selection criteria specified for the content group. Different types of digital component objects may be included in a content group such as a voice digital component, an audio digital component, a text digital component, an image digital component, a video digital component, a multimedia digital component, or a digital component link. The digital component object (or digital component) can, for example, include: content items, online documents, audio, images, video, multimedia content, or sponsored content. Upon selection of a digital component, data processing system 102 can transmit the digital component object for rendering on computing device 104 or a display device of computing device 104. Rendering can include displaying the digital components on a display device or playing the digital components via speakers of the computing device 104. Data processing system 102 can provide instructions to computing device 104 to render digital component objects. The data processing system 102 can instruct the computing device 104 or an audio driver 138 of the computing device 104 to generate an audio signal or sound wave.
Data processing system 102 can include an interface component 110 that is designed, configured, constructed, or operative to receive and transmit information, for example, using data packets. The interface 110 is capable of receiving and transmitting information using one or more protocols, such as a network protocol. The interface 110 can include a hardware interface, a software interface, a wired interface, or a wireless interface. The interface 110 can facilitate converting or formatting data from one format to another. For example, the interface 110 can include an application programming interface that includes definitions for communication between various components, such as software components. The interface 110 is capable of communicating with the local computing device 104, the content provider device 106, the third party device 146, or the mobile computing device 144 via the network 105.
The data processing system 102 is capable of interfacing with an application, script, or program, such as an App, installed at the local client computing device 104 to communicate input audio signals to the interface 110 of the data processing system 102 and to drive components of the local client computing device to render output audio signals. The data processing system 102 is capable of receiving data packets or other signals that include or identify an audio input signal.
The data processing system 102 can include a speaker recognition component 120 that is designed, constructed, and operative to receive audio input signals detected by the local computing device 104, identify an acoustic signature, and identify an electronic account corresponding to the acoustic signature. The speaker recognition component 120 can receive data packets via the interface 110 that include an input audio signal detected by a sensor 134 or transducer 136 of the local computing device 104. The speaker recognition component 120 can identify an acoustic signature from the input audio signal. The speaker recognition component 120 can identify an electronic account corresponding to the acoustic signature based on a lookup in the data store.
The speaker recognition component 120 can receive data packets having payloads carrying an input audio signal. The speaker recognition component 120 can perform pre-filtering or pre-processing on the input audio signal to remove audio at certain frequencies. The prefilter can include a filter such as a low pass filter, a high pass filter, or a band pass filter. The filter can be applied in the frequency domain. The filters can be applied using digital signal processing techniques. The filter can be configured to retain frequencies corresponding to human speech or human voice while eliminating frequencies outside of typical frequencies of human voice. For example, the band pass filter can be configured to remove frequencies below a first threshold (e.g., 70Hz, 75Hz, 80Hz, 85Hz, 90Hz, 95Hz, 100Hz, or 105 Hz) and above a second threshold (e.g., 200Hz, 205Hz, 210Hz, 225Hz, 235Hz, 245Hz, or 255 Hz). Applying a bandpass filter can reduce computational resource utilization in downstream processing. In some cases, the preprocessor 140 on the local computing device 104 can apply a band pass filter before transmitting the input audio signal to the data processing system 102, thereby reducing network bandwidth utilization. However, it may be more efficient to provide the input audio signal to the data processing system 102 to allow the data processing system 102 to perform filtering based on the computing resources available to the local computing device 104.
The speaker recognition component 120 can apply additional preprocessing or pre-filtering techniques to facilitate identifying an electronic account corresponding to a speaker. For example, the speaker recognition component 120 can apply noise reduction techniques to reduce the level of ambient noise that can interfere with speaker recognition. Noise reduction techniques can improve the accuracy and speed of speaker recognition, thereby improving the effectiveness of the data processing system 102 in recognizing electronic accounts.
The speaker recognition component 120 can access the signature 132 stored in the data store 124. The speaker recognition component 120 can analyze the filtered input audio signal to identify a signature and use the signature to identify an electronic account. Thus, the speaker recognition component 120 can perform speaker recognition or voice recognition to identify an electronic account corresponding to the signature of the input audio signal.
The speaker recognition component 120 can be configured with one or more speaker recognition techniques, such as pattern recognition. The speaker recognition component 120 can be configured with a text independent speaker recognition process. In a text-independent speaker recognition process, the text used to establish an electronic account can be different from the text used to later recognize the speaker.
For example, the speaker recognition component 120 can identify acoustic features in the input audio signal that differ between input sound sources. The acoustic features can reflect a physical pattern or learned pattern that can correspond to a unique input sound source. The acoustic features can include, for example, pitch or speech style of the speech. Techniques for identifying, processing and storing signatures can include frequency estimation (e.g., instantaneous fundamental frequency or discrete energy separation algorithms), hidden markov models (e.g., random models for modeling random change systems where future states depend on current states and the modeled system has unobserved states), gaussian mixture models (e.g., parametric probability density functions expressed as weighted sums of gaussian component densities), pattern matching algorithms, neural networks, matrix representations, vector quantization (e.g., quantization techniques in signal processing that allow modeling probability density functions by distribution of prototype vectors), or decision trees. Other techniques can include de-speaker techniques, such as a team (co) model and a world model. The speaker recognition component 120 can be configured with a machine learning model to facilitate pattern recognition or adapt to speaker characteristics.
After identifying the acoustic signature in the input audio signal, the speaker recognition component 120 can perform a lookup in the data store 124 or the signature data structure 132. The signature stored in the signature data structure 132 can be mapped to an identifier of the electronic account. The speaker recognition component 120 can perform a lookup in the signature data structure 132 using the signature identified in the input audio signal to retrieve an electronic account corresponding to the signature of the input audio.
In some cases, the speaker recognition component 120 can determine that an electronic account corresponding to the acoustic signature does not exist based on the lookup. For example, the signature may not be stored in the signature data structure 132, or an electronic account for the signature may not have been established. The lookup may return a null value or set. In response to determining that no signature or electronic account exists, the speaker recognition component 120 can create an electronic account in the data store. The speaker recognition component 120 can update the signature data structure 132 to include the new signature constructed from the input audio signal and the corresponding electronic account. The speaker recognition component 120 can map the electronic account to a new acoustic signature.
The data processing system 102 can include, interface with, or otherwise access a stack engine component 114, the stack engine component 114 being designed, constructed, and operative to establish a session and one or more profiles for use during the session. The stack engine component 114 can receive an indication of the electronic account from the speaker recognition component 120. Stack engine component 114 can retrieve information associated with the electronic account from signature and account data structure 132. The electronic account can store information that facilitates processing an input audio query and generating a response. The electronic account can include a profile corresponding to a speaker providing the input audio signal. The profile can include tags, rules, preferences, identifiers, subscriptions, account settings, or device configuration settings. The profile can include configuration information that interacts with other remote devices such as mobile computing device 144 associated with the electronic account or other networked devices associated with the electronic account.
For example, the electronic account can include a tag of a networked device, such as a thermostat configured to interface with the network 105. The thermostat can be located at a first location (e.g., a residence) associated with a speaker corresponding to the electronic account. In the profile, the thermostat can have the label "living room" thermostat. When the data processing system 102 receives the input query "what is the temperature in the living room (what is the temperature in the living room)" or "set the temperature in the living room to 70 improvements (set the temperature in the living room to 70 degrees)", the data processing system 102 can determine via the profile to link the electronic account to the thermostat with the tag "living room" and then provide the tag to the direct action API116 to generate an action data structure corresponding to the thermostat labeled "living room".
However, the local computing device 104 that detected the input audio signal may not be located at the first location. Instead, the local computing device 104 can be located at a second location that is physically and geographically separate from the first location. The second location can be a location managed, controlled, or otherwise maintained by a third party entity associated with the third party device. The second location can be an unsafe location, a public location, or a temporary location, such as a hotel room, conference hall, retail store, rental vehicle, guest room, hospitality, or dormitory.
Third party devices 146 that maintain public or unsafe locations are able to establish and maintain local computing devices 104. The third party device 146 can establish a baseline or default profile for the local computing device 104. The third party device 146 is capable of providing a first profile. The first profile can be a baseline profile, a default profile, or a third party profile. The third party device 146 is able to establish a first profile. The first profile can include one or more policies or rules established by the third party device 146. For example, the third party device 146 can provide policy, rules, or configuration settings that block or prevent certain types of activities or actions while weighting other types of activities or actions. Policies can be stored in the first profile.
The first profile can contain a tag of the internet-connected device. The tags in the first profile can be established or provided by the third party device 146. For example, the tag can correspond to an internet-connected device (e.g., an internet-connected thermostat, an internet-connected light source, an internet-connected smoke alarm, an internet-connected appliance, an internet-connected display, an internet-connected television, or an internet-connected speaker). The tags of these internet-connected devices can be provided by third-party entities. For example, the tag can be "hotel thermostat" or "Brand A Hotel thermostat (brand a hotel thermostat)".
The third party device 146 can provide the first profile to the data processing system 102 to cause the data processing system 102 to push the first profile to a profile stack for session initiation associated with the local computing apparatus 104. The stack engine component 114 can store, place, or stack the first profile in a first profile layer in a profile stack established for the session. The profile stack data structure can include a first profile layer having one or more policies configured by a device of a third party entity (e.g., third party device 146).
In response to identifying the electronic account, stack engine component 114 can establish the session. A session can refer to a communication session, a digital assistant session, a direct action session, a content selection session, a digital component selection session, or a profile session. The session can have a duration. The session can continue until a termination event or condition occurs. The termination event can cause the session to end. After termination, the session state can be stored. After the session is terminated, the profile in the profile stack can be updated.
Stack engine component 114 can build a profile stack data structure for the session. The stack engine component 114 can initialize a profile stack data structure to include a first profile provided by the third party device 146.
The stack engine component 114 can push a first profile (e.g., a default profile of the local computing device 104) to a first layer in a profile stack. For example, the stack engine component 114 can determine that the default profile is provided by a third party device 146 associated with the same third party that maintains, owns, manages, or manages the local computing device 104.
The stack engine component 114 can then retrieve a second profile corresponding to the electronic account and signature. The stack engine component 114 can push the second profile to the profile data structure. For example, the first profile layer can include a first profile and the second profile layer can include a second profile.
Stack engine component 114 can provide a profile stack including a first profile layer and a second profile layer to one or more components of data processing system 102 for further processing. In some cases, stack engine component 114 can fuse, merge, or otherwise combine the first profile layer and the second profile layer to create a single profile layer. In some cases, the stack engine component 114 can provide a profile stack having two profile layers to the direct action API 116 or the content selector component 118 for further processing.
Establishing a profile stack data structure having a second profile layer and a first profile layer can include interfacing with one or more internet-connected devices, sessions, interfaces, or third-party devices associated with or indicated in the first profile layer and the second profile layer. For example, the first profile layer can include the internet-connected devices 204, 206, 208, 210, and 212 depicted in the secure public scenario 202 of fig. 2, and the second profile layer can include the internet-connected devices 204, 206, 208, 210, and 212 depicted in the private scenario 402 of fig. 4. The internet-connected devices in public context 202 can have different identifiers than the internet-connected devices in private context 402. Data processing system 102, after establishing the profile stack data structure, can ping, poll, or otherwise query each of the internet connected devices to perform a status check or enter a ready state.
The data processing system 102 can use the profile stack to process queries or actions received from the local computing device 104 via the input audio signal. The data processing system 102 can use the NLP component 112 to identify queries in the input audio signal, and then the direct action API 116 can use the profile stack to process the input queries to generate action data structures that are consistent and conforming to the profile stack.
For example, the data processing system 102 can execute or run the NLP component 112 to receive or obtain an audio signal and parse the audio signal. For example, the NLP component 112 can provide interaction between a person and a computer. The NLP component 112 can be configured with techniques for understanding natural language and allowing the data processing system 102 to derive meaning from human or natural language input. The NLP component 112 can include or be configured with techniques based on machine learning, such as statistical machine learning. The NLP component 112 can parse the input audio signal using a decision tree, statistical model, or probabilistic model. For example, the NLP component 112 can perform functions such as named entity recognition (e.g., given a text stream, determining which items in the text map to proper names, such as people or places, and what the type of each such name is, such as people, places, or organizations), natural language generation (e.g., converting information from a computer database or semantic intent to understandable human language), natural language understanding (e.g., converting the text to a more formal representation, such as a first-order logical structure that a computer module can manipulate), machine translation (e.g., automatically translating text from one human language to another), lexical segmentation (e.g., separating words into individual morphemes and identifying classes of morphemes, which can be challenging based on the morphemes or structural complexity of the words of the language under consideration), question answering (e.g., determining answers to human language questions, which may be explicit or open-ended answers), semantic processing (e.g., processing that may occur after recognizing words and encoding their meanings to correlate the recognized words with other words having similar meanings).
The NLP component 112 converts the audio input signal into recognized text by comparing the input signal to a stored set of representative audio waveforms (e.g., stored in the data store 124) and choosing the closest match. The set of audio waveforms can be stored in data repository 124 or other database accessible to data processing system 102. Representative waveforms are generated across a large set of users and may then be enhanced by voice samples from the users. After the audio signal is converted to recognized text, the NLP component 112 matches the text with terms associated with actions that the data processing system 102 is capable of servicing, for example, via cross-user training or by manually specifying.
The audio input signal can be detected by a sensor 134 or transducer 136 (e.g., a microphone) of the local client computing device 104. Via transducer 136, audio driver 138 or other components of local client computing device 104 can provide audio input signals to data processing system 102 (e.g., via network 105), where the audio input signals can be received (e.g., through interface 110) and provided to NLP component 112 or stored in data store 124.
The NLP component 112 is capable of obtaining an input audio signal. The NLP component 112 can identify at least one request or at least one trigger key corresponding to a request from an input audio signal. The request can indicate an intention or topic of the input audio signal. The trigger key can indicate the type of action that is likely to be taken. For example, the NLP component 112 can parse the input audio signal to identify at least one request to go to a banquet and watch a movie at night. The trigger key can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, the trigger key "go (go …)" or "to go to (go …)" from the input audio signal can indicate a need for a vehicle. In this example, the input audio signal (or identified request) does not directly express an intent for the transportation, however the trigger key indicates that the transportation is an auxiliary action to at least one other action indicated by the request.
The NLP component 112 can parse the input audio signal to identify, determine, retrieve, or otherwise obtain the request and trigger keywords. For example, the NLP component 112 can apply semantic processing techniques to the input audio signal to identify a trigger key or request. The NLP component 112 can apply semantic processing techniques to the input audio signal to identify trigger phrases that include one or more trigger keywords, such as a first trigger keyword and a second trigger keyword. For example, the input audio signal can include the phrase "I need someone to do my laundry and my dry cleaning (i need to have i wash and dry clean)". The NLP component 112 can apply semantic processing techniques or other natural language processing techniques to the data packet that includes the statement to identify the trigger phrases "do my laundry" and "do my dry cleaning (i am)". The NLP component 112 can further identify a plurality of trigger keywords, such as laundry and dry cleaning. For example, the NLP component 112 can determine that the trigger phrase includes a trigger keyword and a second trigger keyword.
The NLP component 112 can filter the input audio signal to identify trigger keywords. For example, the data packets carrying the input audio signal can include "It would be great if I could get someone that could help me go to the airport (if i can find a person who will help me go to the airport)", in which case the NLP component 112 can filter out one or more of the following terms: "it", "would", "be", "great", "if", "I", "could", "get", "somerone", "that", "could", or "hellp". By filtering out these terms, the NLP component 112 can more accurately and reliably identify trigger keywords, such as "go to the airport (go to airport)" and determine that this is a request for taxi or carpool services.
In some cases, the NLP component can determine that a data packet carrying an input audio signal includes one or more requests. For example, the input audio signal can include the sentence "I need someone to do my laundry and my dry cleaning". The NLP component 112 can determine that this is a request for laundry services and dry cleaning services. The NLP component 112 can determine that this is a single request for a service provider that can provide both laundry services and dry cleaning services. The NLP component 112 can determine that this is two requests: a first request for a service provider to fulfill the laundry service, and a second request for a service provider to provide the dry cleaning service. In some cases, the NLP component 112 can combine the plurality of determined requests into a single request and transmit the single request to the third party device 146. In some cases, the NLP component 112 can transmit each request to another service provider device or both requests to the same third party device 146, respectively.
The data processing system 102 can include a direct action API 116 designed and constructed to generate an action data structure in response to a request based on the trigger key. The processor of the data processing system 102 can invoke the direct action API 116 to execute a script that generates a data structure to provide to a third party device 146 or other service provider to order a service or product, such as a car from a carpool service. The direct action API 116 can obtain data from the data store 124 and, with the end user's consent, from the local client computing device 104 to determine location, time, user account, logistics, or other information to allow the third party device 146 to perform operations, such as reserving a car from a car pooling service. Using the direct action API 116, the data processing system 102 is also able to communicate with the third party device 146 to complete the conversion, which in this example is accomplished by making a taxi service pick-up reservation.
The direct action API 116 is capable of receiving a profile stack built for a session by the stack engine component 114. As determined by data processing system 102, direct action API 116 can apply one or more policies from the profile stack to satisfy the end user's intent when performing the specified action. Based on the actions specified in its inputs and the stack profiles and policies in the profile stack built for the session by stack engine component 114, direct action API 116 is able to execute code or dialog scripts that identify parameters required to satisfy the user's request. Such code can, for example, look up additional information such as home automation service names or third party services in data store 124, or it can provide audio output for rendering at local client computing device 104 to ask the end user for questions such as the intended destination of the requested taxi. The direct action API 116 can determine parameters and can package information into an action data structure that can then be sent to another component, such as the content selector component 118, or to the service provider computing device 108 to be fulfilled.
The direct action API 116 is capable of receiving instructions or commands from the NLP component 112 or other components of the data processing system 102 to generate or build an action data structure. The direct action API 116 can determine the type of action to select a template from a template store 122 stored in a data store 124. The action type can include, for example, a service, a product, a reservation, or ticketing. The action types can further include a service type or a product type. For example, the service type can include a carpool service, a meal delivery service, a laundry service, a career service, a repair service, a home service, a device automation service, or a media streaming service. The product type can include, for example, clothing, footwear, toys, electronics, computers, books, or jewelry. The appointment type can include, for example, a dinner appointment or a hair salon appointment. The ticket types can include, for example, movie tickets, stadium tickets, or air tickets. In some cases, service types, product types, reservation types, or ticket types can be categorized based on price, location, transportation, availability, or other attributes.
The NLP component 112 can parse the input audio signal to identify a request and a trigger key corresponding to the request and provide the request and the trigger key to the direct action API 116 such that the direct action API generates a first action data structure responsive to the request that is compatible with a first profile layer of the profile stack data structure based on the trigger key and a second profile layer pushed to the profile stack data structure.
Upon identifying the type of request, the direct action API 116 can access the corresponding template from the template store 122. The templates can include fields in the structured dataset that can be populated by the direct action API 116 to facilitate operations requested by the input audio detected via the local computing device 104 of the third party device 146 (such as operations to dispatch a taxi to an end user at a pickup location and to send the end user to a destination location). The direct action API 116 can perform a lookup in the template store 122 to select a template that matches one or more characteristics of the trigger key and the request. For example, if the request corresponds to a request for a car or lift to a destination, the data processing system 102 can select a ride share service template. The carpool service template can include one or more of the following fields: a device identifier, a guest location, a destination location, a number of passengers, or a type of service. The direct action API 116 can populate the fields with values. To populate the fields with values, the direct action API 116 can ping, poll, or otherwise obtain information from one or more sensors 134 of the computing device 104 or a user interface of the device 104. For example, the direct action API 116 can detect the source location using a location sensor, such as a GPS sensor. The direct action API 116 can obtain further information by submitting surveys, prompts, or queries to an end user of the computing device 104. The direct action API can submit surveys, prompts, or queries via the interface 110 of the data processing system 102 and a user interface (e.g., an audio interface, a voice-based user interface, a display, or a touch screen) of the computing device 104. Thus, the direct action API 116 is able to select a template of an action data structure based on the trigger key or request, populate one or more fields in the template with information detected by the one or more sensors 134 or obtained via the user interface, and generate, create, or otherwise construct an action data structure to facilitate the third party device 146 to perform operations.
To construct or generate the action data structure, data processing system 102 can identify one or more fields in the selected templates to populate with values. These fields can be populated with values, strings, unicode (Unicode) values, boolean logic, binary values, hexadecimal values, identifiers, location coordinates, geographic areas, time stamps, or other values. The fields or data structures themselves can be encrypted or masked to maintain data security.
Upon determining the fields in the template, data processing system 102 can identify values for the fields to populate the fields of the template to create an action data structure. Data processing system 102 can obtain, retrieve, determine, or otherwise identify values for fields by performing a lookup or other query operation on data store 124.
In some cases, data processing system 102 can determine that no information or values for a field are present in data store 124. Data processing system 102 can determine that the information or values stored in data store 124 are outdated, stale, or otherwise unsuitable for building an action data structure in response to trigger keywords and requests identified by NLP component 112 (e.g., the location of local client computing device 104 may be an old location instead of a current location, an account may be outdated, a destination restaurant may have migrated to a new location, physical activity information, or traffic patterns).
If data processing system 102 determines that the values or information of the template fields are not currently accessible in the memory of data processing system 102, data processing system 102 is able to retrieve the values or information. The data processing system 102 can obtain or obtain information by querying or polling one or more available sensors of the local client computing device 104, prompting an end user of the local client computing device 104 for information, or using the HTTP protocol to access online web-based resources. For example, the data processing system 102 can determine that it does not have the current location of the local client computing device 104, which may be a desired field of the template. The data processing system 102 is capable of querying the local client computing device 104 for location information. The data processing system 102 can request that the local client computing device 104 provide location information using one or more location sensors 134, such as global positioning system sensors, WIFI triangulation, cell tower triangulation, bluetooth beacons, IP addresses, or other location sensing technologies.
In some cases, data processing system 102 can use the second profile to generate an action data structure. Data processing system 102 can then determine whether the action data structure generated using the second profile matches the first profile. For example, the first profile can include policies that block one type of action data structure, such as purchasing a product from an online electronic retailer via the local computing device 104. The input audio detected by the local computing device 104 may have included a request to purchase a product from an online electronic retailer. The data processing system 102 may have used the second profile to identify account information associated with the online e-retailer and then generate an action data structure to purchase the product. The action data structure can include an account identifier corresponding to an electronic account associated with the acoustic signature identified by the speaker recognition component 120.
After generating the action data structure, the direct action API 116 may attempt to transmit the action data structure to the online electronic retailer. However, stack engine component 114 is capable of intercepting action data structures. The stack engine component 114 can analyze the action data structure to determine whether it complies with one or more policies in a first profile layer in a profile stack established for a session. If the stack engine component 114 determines that the action data structure of purchasing the product from the electronic retailer matches, the stack engine component 114 can release the action data structure. However, if the stack engine component determines that the action data structure violates or does not conform to the first profile layer, the stack engine component 114 can block the action data structure.
In some cases, the direct action API 116 can retrieve the profile stack and identify a first profile layer and a second profile layer, where the second profile layer corresponds to a subsequently pushed second profile. The direct action API 116 can use the last pushed profile, such as the second profile, to generate an action data structure. The direct action API 116 can then compare the action data structure generated using the second profile to one or more policies contained in the first profile. Based on the comparison of the usage policies, the direct action API 116 can determine whether to approve the action data structure or block the action data structure.
For example, the data processing system 102 can generate the first action data structure based on the trigger key and a second profile layer pushed to the profile stack. The data processing system 102 is capable of generating a first action data structure in response to a request in an input audio signal. The data processing system 102 can compare the first action data structure to one or more policies of a first profile layer, where the first profile layer corresponds to a default profile layer or a baseline profile layer. Based on a comparison of the first action data structure with one or more policies of the first profile layer, the data processing system 102 can determine that the first action data structure is compatible with the first profile layer. In response to determining that the first action data structure is compatible with the first profile layer, the data processing system 102 can provide the first action data structure for execution.
Policies in the first profile layer can include policies that block one type of action data structure. Types of action data structures that can be blocked can include, for example, action data structures that purchase products or services from third party competitor entities, unsafe actions, or network bandwidth intensive actions (e.g., streaming 4K resolution multimedia content, downloading large data files such as over 50 megabytes, 100 megabytes, or more). The data processing system can compare the type of the first action with the type of the action data structure indicated by the one or more policies of the first profile layer to determine whether the first action data structure is compatible with the first profile layer. If the policy allows (e.g., the policy does not prevent) the first action data structure, data processing system 102 can approve the first action data structure.
In some cases, the data processing system 102 can receive trigger keywords and profile stack data structures identified by a natural language processor. Based on the trigger key and the profile stack data structure, the data processing system 102 is able to select digital components that are compatible with both the first profile layer and the second profile layer. The digital component can refer to an augmented digital component. For example, the data processing system 102 can include, execute, or otherwise communicate with the content selector component 118 to receive a trigger key identified by the natural language processor and select a digital component via a real-time content selection process based on the trigger key. The content selection process can refer to or include selecting sponsored digital component objects provided by the third party content provider 106. The real-time content selection process can include: the digital components provided by the plurality of content providers are parsed, processed, weighted, or matched to select one or more digital components for provision to the service of the computing device 104. The content selector component 118 is capable of performing the content selection process in real-time. Making the content selection process in real-time can refer to making the content selection process in response to a request for content received via the local client computing device 104. The real-time content selection process can be performed (e.g., initiated or completed) within a time interval (e.g., 5 seconds, 10 seconds, 20 seconds, 30 seconds, 1 minute, 2 minutes, 3 minutes, 5 minutes, 10 minutes, or 20 minutes) of receiving the request. The real-time content selection process can occur during a communication session with the local client computing device 104 or within a time interval after termination of the communication session.
For example, the data processing system 102 can include a content selector component 118 designed, constructed, configured, or operative to select digital component objects. To select digital components for display in a speech-based environment, the data processing system 102 (e.g., via the NLP component 112) can parse the input audio signal to identify keywords (e.g., trigger keywords), and use the keywords to select matching digital components based on broad matches, exact matches, or phrase matches. For example, the content selector component 118 can analyze, parse, or otherwise process the topics of the candidate digital components to determine whether the topics of the candidate digital components correspond to topics of keywords or phrases in the input audio signal detected by the microphone of the local client computing device 104. The content selector component 118 may use image processing techniques, character recognition techniques, natural language processing techniques, or database lookup to identify, analyze, or recognize speech, audio, terms, characters, text, symbols, or images in the candidate digital component. The candidate digital component may include metadata indicating a subject matter of the candidate digital component, in which case the content selector component 118 may process the metadata to determine whether the subject matter of the candidate digital component corresponds to the input audio signal.
The content selector component 118 can further utilize information provided in the profile stack for content selection. The content selector component 118 can utilize a second profile layer that can correspond to an electronic account associated with a speaker providing the input audio signal detected by the local computing device 104. The content selector 118 can also use information associated with a first profile layer that can correspond to a default profile layer provided by the third party device 146. The content promotion campaign provided by the content provider 106 can include content selection criteria that the data processing system 102 can match with criteria indicated in the second profile layer or the first profile layer.
The profile layer can alter the weights or scores used by the content selector component 118 to select the digital components. For example, a first profile layer established by a third party device can increase the weight or score of a digital component that targets or describes a product or service provided by a third party entity while decreasing the weight or score of a product or service provided by a competitor of the third party entity. The local computing device 104 may be located in a context controlled by a third party entity, so the third party entity is able to establish content selection rules, policies, or weights in the first profile layer to be used by the content selector component 118 during content selection.
By selecting digital components using the second profile layer, the content selector component 118 can reduce over-transmission of digital components by more precisely selecting digital components based on the second profile layer than just the first profile layer. The use of a profile stack built from multiple profiles to select digital components, rather than just using a first tier (or default tier) or using only a second tier (profile associated with an electronic account), may result in erroneous or irrelevant digital component selections. The first profile layer can provide information associated with a public or unsecure location where a third party entity or local computing device 104 is located, which can facilitate content selection or prevent erroneous content selection. For example, the input audio signal can include a request for dry cleaning services. The content selector component 118 may receive the request and attempt to identify the supplemental digital component provided by the content provider device 106. To identify the supplemental content provider, the content selector component 118 can perform a real-time content selection process using one or more characteristics associated with the request. The content selector component 118 can further input information obtained from the second profile layer. Using information from the second profile layer, the content selector component 118 can select a digital component corresponding to the dry cleaning service provider. However, the first profile layer can include policies that prevent the provision of supplemental digital components associated with the dry cleaning service provider because third party entities that establish the first profile layer can provide preferred dry cleaning services. The content selector component 118 may not have selected a digital component of the dry cleaning service provided by the third party entity because the third party entity may not have established their own content campaign for the dry cleaning service. Thus, without utilizing a profile stack that includes both the first profile layer and the second profile layer, the data processing system 102 may have erroneously provided supplemental digital components corresponding to the dry cleaning service provider when the preferred digital components correspond to the dry cleaning service provided by the third party entity identified in the first profile layer. Thus, data processing system 102 can overlay or replace selected digital components with preferred digital components indicated via the first profile layer (or default profile layer).
In some cases, the content selector component 118 can parse the first profile layer to determine whether the first profile layer includes policies or information that prevent selection of one type of digital component and prevent execution of a real-time content selection process, thereby reducing utilization of computing resources and potentially reducing delay or latency in providing the digital component in response to a request contained in the input audio signal.
The content provider 106 may provide additional indicators when setting up a content campaign that includes digital components. The content provider 106 may provide content campaign or content group level information that the content selector component 118 may identify by conducting a lookup using information about candidate digital components. For example, the candidate number component may include a unique identifier that may be mapped to a content group, content campaign, or content provider. The content selector component 118 can determine information about the content provider 106 based on information in the content campaign data structure stored in the data store 124.
The data processing system 102 is capable of receiving requests for content for presentation on the computing device 104 via a computer network. The data processing system 102 can identify the request by processing the input audio signal detected by the microphone of the local client computing device 104. The request can include selection criteria for the request, such as device type, location, and keywords associated with the request. The request can include an action data structure or an action data structure.
In response to the request, data processing system 102 can select a digital component object from data store 124 or a database associated with content provider 106 and provide the digital component via network 105 for presentation via computing device 104. The digital component object can be provided by a different content provider device 108 than the third party device 146. The digital component can correspond to a different service type than the service type of the action data structure (e.g., taxi service versus meal service). Computing device 104 is capable of interacting with digital component objects. The computing device 104 is capable of receiving an audio response to the digital component. The computing device 104 can receive an indication of selection of a hyperlink or other button associated with the digital component object that causes or allows the computing device 104 to identify the service provider 108, request a service from the service provider 108, instruct the service provider 108 to fulfill the service, transmit information to the service provider 108, or otherwise query the third party device 146.
The data processing system 102 (e.g., via the interface 110 and the network 105) is capable of transmitting data packets including output signals responsive to an input audio signal or a request or query thereof. The output signals can cause an audio driver component 138 of the client device 104 or an audio driver component executed by the client device 104 to drive a speaker (e.g., transducer 136) of the local computing device 104 to generate sound waves corresponding to the output signals.
Data processing system 102 (e.g., via stack engine component 114) can disassemble the profile stack data structure to remove one of the first profile layer or the second profile layer from the profile stack data structure. The data processing system can be disengaged from the electronic account by reverting to a previous configuration or a default configuration and erase or protect all information associated with the session and the electronic account. For example, the data processing system can remove or delete the second profile layer from the profile stack data structure configured for the local computing device 104. Data processing system 102 can restore or reset local computing device 104 to a factory set or default configuration. Data processing system 102 is able to upload any session-related information to the second profile stored in data processing system 102 and remove or clear any local copy of the information associated with the second profile.
In response to detecting the trigger event, the data processing system 102 can remove one of the first profile layer or the second profile layer from the profile stack. The trigger event can be based on a time interval, instruction, event, location, geofence, unauthorized use, fraud detection, or new speaker identification. The data processing system 102 can determine to remove one of the first profile or the second profile based on the type of the trigger event.
The data processing system 102 (e.g., via the speaker recognition component 120) can determine that a disparate user is providing an input audio signal to the local computing device 104. The different user can be a second user different from the first user. The second user can have a different acoustic signature. The speaker recognition component 120 can detect the second acoustic signature, determine that a different user is present, and then terminate the session with the first user. The speaker recognition component 120 can provide an indication of a second, different user to the stack engine component 114, which can remove the second profile layer from the profile stack. In response to receiving an indication of a second user different from the first user, stack engine component 114 can clear the profile stack data structure or remove only the second profile layer corresponding to the first user.
The data processing system 102 receives, via the interface 110, a second data packet including a second input audio signal detected by a sensor 134 of a client device (e.g., the local computing device 104). The second input audio signal can be detected after the audio signal. The data processing system 102 (e.g., the speaker recognition component 120) is capable of identifying a second acoustic signature from the second input audio signal. The second acoustic signature can be different from the first acoustic signature. The data processing system 102 can determine the trigger event based on identifying a second acoustic signature that is different from the first acoustic signature.
In response to inactivity for a time interval, stack engine component 114 can clear the profile stack or remove the second profile layer. In response to the user corresponding to the second profile layer not providing any voice input for a time interval such as 5 minutes, 10 minutes, 15 minutes, 20 minutes, 25 minutes, 30 minutes, 1 hour, or longer, stack engine component 114 can clear the profile stack or the second profile layer. Clearing the profile stack or removing the second profile layer can improve security and maintain a minimal profile stack in memory.
In response to determining that the user corresponding to the second profile layer has left a public location or an unsafe location corresponding to the local computing device 104 or a third party entity, the stack engine component 114 can clear the profile stack. The stack engine component 114 can receive an indication from the mobile computing device 144 that the user can carry that the mobile computing device 144 is greater than a threshold distance from the local computing device 104. The threshold distance can be 20 meters, 25 meters, 50 meters, 100 meters, 200 meters, 500 meters, 750 meters, 1000 meters, or more. For example, the stack engine component 114 can establish a geofence around the local computing device 104. Geofencing can refer to a virtual geographic boundary defined by a global positioning system ("GPS") or radio frequency identification ("RFID") or near field communication beacon that allows software to trigger a response when a mobile device enters or leaves a particular area around the local computing device 104. Thus, when a user leaves the hotel room with their mobile computing device 144, the data processing system 102 can automatically remove the second profile layer from the profile stack for processing voice input detected by the local computing device 104.
The stack engine component 114 can interface with the third party device 146 and receive an indication from the third party device 146 to clear the profile stack or remove the second profile layer. For example, the third party device 146 can include an electronic hotel guest management system that receives an indication that the user associated with the second profile layer has transacted a hotel check-out procedure. In response to receiving an indication that the tenant has returned, the third party device 146 can forward the indication to the data processing system 102. The data processing system 102 (e.g., stack engine component 114) can receive an indication that the tenant has transacted a return of the room, and in response to the indication, remove a second profile layer from the profile stack for processing voice input associated with the local computing device 104, thereby tearing down the profile stack.
Disassembling the profile stack data structure can include removing or purging one or more profiles from the profile stack. Tearing down the profile stack can include removing only the first profile layer, removing only the second profile layer, or removing both the first profile layer and the second profile layer. For example, the data processing system can remove a second profile layer corresponding to the electronic account corresponding to the acoustic signature while retaining a first profile layer corresponding to the default profile layer.
Fig. 2 is an illustration of the operation of the system 100 processing a profile stack. The system 100 is capable of operating in an environment 200. The environment 200 can include one or more components of the system 100 depicted in fig. 1 or the system 600 depicted in fig. 6. The environment 200 can include a secure public location 202. Secure public location 202 can refer to a public location. A common location can refer to a location, place, building, house, room, or other structure or place where multiple users can occupy at the same time or at different times or can be accessed by multiple users. For example, a public place or location can include a hotel room, motel room, guest room, rental car, physical retail store, mall, park, office, or compartment. In this example, the secure public location 202 can be a hotel room. The common location 202 can be secure in that the mobile computing device 144 may be located within the location 202, thereby indicating that the user may be present. However, regardless of whether the mobile computing device 144 is located within the location 202, the system may treat the location 202 as unsafe based on a triggering event or an inactivity interval.
The hotel room (or secure public place 202) can include several internet-connected devices, such as a connected telecommunications device 204 (e.g., a connected telephone), a connected thermostat 206, a connected light fixture 208, a connected speaker 210 (or sound system), or a connected multimedia display 212 (or smart television). The internet-connected device 204, 206, 208, 210, or 212 can be connected to the network 105 via a wireless gateway 214 (e.g., a network router, wireless router, or modem) that can provide access to the network 105. The internet-connected device 204, 206, 208, 210, or 212 can be monitored, managed, or controlled via the data processing system 102. In some cases, the internet-connected device 204, 206, 208, 210, or 212 can be monitored, managed, or controlled by the third party device 146 via the data processing system 102.
In the illustrative environment 200 depicted in fig. 2, the mobile computing device 144 is located in a hotel room or secure public location 202. The local computing device 104 is also located in a secure public location 202. The local computing device 104 is capable of receiving voice input from a user located in a hotel room. The local computing device 104 is capable of generating data packets comprising input audio and transmitting the data packets to the data processing system 102 via the wireless gateway 214 and the network 105. The data processing system 102 is capable of receiving data packets and performing speaker recognition to identify acoustic signatures from the input audio signal. The data processing system 102 can then identify an electronic account corresponding to the acoustic signature. The data processing system 102 can select a profile corresponding to the electronic account and then push the profile to the profile stack data structure 142 of the local computing device 104. The profile stack data structure 142 can be specific to the local computing device 104. For example, each local computing device 104 can have a respective profile stack data structure 142. The profile stack data structure 142 of the local computing device 104 can be stored or maintained on the data processing system 102 (e.g., in a data store or memory of the data processing system 102) to facilitate processing using the profile stack data structure 142. In some cases, the profile stack data structure 142 can be stored locally in memory on the local computing device 104.
The profile stack data structure 142 can include a first profile Layer "Layer 1 (Layer 1)" corresponding to a default profile or baseline profile established by the third party device 146. Third party device 146 can provide the layer 1 profile to data processing system 102 for placement in profile stack data structure 142. In response to detecting the acoustic signature, the data processing system 102 can push a second profile corresponding to the electronic account to the profile stack data structure 142 for placement in a second profile Layer "Layer 2 (Layer 2)".
The layer 1 profile can include predetermined tags for the internet-connected device 204, 206, 208, 210, or 212. The tag can be established via a third party device 146. The third party device 146 can be associated with a third party entity that manages, owns, or manages the secure public location 202 (e.g., hotel).
The second of the layer 2 profile layers can include profile information associated with an electronic account of the user corresponding to the acoustic signature. The second profile may or may not include tags for the internet-connected devices 204, 206, 208, 210, or 212. In the case where the second profile includes tags of internet-connected devices similar to the tags provided in layer 1, data processing system 102 can determine to use layer 1 tags because tags in layer 1 may be ranked or prioritized higher than tags in layer 2. In some cases, data processing system 102 can provide a prompt to a user to clarify which internet-connected device is being involved to facilitate disambiguation and reduce the number of action data structures transmitted to the internet-connected device, thereby reducing network bandwidth utilization and computing resource utilization by unintended internet-connected devices.
For example, the input audio can include a request of "turn on my living room lamp (turn on my living room light)". If the profile stack data structure includes only a layer 1 profile, the data processing system 102 may determine that the luminaire corresponds to a connected luminaire 208 because there is only one connected luminaire in the hotel room 202. Data processing system 102 may then turn on connected light fixture 208 by sending an action data structure including instructions to connected light fixture 208 via network 105. However, if the profile stack data structure 142 is loaded with a layer 2 profile, the data processing system 102 can parse the second profile to determine if it contains the tag "living room light. The label "moving room lamp" may correspond to a light fixture at a private home associated with an electronic account. If the data processing system 102 detects the tag "living room lamp," the data processing system 102 may transmit an action data structure including instructions to a connected living room light located at the private home.
The local computing device 104 can include an audio driver 138, a transducer 136, a sensor 134, and a pre-processor component 140. The sensor 134 is capable of receiving or detecting an input audio signal (e.g., a voice input). The preprocessor component 140 can be coupled to the audio driver, transducer, and sensor. The preprocessor component 140 can filter the input audio signal to create a filtered input audio signal (e.g., by removing certain frequencies or suppressing noise). The pre-processor component 140 can convert the filtered input audio signal into data packets (e.g., through the use of a software or hardware digital-to-analog converter). In some cases, the pre-processor component 140 can convert the unfiltered input audio signal into data packets and transmit the data packets to the data processing system 102. The preprocessor component 140 can transmit the data packets to the data processing system 102 that includes one or more processors and memory that execute the natural language processor component, interface, speaker recognition component, and direct action application programming interface.
The data processing system 102 is capable of receiving data packets comprising filtered (or unfiltered) input audio signals detected by the sensor from the pre-processor component via the interface. The data processing system 102 is capable of identifying an acoustic signature from the input audio signal. The data processing system 102 can identify an electronic account corresponding to the acoustic signature based on a lookup in a data store (e.g., querying a database). Data processing system 102 can establish a session in response to identifying an electronic account and a profile stack data structure for use in the session. The profile stack data structure includes a first profile layer having one or more policies configured by devices of third party entities. The data processing system 102 can push the second profile layer retrieved from the electronic account to the profile stack data structure established for the session. The data processing system 102 is capable of parsing the input audio signal to identify a request and a trigger key corresponding to the request. The data processing system 102 can generate a first action data structure responsive to the request that is compatible with a first profile layer of the profile stack data structure based on the trigger key and a second profile layer pushed to the profile stack data structure. Data processing system 102 can provide a first action data structure for execution. The data processing system 102 can disassemble the profile stack data structure to remove one of the first profile layer or the second profile layer from the profile stack data structure in response to detecting the trigger event.
The data processing system 102 can provide the status of the profile stack data structure to the preprocessor component of the local computing device 104. The status can indicate that the second profile layer has been pushed to the profile stack. The status can indicate that both the first profile layer and the second profile layer are in the profile stack. The status can indicate that the second profile layer has been removed from the profile stack. The state can indicate that the profile stack has been cleared or returned to a default state (e.g., only the first profile layer in the profile stack). Various terms can be used to indicate status, including, for example, "security context"; "public scenario"; "< identifier of electronic account >"; or "ready".
The local computing device 104 is capable of receiving an indication of the status. The audio driver is capable of receiving an indication of a state of the profile stack data structure and generating an output signal based on the indication. The audio driver is capable of converting the indication into an output signal, such as a sound signal or an acoustic output signal. The audio driver can drive a transducer 136 (e.g., a speaker) to generate sound based on an output signal generated by the audio driver.
In some cases, the local computing device 104 can include a light source. The light source can include one or more LEDs, lights, displays, or other components or devices configured to provide an optical or visual output. The preprocessor component can cause the light source to provide a visual indication corresponding to a state of the profile stack data structure. For example, the visual indication can be: an on status indicator light, a color change of light, a light pattern having one or more colors, or a visual display of text or images.
Fig. 3 is an illustration of the operation of the system 100 processing a profile stack. The system 100 can operate in an environment 300, which environment 300 can include one or more components of the system 100 depicted in fig. 1, the environment 200 depicted in fig. 2, or the system 600 depicted in fig. 6. The environment 300 can include the same location 202 depicted in fig. 2, but in contrast to the secure public location 202, the location may not be the unsafe public location 302. The common location may be an unsecure common location 302 in that the mobile computing device 144 is outside of the secure common location 304. Outside of the secure location 304 can refer to outside of the geofence or beyond a distance threshold from the local computing device 104. The internet-connected devices 204, 206, 208, 210, and 212 within the unsecure public location 302 can be the same internet-connected devices as within the secure public location 202. However, the mobile computing device 144 leaving the location 302 can trigger a termination event that causes the data processing system 102 to disassemble the profile stack data structure 142. Disassembling the profile stack data structure 142 can include removing the second profile in layer 2 while leaving the first profile in layer 1. The data processing system 102 can return the profile stack data structure 142 to a default state established by a third party for the configuration of the local computing device 104. For example, data processing system 102 can transmit instruction 306 to remove layer 2 from profile stack data structure 142.
Fig. 4 is an illustration of the operation of the system 100 processing a profile stack. The system 100 can operate in an environment 400, which environment 400 can include one or more components of the system 100 depicted in fig. 1 or the system 600 depicted in fig. 6. The environment 400 can include a secure private location 402, such as a private home, that corresponds to a user associated with an electronic account having an acoustic signature associated with a second profile. The secure private location 402 can include a number of internet-connected devices that can be managed, monitored, or controlled by the data processing system 102. The internet-connected device can for example comprise: a connected telecommunications device 204, a connected thermostat 206, a connected light fixture 208, a connected speaker 210, and a connected multimedia display 212. The secure private location 402 can also include the local computing device 104. The local computing device can include one or more components or functions as the local computing device 104. The secure private location 402 can also include a wireless gateway 214 that can include one or more components or functions of the wireless gateway 214 as located in the public location 202 depicted in fig. 2.
The connected telecommunication device 204 located in the secure private location 402 can include one or more components or functions of the connected telecommunication device 204 located in the public location 202 as depicted in fig. 2. However, the connected telecommunication device 204 located in the secure private location 402 can include a different configuration setting or identifier than the connected telecommunication device 204 located in the public location 202 depicted in fig. 2.
The connected thermostat 206 located in the secure private location 402 can include one or more components or functions of the connected thermostat 206 as located in the public location 202 depicted in fig. 2. However, the connected thermostat 206 located in the secure private location 402 can include a different configuration setting or identifier than the connected thermostat 206 located in the public location 202 depicted in fig. 2.
The connected luminaires 208 located in the secure private location 402 can include one or more components or functions of the connected luminaires 208 as located in the public location 202 depicted in fig. 2. However, the connected luminaire 208 located in the secure private location 402 can include different configuration settings or identifiers as compared to the connected luminaire 208 located in the public location 202 depicted in fig. 2.
The connected speakers 210 located in the secure private location 402 can include one or more components or functions of the connected speakers 210 as located in the public location 202 depicted in fig. 2. However, the connected speakers 210 located in the secure private location 402 can include different configuration settings or identifiers as compared to the connected speakers 210 located in the public location 202 depicted in fig. 2.
The connected multimedia display 212 located in the secure private location 402 can include one or more components or functions of the connected multimedia display 212 as located in the public location 202 depicted in fig. 2. However, the connected multimedia display 212 located in the secure private location 402 can include different configuration settings or identifiers as compared to the connected multimedia display 212 located in the public location 202 depicted in fig. 2.
The secure private location 402 can refer to a user's private home, residence, or apartment. The local computing device 104 in the secure private location 402 may not utilize the default or baseline profile provided by the third-party device 146. Thus, data processing system 102 is able to add only the layer 2 profile associated with the second user's electronic account. The profile stack data structure 142 (which can include one or more components or functions of the profile stack data structure 142) of the local computing device 104 located at the secure private location 402 may not include the layer 1 profile established by the third party device. Thus, data processing system 102 can add only layer 2 404 to profile stack data structure 142.
However, if the second user enters the secure private location 402 and provides voice input detected by the local computing device 104, the data processing system 102 can select a third profile corresponding to the second user and then push the third profile to the profile stack data structure 142 as layer 3 (layer 1 is not depicted in the figure to illustrate a stacked structure consistent with the profile stack data structure 142).
In some cases, the local computing device 104 and the data processing system 102 in the secure private location 402 can push one or more additional profile layers onto the profile stack data structure 142. For example, a visitor at the secure private location 402 can provide voice input that can be detected by the local computing device 104. Upon detecting a voice input or an input audio signal, the local computing device 104 can perform preprocessing on the input audio signal and transmit data packets corresponding to the input audio signal to the data processing system 102 for further processing. The data processing system 102 can attempt to detect an acoustic signature from the input audio signal. The data processing system 102 may identify the acoustic signature and then attempt to identify the corresponding electronic account of the guest. However, the data processing system 102 may not be able to identify the guest's corresponding electronic account-or the data processing system 102 may not be able to identify the acoustic signature. In either case, the data processing system 102 may not have access to or select a profile layer responsive to the input audio signal or its acoustic signature. In this case, data processing system 102 can utilize a separate process flow.
For example, a guest user providing an input audio signal may not have an electronic account or profile established with data processing system 102. The guest may have a mobile computing device 144. The data processing system 102 can determine that there is no electronic account corresponding to the input audio signal. In some cases, data processing system 102 can generate a hint or request to create a new profile. However, if the guest user refuses to prompt or request to create a new profile, or in the event that data processing system 102 determines to continue the process flow without creating a profile, data processing system 102 can initiate the profile flow or enter guest mode. In guest mode, data processing system 102 is able to utilize a separate authentication mechanism. For example, the data processing system 102 can present an optical code (or some other code, such as a unique identifier of an account, an identifier, or a financial instrument) such as a QR code via a display device coupled to the local computing device 104. The unique identifier or QR code can allow the guest to establish a temporary session that does not result in the creation of a profile or electronic account. Via the temporary session, data processing system 102 can continue to build action data structures or perform other tasks.
In some cases, the data processing system 102 may transmit a digital component of the purchased product, such as the local computing device 104 itself, to the visitor's mobile computing device 144.
FIG. 5 is an illustration of a method of processing a stack data structure via a computer network. The method 500 can be performed by one or more components, systems, or elements of the system 100 depicted in fig. 1 or the system 600 depicted in fig. 6. The method 500 can be performed in the environment 200 depicted in fig. 2, the environment 300 depicted in fig. 3, or the environment 400 depicted in fig. 4. The method 500 can include: at ACT502, the data processing system receives an input audio signal. The data processing system receives data packets comprising an input audio signal via an interface. The input audio signal may have been detected by a sensor of the local computing device, such as a microphone. The local computing device may be located in a public location, such as a hotel. In some cases, the local computing device may be located in a secure private location, such as a residence. The local computing device is capable of detecting the voice inputs, preprocessing the voice inputs, generating data packets including at least some of the voice inputs, and transmitting the data packets to the data processing system. The local computing device may transmit the data packet in response to identifying a trigger key that instructs the local computing device to detect the voice input, convert it to a digital data packet, and transmit the digital data packet to the data processing system for further processing.
At ACT504, the data processing system identifies the signature. The data processing system is capable of identifying an acoustic signature from the input audio signal. The data processing system can apply speaker recognition techniques, pattern recognition techniques, or other techniques to identify the acoustic signature. The data processing system is capable of identifying one or more acoustic signatures. In some cases, the data processing system can prompt the user for multi-factor authentication, such as via a passcode, password, personal identification number (pin), whisper, other biometric authentication, or security code transmitted to the mobile device.
At ACT506, the data processing system identifies an account. The data processing system can perform a lookup in the data store, checking the signature to identify the electronic account. The data processing system is capable of performing a lookup in response to an authentication based on the acoustic signature or a multi-factor authentication being satisfied. The electronic account can include profile information such as preferences, tags, policies, rules, or other information that can reduce erroneous or wasteful remote procedure calls, or data transmissions.
In some cases, the data processing system is able to identify the account without using an acoustic signature. The data processing system can identify the account using various inputs, sensors, or interfaces. For example, rather than identifying an account using an acoustic signature, the data processing system can identify an account based on a mobile device owned by the user. The mobile device is capable of communicating or interacting with a local computing device. The user can log onto the mobile device using the account. Logging onto the mobile device using the account can refer to entering credentials, such as a user name (or other account identifier) and password (or other token, key, or biometric password), into a software application or operating system executing on the mobile device and authenticating the credentials. The mobile device can communicate account information (e.g., a user name) to the local computing device and indicate that the account has been authenticated on the mobile device. The local computing device can transmit the account identifier and an indication that the account identifier has been authenticated or verified to the data processing system. The data processing system can receive an account identifier from the local computing device, access a corresponding electronic account, and retrieve a corresponding profile. Thus, the data processing system can identify an account associated with the user using one or more techniques that may or may not include using acoustic signatures. Other techniques can include using an optical code (e.g., a quick look code (quick reference code)), biometric identification (e.g., a fingerprint, iris scanner, or facial recognition), typing in an account identifier using a keyboard, mouse, or touch interface, or providing an account identifier using voice input.
At ACT508, the data processing system establishes a session and profile stack. The data processing system is able to establish a session and a profile stack data structure for use in the session. The data processing system can establish the session and profile stack data structures in response to identifying the electronic account or completing an authentication process (e.g., authentication based on an acoustic signature, or multi-factor authentication, or additional biometric authentication). The profile stack data structure can be for local computing devices at a public location maintained by a third party, and thus the profile stack data structure can include a first profile layer having one or more policies configured by devices of a third party entity (e.g., a hotel manager, a mall manager, or a rental car manager).
At ACT510, the data processing system pushes a second profile. The data processing system can push the second profile as a second profile layer onto a profile stack data structure established for the session. The first profile layer may have certain labels or policies that give priority over the second profile layer. While the second profile layer may be utilized to select digital components and generate action data structures, the first profile layer can prevent certain types of digital components or action data structures from being executed (e.g., delivered for presentation to a user, transmitted to an intended internet-connected device, or transmitted to a service provider such as a car pooling service).
At ACT512, the data processing system identifies a request. The data processing system is capable of parsing the input audio signal to identify a request and a trigger key corresponding to the request. The data processing system is capable of parsing the same input audio signal used to identify the acoustic signature, the electronic account, and the second profile. In some cases, the data processing system may process a second input audio signal received subsequent to the first input audio signal used to identify the electronic account and profile. The data processing system may identify the request and trigger keywords in the second input audio signal.
In step 514, the data processing system generates and provides an action data structure. The data processing system can generate an action data structure based on the request, the trigger key, and the second profile layer pushed to the profile stack data structure. The action data structure can be generated in response to a request. The action data structure can be compatible with a first profile layer of the profile stack data structure. While the action data structure can be generated using a second profile associated with an electronic account associated with the acoustic signature, the data processing system can perform an error check to determine whether the generated action data structure is compatible or compliant with the first profile layer. For example, the first profile layer may block, prevent, or prohibit certain types of data structures that may be erroneous or consume excessive network bandwidth or computing resources.
Upon determining that the action data structure matches the first profile layer, the data processing system can provide the first action data structure for execution. Providing an action data structure for execution can include: transmitting the action data structure to an internet-connected device to perform an action or provide instructions; transmitting the action data structure to a service provider; or provide the action data structure to the content selector component to receive the digital component.
At ACT516, the data processing system disassembles the profile stack 514. The data processing system can disassemble the profile stack in response to detecting the trigger event. The data processing system is capable of disassembling the profile stack data structure by removing one of the first profile layer or the second profile layer from the profile stack data structure. For example, the data processing system can reset the profile stack to a default setting by removing the second profile corresponding to the acoustic signature. The trigger event can include a time interval (e.g., a custom time interval set by the user, or a predetermined time interval such as 10 minutes, 20 minutes, 30 minutes, 1 hour, 12 hours, or 24 hours). The trigger event can include a geofence or detection of a second user different from the first user.
By using the profile stack data structure, the data processing system can facilitate disambiguation of commands received by the local computing device. For example, the data processing system can receive a command with a syntax of "lights at home". The data processing system can examine the second profile to identify one or more internet-connected devices corresponding to "lights at home". However, the first profile layer can also include a tag corresponding to "lights at home". The data processing system can provide a prompt to the user identifying which internet-connected device to control. For example, the data processing system can generate an action data structure based on the second profile and then compare the action data structure to policies or rules in the first profile to determine whether the generated action data structure matches the first profile. In some cases, the data processing system may determine that the action data structure is inconsistent due to the tag overlapping the tag in the first profile, thus preventing transmission or execution of the action data structure without further prompting.
Fig. 6 is a block diagram of an example computer system 600. Computer system or computing device 600 can include or be used to implement system 100 or components thereof, such as data processing system 102. Data processing system 102 can include an intelligent personal assistant or a voice-based digital assistant. Computing system 600 includes a processor 610 or processing circuit for communicating information bus 605 or other communications component, coupled to bus 605 for processing information. Computing system 600 can also include one or more processors 610 or processing circuits coupled to the bus for processing information. Computing system 600 also includes a main memory 615, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 605 for storing information and instructions to be executed by processor 610. Main memory 615 can be or include data store 145. Main memory 615 also can be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 610. Computing system 600 may further include a Read Only Memory (ROM) 620 or other static storage device coupled to bus 605 for storing static information and instructions for processor 610. A storage device 625, such as a solid state device, magnetic disk, or optical disk, can be coupled to bus 605 to permanently store information and instructions. The storage device 625 can include or be part of the data store 145.
The computing system 600 may be coupled via the bus 605 to a display 635, such as a liquid crystal display or an active matrix display, for displaying information to a user. An input device 630, such as a keyboard including alphanumeric and other keys, may be coupled to bus 605 for communicating information and command selections to processor 610. The input device 630 can include a touch screen display 635. The input device 630 can also include a cursor controller, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to the processor 610 and for controlling cursor movement on the display 635. For example, the display 635 can be part of the data processing system 102, the client computing device 150, or other components of fig. 1.
The processes, systems, and methods described herein can be implemented by computing system 600 in response to processor 610 executing an arrangement of instructions contained in main memory 615. Such instructions can be read into main memory 615 from another computer-readable medium, such as storage device 625. Execution of the arrangement of instructions contained in main memory 615 causes computing system 600 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 615. The systems and methods described herein can be implemented using hardwired circuitry in place of or in combination with software instructions. The systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 6, the subject matter described in this specification including operations can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
For situations where the system discussed herein collects personal information about a user or may utilize personal information, the user may be provided with an opportunity to control whether programs or features may collect personal information (e.g., information about the user's social network, social actions or activities, user preferences, or user location), or whether or how to receive content from a content server or other data processing system that may be more relevant to the user. Furthermore, certain data may be anonymized prior to storage or use in one or more ways such that personally identifiable information is removed when the parameters are generated. For example, the identity of the user may be anonymous so that personally identifiable information of the user cannot be determined, or the geographic location of the user may be generalized (such as to a city, zip code, or state level) where location information is obtained so that a particular location of the user cannot be determined. Thus, the user can control how information about him or her is collected and how the information is used by the content server.
The subject matter and operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions can be encoded on a manually-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium can be or be included in the following: a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more thereof. Although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be or be included in the following: one or more individual components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer readable storage devices or received from other sources.
The terms "data processing system," "computing device," "component," or "data processing apparatus" encompass a variety of devices, apparatuses, and machines for processing data, including, for example, a programmable processor, a computer, a system on a chip, or a combination of a plurality of or the foregoing. The apparatus can comprise dedicated logic circuits, for example, an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). In addition to hardware, the apparatus can include code that creates an execution environment for the computer program described above, e.g., code that builds processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment are capable of implementing a variety of different computing model infrastructures, such as Web services, distributed computing, and grid computing infrastructures. For example, the direct action API 116, content selector component 118, or NLP component 112 and other data processing system 102 components can include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program can correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described herein can be performed by one or more programmable processors executing one or more computer programs (e.g., components of data processing system 102) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). Devices suitable for storing computer program instructions and data include various forms of non-volatile memory, media and memory devices including, for example: semiconductor memory devices, such as EPROM, EEPROM, and flash memory devices; magnetic disks, such as built-in hard disks or removable disks; magneto-optical disk; CD ROM disks and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
The subject matter described herein can be implemented in a computing system that includes a back-end component, e.g., as a data server, that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described herein, or a combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), the internet (e.g., the internet), and point-to-point networks (e.g., ad-hoc point-to-point networks).
A computing system, such as system 100 or system 600, can include clients and servers. The client and server are generally remote from each other and typically interact through a communication network (e.g., network 105). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., data packets representing digital components) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., results of user interactions) can be received from the client device at the server (e.g., received by the data processing system 102 from the local computing device 104 or the content provider computing device 106 or the third party device 146).
Although operations are depicted in the drawings in a particular order, such operations are not required to be performed in the particular order shown or in sequential order, and not all illustrated operations are required to be performed. The actions described herein can be performed in a different order.
The separation of the various system components does not require separation in all embodiments, and the described program components can be included in a single hardware or software product. For example, the NLP component 112 or content selector component 118 can be a single component, app, or program, or a logic device having one or more processing circuits, or a portion of one or more servers of the data processing system 102.
While certain illustrative embodiments have been described herein, it will be apparent that the foregoing is presented by way of example and not limitation. In particular, while many of the examples set forth herein relate to a particular combination of method acts or system elements, those acts and those elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed in connection with one embodiment are not intended to be excluded from a similar role in other embodiments.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by" and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional embodiments consisting solely of the items listed thereafter. In one embodiment, the systems and methods described herein consist of one, each combination of more than one, or all of the elements, acts, or components.
Any reference herein to an embodiment or element or act of a system and method in the singular can also encompass embodiments including a plurality of such elements, and reference herein to any embodiment or element or act in the plural can also encompass embodiments including only a single element. Reference in the singular or plural is not intended to limit the presently disclosed system or method, its components, acts, or elements to a single or multiple configurations. Referencing any action or element based on any information, action, or element may include embodiments in which the action or element is based at least in part on any information, action, or element.
Any embodiment disclosed herein may be combined with any other embodiment or example, and references to "an embodiment," "some embodiments," "one embodiment," etc., are not necessarily mutually exclusive, and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment or example. Such terms used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, inclusive or exclusive, in any manner consistent with aspects and embodiments disclosed herein.
The reference to "or" may be construed as inclusive such that any term described using "or" may indicate any one of the singular, more than one, and all of the stated terms. For example, at least one of references 'a' and 'B' can include only "a", only "B", and both "a" and "B". Such references, when used in conjunction with "comprising" or other open language, can encompass the inclusion of additional items.
Where technical features in the figures, detailed description, or any claim are followed by reference signs, the reference signs have been included to increase the intelligibility of the figures, detailed description, and claims. Accordingly, the presence or absence of reference signs does not have any limiting effect on the scope of any claim elements.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. The foregoing embodiments are illustrative and not limiting of the systems and methods described. The scope of the systems and methods described herein should, therefore, be indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (20)
1. A system, comprising:
a data processing system comprising one or more processors and a memory containing instructions that when executed cause the one or more processors to perform operations comprising:
receiving, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a local computing device;
identifying an acoustic signature from the input audio signal;
identifying an electronic account corresponding to the acoustic signature based on a lookup in a data store;
in response to identifying the electronic account, establishing a session and a profile stack data structure having a profile layer from the electronic account with one or more policies and a default profile layer established by a device of a third party other than the electronic account;
Parsing the input audio signal to identify a request and a keyword corresponding to the request;
generating a first action data structure responsive to the request and compatible with the profile layer from the electronic account and the default profile layer established by the device of the third party loaded in the profile stack data structure;
providing the first action data structure for execution; and
in response to detecting a trigger event, the profile stack data structure is disassembled to remove one of the profile layer or the default profile layer from the profile stack data structure.
2. The system of claim 1, wherein the operations further comprise:
the profile stack data structure is returned to a default state in response to the trigger event.
3. The system of claim 1, wherein the operations further comprise:
the profile layer of the electronic account is removed from the profile stack data structure in response to the trigger event.
4. The system of claim 1, wherein the default profile layer includes a first label having a higher priority than a second label of the profile layer, the operations further comprising:
Identifying the second tag of the profile layer in response to the request;
identifying the first tag of the default profile layer in response to the request;
determining that the first label of the default profile layer is higher in priority than the second label of the profile layer; and
in response to the determination that the first tag is higher in priority than the second tag, the first action data structure of the first tag with the default profile layer is generated.
5. The system of claim 1, wherein the operations further comprise:
identifying a second action data structure in response to the request;
determining that the second action data structure is incompatible with the default profile layer; and
in response to the determination that the second action data structure is incompatible with the default profile layer, the first action data structure is provided for execution.
6. The system of claim 1, wherein the operations further comprise:
identifying a second action data structure in response to the request;
determining that the second action data structure is incompatible with the default profile layer; and
providing a status indication to the local computing device indicating that the second action data structure is not compatible with the default profile layer.
7. The system of claim 1, wherein the operations further comprise:
selecting a content item via a real-time content selection process in response to the request; and
the first action data structure is provided to the content item.
8. The system of claim 1, wherein the operations further comprise:
selecting, via a real-time content selection process, a content item based on the electronic account; and
the content item is provided for presentation via audio output from the local computing device.
9. The system of claim 1, wherein the operations further comprise:
content items are selected based on the electronic account and the default profile layer via a real-time content selection process.
10. The system of claim 1, wherein the operations further comprise:
identifying a plurality of candidate content items via a real-time content selection process based on the electronic account in response to the request;
selecting a content item from the plurality of candidate content items that is compatible with the default profile layer; and
the content item is provided to the local computing device for presentation via the local computing device.
11. The system of claim 1, wherein the operations further comprise:
Instructions are provided to the local computing device to cause the local computing device to display a status indication indicating that the simple layer is loaded.
12. A method performed by one or more processors of a data processing system, the method comprising:
receiving, via an interface of the data processing system, data packets comprising an input audio signal detected by a sensor of a local computing device;
identifying an acoustic signature from the input audio signal;
identifying an electronic account corresponding to the acoustic signature based on a lookup in a data store;
in response to identifying the electronic account, establishing a session and a profile stack data structure having a profile layer from the electronic account with one or more policies and a default profile layer established by a device of a third party other than the electronic account;
parsing the input audio signal to identify a request and a keyword corresponding to the request;
generating a first action data structure responsive to the request and compatible with the profile layer from the electronic account and the default profile layer established by the device of the third party loaded in the profile stack data structure;
Providing the first action data structure for execution; and
in response to detecting a trigger event, the profile stack data structure is disassembled to remove one of the profile layer or the default profile layer from the profile stack data structure.
13. The method of claim 12, further comprising:
the profile stack data structure is returned to a default state in response to the trigger event.
14. The method of claim 12, further comprising:
the profile layer of the electronic account is removed from the profile stack data structure in response to the trigger event.
15. The method of claim 12, wherein the default profile layer includes a first label having a higher priority than a second label of the profile layer, the method further comprising:
identifying the second tag of the profile layer in response to the request;
identifying the first tag of the default profile layer in response to the request;
determining that the first label of the default profile layer is higher in priority than the second label of the profile layer; and
in response to the determination that the first tag is higher in priority than the second tag, the first action data structure of the first tag with the default profile layer is generated.
16. The method of claim 12, further comprising:
identifying a second action data structure in response to the request;
determining that the second action data structure is incompatible with the default profile layer; and
in response to the determination that the second action data structure is incompatible with the default profile layer, the first action data structure is provided for execution.
17. The method of claim 12, further comprising:
identifying a second action data structure in response to the request;
determining that the second action data structure is incompatible with the default profile layer; and
providing a status indication to the local computing device indicating that the second action data structure is not compatible with the default profile layer.
18. The method of claim 12, further comprising:
selecting a content item via a real-time content selection process in response to the request; and
the first action data structure is provided to the content item.
19. The method of claim 12, further comprising:
selecting, via a real-time content selection process, a content item based on the electronic account; and
the content item is provided for presentation via audio output from the local computing device.
20. The method of claim 12, further comprising:
content items are selected based on the electronic account and the default profile layer via a real-time content selection process.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202310923755.8A CN117059087A (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2017/065464 WO2019112626A1 (en) | 2017-12-08 | 2017-12-08 | System for securing a personal digital assistant with stacked data structures |
CN201780004310.2A CN110149806B (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
CN202310923755.8A CN117059087A (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780004310.2A Division CN110149806B (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117059087A true CN117059087A (en) | 2023-11-14 |
Family
ID=60972342
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780004310.2A Active CN110149806B (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
CN202310923755.8A Pending CN117059087A (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201780004310.2A Active CN110149806B (en) | 2017-12-08 | 2017-12-08 | Digital assistant processing of stack data structures |
Country Status (7)
Country | Link |
---|---|
US (3) | US10580412B2 (en) |
EP (1) | EP3529802A1 (en) |
JP (1) | JP6797916B2 (en) |
KR (3) | KR102279121B1 (en) |
CN (2) | CN110149806B (en) |
AU (2) | AU2017442245B2 (en) |
WO (1) | WO2019112626A1 (en) |
Families Citing this family (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102279121B1 (en) | 2017-12-08 | 2021-07-19 | 구글 엘엘씨 | System for securing a personal digital assistant with stacked data structures |
US10665236B2 (en) | 2017-12-08 | 2020-05-26 | Google Llc | Digital assistant processing of stacked data structures |
US10649727B1 (en) * | 2018-05-14 | 2020-05-12 | Amazon Technologies, Inc. | Wake word detection configuration |
GB2577879B (en) | 2018-10-08 | 2022-08-24 | B & W Group Ltd | Content playback system |
GB2579554A (en) * | 2018-12-03 | 2020-07-01 | Audiogum Uk Ltd | Content playback system |
US10839167B2 (en) | 2018-12-04 | 2020-11-17 | Verizon Patent And Licensing Inc. | Systems and methods for dynamically expanding natural language processing agent capacity |
US10789266B2 (en) | 2019-02-08 | 2020-09-29 | Innovaccer Inc. | System and method for extraction and conversion of electronic health information for training a computerized data model for algorithmic detection of non-linearity in a data |
US11106934B2 (en) | 2019-02-11 | 2021-08-31 | Innovaccer Inc. | Automatic visual display overlays of contextually related data from multiple applications |
US10706045B1 (en) * | 2019-02-11 | 2020-07-07 | Innovaccer Inc. | Natural language querying of a data lake using contextualized knowledge bases |
US10484367B1 (en) * | 2019-06-06 | 2019-11-19 | Capital One Services, Llc | Utilizing natural language processing to automatically perform multi-factor authentication |
US11936739B2 (en) * | 2019-09-12 | 2024-03-19 | Oracle International Corporation | Automated reset of session state |
CN110691446B (en) * | 2019-09-12 | 2021-11-19 | 深圳市云慧联科技有限公司 | Secondary generation method and device of ID information |
US10789461B1 (en) | 2019-10-24 | 2020-09-29 | Innovaccer Inc. | Automated systems and methods for textual extraction of relevant data elements from an electronic clinical document |
US11158308B1 (en) * | 2019-11-27 | 2021-10-26 | Amazon Technologies, Inc. | Configuring natural language system |
US11650980B2 (en) | 2021-01-29 | 2023-05-16 | Walmart Apollo, Llc | Methods and apparatus for retrieving information via an intermediate representation |
US11538480B1 (en) * | 2021-03-30 | 2022-12-27 | Amazon Technologies, Inc. | Integration of speech processing functionality with organization systems |
Family Cites Families (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5872850A (en) * | 1996-02-02 | 1999-02-16 | Microsoft Corporation | System for enabling information marketplace |
US6055637A (en) | 1996-09-27 | 2000-04-25 | Electronic Data Systems Corporation | System and method for accessing enterprise-wide resources by presenting to the resource a temporary credential |
US6088679A (en) * | 1997-12-01 | 2000-07-11 | The United States Of America As Represented By The Secretary Of Commerce | Workflow management employing role-based access control |
US6327346B1 (en) * | 1998-09-01 | 2001-12-04 | At&T Corp. | Method and apparatus for setting user communication parameters based on voice identification of users |
US6839410B2 (en) * | 1998-09-01 | 2005-01-04 | At&T Corp. | Method and apparatus for setting user communication parameters based on voice identification of users |
US7137126B1 (en) * | 1998-10-02 | 2006-11-14 | International Business Machines Corporation | Conversational computing via conversational virtual machine |
US20170237801A1 (en) * | 2004-06-30 | 2017-08-17 | Google Inc. | Device configuration-based function delivery |
AU2006275920B2 (en) * | 2005-07-27 | 2011-02-24 | Shea Writer | Methods and systems for improved security for financial transactions through a trusted third party entity |
WO2009111408A1 (en) * | 2008-03-04 | 2009-09-11 | Apple Inc. | System and method of authorizing execution of software code based on at least one installed profile |
US20100005085A1 (en) * | 2008-07-03 | 2010-01-07 | Oracle International Corporation | Creating relationship maps from enterprise application system data |
US8938808B1 (en) * | 2010-03-01 | 2015-01-20 | Symantec Corporation | Systems and methods for using virtualization to implement information rights management |
US8458802B2 (en) * | 2011-04-02 | 2013-06-04 | Intel Corporation | Method and device for managing digital usage rights of documents |
US9493130B2 (en) * | 2011-04-22 | 2016-11-15 | Angel A. Penilla | Methods and systems for communicating content to connected vehicle users based detected tone/mood in voice input |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
US9117451B2 (en) * | 2013-02-20 | 2015-08-25 | Google Inc. | Methods and systems for sharing of adapted voice profiles |
US10133243B2 (en) * | 2013-03-15 | 2018-11-20 | Fisher-Rosemount Systems, Inc. | Method and apparatus for seamless state transfer between user interface devices in a mobile control room |
US20140310277A1 (en) * | 2013-04-15 | 2014-10-16 | Flextronics Ap, Llc | Suspending user profile modification based on user context |
KR102624795B1 (en) * | 2014-09-13 | 2024-01-12 | 어드밴스드 엘리멘탈 테크놀로지스 인코포레이티드 | Methods and systems for secure and reliable identity-based computing |
US20170092278A1 (en) | 2015-09-30 | 2017-03-30 | Apple Inc. | Speaker recognition |
US9747926B2 (en) | 2015-10-16 | 2017-08-29 | Google Inc. | Hotword recognition |
US9928840B2 (en) | 2015-10-16 | 2018-03-27 | Google Llc | Hotword recognition |
TWI557599B (en) * | 2015-11-05 | 2016-11-11 | 宏碁股份有限公司 | Voice control method and voice control system |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10380208B1 (en) * | 2015-12-28 | 2019-08-13 | Amazon Technologies, Inc. | Methods and systems for providing context-based recommendations |
US10192552B2 (en) | 2016-06-10 | 2019-01-29 | Apple Inc. | Digital assistant providing whispered speech |
US10418026B2 (en) | 2016-07-15 | 2019-09-17 | Comcast Cable Communications, Llc | Dynamic language and command recognition |
CN108075892B (en) * | 2016-11-09 | 2021-07-27 | 斑马智行网络(香港)有限公司 | Voice processing method, device and equipment |
US11494771B2 (en) * | 2017-07-24 | 2022-11-08 | Visa International Service Association | System, method, and computer program product for authenticating a transaction |
KR102279121B1 (en) | 2017-12-08 | 2021-07-19 | 구글 엘엘씨 | System for securing a personal digital assistant with stacked data structures |
US10157042B1 (en) | 2018-02-06 | 2018-12-18 | Amazon Technologies, Inc. | Audio output control |
US10747894B1 (en) * | 2018-09-24 | 2020-08-18 | Amazon Technologies, Inc. | Sensitive data management |
US10839167B2 (en) | 2018-12-04 | 2020-11-17 | Verizon Patent And Licensing Inc. | Systems and methods for dynamically expanding natural language processing agent capacity |
-
2017
- 2017-12-08 KR KR1020217003690A patent/KR102279121B1/en active IP Right Grant
- 2017-12-08 WO PCT/US2017/065464 patent/WO2019112626A1/en unknown
- 2017-12-08 KR KR1020207010069A patent/KR102216034B1/en active IP Right Grant
- 2017-12-08 CN CN201780004310.2A patent/CN110149806B/en active Active
- 2017-12-08 AU AU2017442245A patent/AU2017442245B2/en active Active
- 2017-12-08 US US15/771,613 patent/US10580412B2/en active Active
- 2017-12-08 KR KR1020187014244A patent/KR102100976B1/en active IP Right Grant
- 2017-12-08 CN CN202310923755.8A patent/CN117059087A/en active Pending
- 2017-12-08 EP EP17829378.3A patent/EP3529802A1/en active Pending
- 2017-12-08 JP JP2018526062A patent/JP6797916B2/en active Active
-
2020
- 2020-02-24 US US16/799,307 patent/US11557302B2/en active Active
- 2020-06-11 AU AU2020203865A patent/AU2020203865B2/en active Active
-
2023
- 2023-01-13 US US18/154,448 patent/US20230186920A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
KR20200086660A (en) | 2020-07-17 |
AU2017442245A1 (en) | 2019-07-11 |
JP6797916B2 (en) | 2020-12-09 |
US20190180757A1 (en) | 2019-06-13 |
US11557302B2 (en) | 2023-01-17 |
JP2020507134A (en) | 2020-03-05 |
KR20210018532A (en) | 2021-02-17 |
AU2020203865A1 (en) | 2020-07-02 |
US20230186920A1 (en) | 2023-06-15 |
CN110149806A (en) | 2019-08-20 |
US20200194005A1 (en) | 2020-06-18 |
KR20190087962A (en) | 2019-07-25 |
AU2020203865B2 (en) | 2022-05-12 |
WO2019112626A1 (en) | 2019-06-13 |
CN110149806B (en) | 2023-08-08 |
KR102216034B1 (en) | 2021-02-16 |
KR102279121B1 (en) | 2021-07-19 |
US10580412B2 (en) | 2020-03-03 |
KR102100976B1 (en) | 2020-05-15 |
EP3529802A1 (en) | 2019-08-28 |
AU2017442245B2 (en) | 2020-03-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN110149806B (en) | Digital assistant processing of stack data structures | |
US11508371B2 (en) | Digital assistant processing of stacked data structures | |
CN110753927B (en) | Synchronizing access control between computing devices | |
EP3729259B1 (en) | Assessing applications for delivery via an application delivery server | |
JP6995966B2 (en) | Digital assistant processing of stacked data structures | |
CN115812193A (en) | Delivering compatible supplemental content via digital assistant |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US20140317107A1 - Trusted Maps: Updating Map Locations Using Trust-Based Social Graphs - Google Patents
Trusted Maps: Updating Map Locations Using Trust-Based Social Graphs Download PDFInfo
- Publication number
- US20140317107A1 US20140317107A1 US14/321,226 US201414321226A US2014317107A1 US 20140317107 A1 US20140317107 A1 US 20140317107A1 US 201414321226 A US201414321226 A US 201414321226A US 2014317107 A1 US2014317107 A1 US 2014317107A1
- Authority
- US
- United States
- Prior art keywords
- users
- location
- proposed location
- user
- votes
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 33
- 238000005303 weighing Methods 0.000 claims 12
- 238000012937 correction Methods 0.000 description 9
- 230000008569 process Effects 0.000 description 8
- 230000015654 memory Effects 0.000 description 5
- 238000013459 approach Methods 0.000 description 4
- 230000008901 benefit Effects 0.000 description 4
- 238000004590 computer program Methods 0.000 description 4
- 230000009471 action Effects 0.000 description 3
- 238000004891 communication Methods 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 239000003550 marker Substances 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000012545 processing Methods 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 238000010586 diagram Methods 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 230000026676 system process Effects 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000012790 confirmation Methods 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 230000004807 localization Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 238000010079 rubber tapping Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9536—Search customisation based on social or collaborative filtering
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G06F17/30867—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/29—Geographical information databases
-
- G06F17/30241—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/40—Support for services or applications
- H04L65/403—Arrangements for multi-party communication, e.g. for conferences
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q2230/00—Voting or election arrangements
-
- G—PHYSICS
- G07—CHECKING-DEVICES
- G07C—TIME OR ATTENDANCE REGISTERS; REGISTERING OR INDICATING THE WORKING OF MACHINES; GENERATING RANDOM NUMBERS; VOTING OR LOTTERY APPARATUS; ARRANGEMENTS, SYSTEMS OR APPARATUS FOR CHECKING NOT PROVIDED FOR ELSEWHERE
- G07C13/00—Voting apparatus
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2209/00—Additional information or applications relating to cryptographic mechanisms or cryptographic arrangements for secret or secure communication H04L9/00
- H04L2209/46—Secure multiparty computation, e.g. millionaire problem
- H04L2209/463—Electronic voting
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/52—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail for supporting social networking services
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/475—End-user interface for inputting end-user data, e.g. personal identification number [PIN], preference data
- H04N21/4758—End-user interface for inputting end-user data, e.g. personal identification number [PIN], preference data for providing answers, e.g. voting
Definitions
- the present invention is related to a system and method for updating and adding locations of geospatial entities and providing the updated location to an online hosted map system using trust-based social graphs.
- map providers Because of the expense, some map providers update their maps infrequently. Additionally, the expense of acquiring map data result in the map and its data being proprietary to the map provider. This adds to the cost of providing maps to users whether it is in hard copy form or on through online media, such as the World Wide Web.
- a user may obtain driving directions from a map hosting system, but then get lost while following such directions because there was an error in the map data, such as the destination business being a block further down the street than indicated on the map, or a change in the roads due to construction.
- a system and method for updating and adding locations of geospatial entities to maps provided by an online map hosting system allows a user to provide location information regarding a changes or correction to be made to a map, and receives votes from other users of the system to determine the trustworthiness of the provided location information.
- This system and method have the advantage of updating and correcting maps by tapping users of the maps as resources thereby avoiding the expense associated with current approaches to updating and correcting map information.
- a user of the system has a client device, such as a smartphone, PDA, GPS navigation unit, or the like, which is enabled to determine its location.
- the user is present at some location at which a geospatial entity is present.
- the location of the client is determined by a wireless location system and provided to the client device.
- the user enters information (such as tags, keywords, and the like) into the client device to provide a description of the entity.
- the client device transmits a location tag, which comprises the location and the user's description of the geospatial entity, to the system.
- a geospatial entity for which the user has provided a description is called a proposed location.
- the entity may be a new entity that was not previously on the map or a correction of an incorrect location on a map for the geospatial entity.
- Proposed locations are provided to other users of the system via their respective client devices. These users provide feedback to the system as to the trustworthiness of the proposed locations. The feedback is in the form of a vote that the other user agrees or disagrees with the proposed location.
- the system processes the votes to determine a trust metric for the proposed location, and responsive to the value of the trust metric for the proposed location the proposed location is accepted as correct and provided to the online map hosting system.
- Optionally proposed locations are provided to multiple subsets of other users wherein one subset is associated with the user who tagged the location. Additional subsets of users are less associated or not associated with the user who tagged the location. Votes from the multiple subsets are used in the trust metric determination.
- a geographic information system comprises a network interface configured to receive a proposed location for a geospatial entity from a mobile device, the proposed location determined by a wireless location system, and based upon a current location of the mobile device, the network interface provides information about the proposed location for the geospatial entity to a first plurality of other users who may be associated with the user who proposed the location. The network interface further receives votes from the first plurality of other users as to whether the proposed location is correct.
- the network interface is further configured to provide information about the proposed location for the geospatial entity to a second plurality of other users and receives votes from the second plurality of other users.
- the wireless location system is a global positioning system, cell phone tower triangulation system, or coarse wifi location system.
- the geographic information system further comprises a database which is configured to store the proposed location for a geospatial entity as well as the votes from the first plurality of other users.
- the geographic information system further comprises an entity location module configured to determine whether to update the location information for the geospatial entity responsive to the received votes from other users.
- entity location module provides the corrected location information to an online map hosting system.
- FIG. 1 is a diagram of system architecture.
- FIG. 2 is a data flow chart illustrating the method of tagging a location on a map.
- FIGS. 3A-3F are screenshots illustrating the method of tagging a location on a map.
- FIG. 4 is a data flow chart illustrating the method of providing proposed locations to users of a map.
- FIG. 5 is a screenshot of proposed locations shown on a map displayed to a user.
- FIG. 6 is a screenshot of a proposed location displayed to a user wherein the proposed location is a correction to the location of a geospatial entity on a map.
- FIG. 7 is a screenshot of a proposed location displayed to the user with a dialog box for a user to vote on the proposed correction.
- FIG. 8 is a data flow chart illustrating determination of a trust metric and providing a proposed location to a online map hosting system.
- FIG. 1 is a diagram of system architecture according to one embodiment.
- the location server 100 comprises a location engine 101 , a trust metric engine 102 and a database 103 .
- the location server 100 comprises a location engine 101 , a trust metric engine 102 and a database 103 .
- a location engine 101 For simplicity, only one location server 100 , one location engine 101 and one trust metric engine 102 are shown, but in practice many location servers 100 , many location engines 101 and many trust metric engines 102 may be in operation.
- the location server 100 communicates with the online map hosting system 105 and client 115 via its location front end 130 and the network 110 .
- the network 110 is typically the Internet, but may also be any network, including but not limited to a LAN, a MAN, a WAN, a mobile, wired or wireless network, telecommunication network, a private network, or a virtual private network, and any combination thereof.
- the client 115 is any type of device that is adapted to access the location server 100 over the network 110 .
- Examples of clients include, but are not limited to, mobile devices such as a handheld computer, laptop computer, tablet computer, mobile phone or personal digital assistant (PDA) and devices that receive map information and wireless location system information such as navigation devices, which have been adapted to provide the structures and functions described herein.
- a client 115 is configured to determine its location, receive information from the user to tag a location, transmit a proposed location to the location server 100 , and receive information describing proposed locations from the location server 100 .
- the client 115 determines its location using the wireless location system 120 .
- the wireless location system 120 is a system which determines the location of the client 115 and transmits the location to the client 115 .
- the client's location is defined by coordinates in two-dimensional or three-dimensional space. Examples include, but are not limited to, a global positioning system, cell phone tower triangulation and wi-fi localization.
- the client 115 further comprises a client application for receiving the user input information and receiving information about proposed locations from the location server 100 .
- the client application is a browser 117 .
- the browser 117 is any browser known in the art.
- the client 115 communicates with the wireless location system 120 via the network 110 .
- the client 115 is in communication with the online map hosting system 105 via the network 110 .
- the client 115 is shown. In practice, very large numbers (e.g., millions) of clients 115 , or as many as can be supported by the hardware and software implementation, can be in communication with the location server 100 at any time.
- the location server 100 is implemented as server program executing on one or more server-class computers comprising a CPU, memory, network interface, peripheral interfaces, and other well known components.
- the computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, with 1G or more of memory, and 100G or more of disk storage.
- LINUX open-source operating system
- other types of computers can be used, and it is expected that as more powerful computers are developed in the future, they can be configured in accordance with the teachings here.
- the functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical/magnetic media), or by equivalent implementations in hardware and/or firmware.
- the location engine 101 receives proposed locations for geospatial entities and indexes and stores the proposed locations in the database 103 .
- a geospatial entity is an entity that is associated with a geographic location (either a point or a region); the entity may be associated with the geographic location by being located there, either currently or at some point in the past. Examples of entities include, but are not limited to, points of interest (POI), bodies of water, mountains, forests, cities, addresses, streets, businesses, buildings, historic sites, historic events (e.g., the location of Custer's Last Stand, or Woodstock) and landmarks. Additionally, the location engine 101 provides the proposed locations to other users of the location server 100 .
- POI points of interest
- bodies of water mountains, forests, cities, addresses, streets, businesses, buildings, historic sites, historic events (e.g., the location of Custer's Last Stand, or Woodstock) and landmarks.
- the location engine 101 provides the proposed locations to other users of the location server 100 .
- the trust metric engine 102 determines a trust metric for the proposed location based on votes received from other users indicating whether the other users agree or disagree with the proposed location The votes are used to determine a trust metric which is a measure of the trustworthiness of the proposed location. If a proposed location generates sufficient agreement and is thus sufficiently trustworthy, this is reflected in the value of the trust metric and the location server 100 provides the proposed location to all users responsive to the value of the trust metric. Optionally, the location server 100 provides the proposed location to the online map hosting system 105 . The operation of the trust metric engine 102 is described in greater detail in reference to FIGS. 2 and 3 .
- the database 103 stores the proposed locations for geospatial entities, votes from other users in response to proposed location, as well as the trust metric for the proposed locations. Additionally, the database 103 stores information associated with users of the location server 100 . Information associated with users includes metadata about the user, a user's list of contacts, an identifier unique to the user and interactions with other users of the location server 100 . In one embodiment, the database 103 is structured using a BigTable database model, as provided by Google Inc. and described more fully in “Bigtable: A Distributed Storage System for Structured Data” by Fay Chang, Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A. Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes and Robert E. Gruber published in Proceedings of the 7 th USENIX Symposium on Operating Systems , pp 205-218, 2006, which is hereby incorporated by reference.
- the online map hosting system 105 is any web-based application known in the art that provides maps to users.
- An exemplary online map hosting system is GOOGLETM Maps.
- the online map hosting system 105 may incorporate the proposed location in maps provided by the online map hosting system 105 to its users.
- FIG. 3A illustrates a map 305 displayed to a user in a browser 117 at a client 115 ; for the purposes of reference, this user will be referred to as the “tagging user.”
- the tagging user's current location is indicated by a location marker 310 , here a small circular icon.
- the client 115 requests 205 its location from the wireless location system 120 .
- the location is returned 210 and the client 115 displays the location marker 310 to the user on the map 305 .
- Also displayed to the user is a menu 315 .
- One of the buttons displayed on the menu 315 is “Label Location” 320 .
- the user selects the Label Location 320 button.
- FIG. 3B illustrates the client 115 requesting 205 its location from the wireless location system 120 .
- a status dialog box 325 illustrates the location being requested based on upon local wireless networks in the vicinity of the client 115 .
- the client 115 does not request its location again and instead uses the previously transmitted location (as shown in FIG. 3A ) for transmitting with the proposed location.
- FIG. 3C illustrates a dialog box 330 with which the user enters information describing the geospatial entity for which the location is being proposed.
- the dialog box 330 comprises a name field 335 for entering the name of the entity and a description field 340 for entering additional descriptive information.
- the user can check box 345 to share the proposed location for the geographic entity with other users.
- Selection of the save button 350 sends 215 a location tag along with an identifier to identify the user to the location engine 101 .
- the location tag comprises the location as determined by the wireless location system 120 and the descriptive information provided by the user of what the location is.
- locations that a user would tag include a new geospatial entity that was not previously on the map such as a new business (e.g., a new restaurant) or a new park.
- a restaurant may be displayed on the map as being in one location (e.g., on the end of a block right on the corner) when in reality the restaurant is some other location (e.g., in the middle of the block).
- the user tags the restaurant's location thereby proposing a corrected location of a geospatial entity already on the map; once the proposed location has sufficient trust, it will be used to replace the incorrect location in the database 103 .
- Entities displayed on maps shown to users include an option for the user to correct the location of that entity, for example through a menu item, button, or other selection mechanism. Once the trust metric for proposed location is sufficiently high, the proposed location is provided to the online map hosting system 105 .
- the location engine 101 determines 220 whether or not there are possible matches for the location tag by searching the online map hosting system 105 for any geospatial entities on the map within a pre-determined radius of the proposed location that match the proposed location. If there are, the location engine 101 asks 221 the user whether they are trying to update the location of an existing entity.
- FIG. 3D illustrates a dialog box 360 displayed to the user asking if the proposed location is a correction for existing locations identified with icons 365 which have been identified as possible matches. The user selects either the “Yes” button 370 or “No” button 375 and the response is returned 222 to the location engine 101 . If the user selects the “No” 375 button, the system processes the received location tag as a proposed location for a new entity not previously on the map.
- FIG. 3E illustrates a list 380 of possible matching entities 381 displayed to the user.
- the list includes the name of the possible matching entity as well as information about the entity such as its address and distance from the location tag sent 215 by the user.
- instructions 382 are displayed to the user requesting the user to select the entity that the user is trying to correct.
- the address 383 for the location tag sent by the user is also displayed.
- a dialog box is displayed for the user to enter additional information about the entity.
- the dialog box 385 comprises a description field 340 for entering additional descriptive information.
- the user can check box 345 to share the updated location for the geographic entity with other users.
- Selection of the save button 350 sends 224 the updated location tag to the location engine 101 .
- the location engine 101 stores 225 the location tag at the database 103 . If the location engine 101 determined possible matches for the location tag, the location tag is stored after receiving information from the user indicating whether or not the location tag is a new entity or a correction to an existing entity. The location tag is stored as associated with the received user identifier. The user identifier is later used to determine to which other users to provide the proposed location.
- the location engine 101 indexes 230 the received location tags according to, for example, the geographic location as indicated by a latitude and longitude obtained from GPS. Alternatively, the location tags are indexed according to signature of signal strengths of WiFi access points visible at that location. The indexing may be immediate or at predetermined intervals, such as hourly or daily. In yet another alternative, the indexing occurs when the server has sufficient idle processing capacity to do indexing.
- FIG. 4 describes the process of displaying proposed locations to other users of the location server 100 according to one embodiment.
- a user of the location server 100 requests 405 a map from the location server 100 and an identifier for the requesting user is sent with the request.
- the location server 100 in turn requests 415 a map from a online map hosting system 105 which returns 420 the map.
- the location engine 101 determines proposed locations tagged by other users to display on the map returned to the requesting user. Which proposed locations to include is determined using social graphs and subgraphs. All of the users of the location server 100 are considered part of a social graph which contains numerous subgraphs.
- a social graph also referred to as a social network, is a group of interconnected nodes, where the nodes are the users of the location server 100 who are interconnected by a social relationship other than just being users of the location server 100 . Subgraphs are created in a number of ways.
- a subgraph for a given user may be derived from the user's contact list, based upon other users with whom the user has exchanged email or text messages, or with whom the user is associated in a social network service, such as ORKUTTM.
- the subgraph may be based on any of these sources or similar sources, either alone or in combination.
- the subgraphs used in this method have memberships where each member is directly connected to another member rather than indirectly.
- the location engine 101 requests 425 from the database 103 a subgraph of users of the location server 100 wherein the subgraph includes the requesting user.
- the database 103 returns 430 the requested subgraph to the location engine 101 .
- the location engine 101 requests 435 from the database 103 the proposed locations tagged by the users who are part of the requested subgraph, and that are within the area of the map requested by the requesting user. Because the requesting user is a member of the subgraph, the proposed locations displayed to the requesting user will have been tagged by users somehow associated with the requesting user.
- the database 103 returns 445 proposed locations.
- the location engine 101 generates and returns 445 a map including the locations tagged by subgraph users.
- FIG. 5 is an example of such a map.
- the map shows an icon 505 where the requesting user is located as well as icons 510 for the locations nearby tagged by subgraph users.
- the user requesting the map has subscribed to have proposed locations from certain other users or all other users displayed on maps requested by this user.
- FIG. 6 illustrates a map returned 345 to the user by the location engine 101 after a user searched for “Vito's Famous Pizza.”
- the map displays the location 605 of Vito's Famous Pizza as provided by the online map hosting system 105 as well as a location 610 tagged by other users that proposes a corrected location for Vito's Famous Pizza.
- the fact that the other users are 5 of the requesting user's contacts, is also displayed to the requesting user on the map.
- the proposed location 610 for Vito's Famous Pizza is accompanied by a dialog box 615 for the requesting user to vote whether or not she agrees that the proposed location is the correct location for Vito's Famous Pizza.
- the requesting user chooses whether or not she agrees with the proposed location.
- the requesting user's vote is sent 450 by the client 115 to the trust metric engine 102 which stores 455 the vote as well as the user identifier of this user in the database 130 . Additionally, the requesting user can choose to share the proposed location with the user's contacts on the location server 100 .
- FIG. 8 illustrates the process of determining the trust metric for a proposed location.
- the trust metric engine 102 requests 805 stored votes for a given proposed location which are returned 810 by the database 103 .
- the trust metric engine 102 then processes 815 the votes to determine the trust metric.
- the votes are requested and processed periodically, for example hourly or daily.
- Processing 815 comprises determining for a given proposed location whether a sufficient number of votes have been received to determine a trust metric, and then determining the trust metric based on the votes.
- the trust metric can be determined based on a number of factors. In one embodiment, the trust metric is simply the absolute number of votes agreeing with the proposed location. Alternatively the trust metric is the percentage of the received votes agreeing with the proposed location.
- the proposed location is provided 840 to the online map hosting system 105 .
- the proposed location is provided to the online map hosting system 105 responsive to the value of the trust metric exceeding a threshold.
- the threshold used varies, for example with the type and location of geospatial entity being tagged.
- the online map hosting system 105 may choose to incorporate the proposed location in all maps provided by the online map hosting system 105 .
- determining the trust metric for proposed location comprises providing the proposed location to more than one subgraph of users.
- the proposed location is provided to a first plurality of users associated with the tagging user as described previously.
- the users in this first subgraph are the users of the location server 100 that are directly associated with the tagging user such as users listed in the tagging user's contact list.
- a second plurality of users, an additional subgraph, is also identified and the proposed location is provided to the additional subgraph as well.
- the additional subgraph preferably has only minimal or no overlap with the first subgraph.
- the additional subgraph may be users directly associated with one of the users in the first subgraph, but not directly associated with the tagging user.
- the additional subgraph can be the contact list of one of the users in the subgraph provided that that contact list has minimal or no overlap with the contact list of the tagging user. Minimal overlap is less than 10% and preferably less than 5%.
- the additional subgraph comprises a subset of the contact list of more than one of the users in the first subgraph where the membership of the additional subgraph has minimal or no overlap with the membership of the first subgraph.
- the proposed location can be provided to an additional subgraph of users through the actions of other users.
- the user may have the option to propagate that proposed location to the user's contacts or friends.
- this action provides the proposed location to an additional subgraph of users provided that the overlap between the user's contact list and the first subgraph is minimal. If the overlap between the user's contact list and the first subgraph is too high, the sharing of the proposed location is not considered an additional subgraph.
- Votes from the multiple subgraphs are used to determine the trust metric and responsive to the trust metric exceeding a threshold, the proposed location is provided to the online map hosting system 105 .
- the advantage to using multiple subgraphs with minimal overlap is that confirmation of a proposed location is received from users who are directly associated with the tagging user as well as those who are not directly associated with the tagging user.
- Graph-based systems are better at capturing trust-based relationships than random samples.
- the users who are directly associated with the tagging user presumably know the tagging user and are more likely to trust the tagging user. They are therefore more likely to follow the advice of the tagging user and therefore go to the proposed location and therefore be in a position to vote in agreement or disagreement.
- users who know the tagging user are more likely to respond honestly as to whether they agree or disagree with the proposed location.
- the tagging user can not see how other users have voted on the proposed location. This further increases likelihood that the other users will vote honestly in response to the proposed location.
- a subgraph may be more homogeneous than a random sample and so its members may share a bias.
- Using a second subgraph that has little to no overlap with the first subgraph counteracts this downside using a group that is more homogeneous than a random sample of users.
- An example of such a bias displayed overtly is a user tagging a competing business location incorrectly so that it cannot be found and the other users who are on the tagging user's contact list confirming the incorrect tag to support the tagging user's business.
- the votes received from different subgraphs are weighted differently when determining the trust metric.
- the first vote from each subgraph has the same weight and this is the maximum weight given to any vote from users regardless of subgraph. Then each additional vote from a subgraph is given less weight than the first. In this method, votes from multiple subgraphs are favored and a sufficient trust metric is established more quickly when the proposed location is propagated to more subgraphs.
- an additional step in determining whether there is sufficient agreement with the proposed location comprises providing the proposed location to random users of the location server 100 .
- These users are not necessarily part of a subgraph together with the tagging user or any members of the first or additional subgraphs nor are the random users in a subgraph with eachother. These votes are then also added to the trust metric determination.
- the trust metric is determined as follows
- Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a tangible computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present invention is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet, public networks, private networks, or other networks enabling communication between computing systems.
- a network such as the Internet, public networks, private networks, or other networks enabling communication between computing systems.
Abstract
A system and method for updating and correcting the location of geospatial entities, the method comprising receiving at a server from a mobile device operated by a first user, a proposed location for a geospatial entity, the proposed location determined by a wireless location system, and based upon a current location of the mobile device; providing information about the proposed location for the geospatial entity to a first plurality of other users; receiving votes from the first plurality of users as to whether the proposed location is correct and responsive to the received votes, determining whether to update the location information for the geospatial entity.
Description
- 1. Field of the Invention
- The present invention is related to a system and method for updating and adding locations of geospatial entities and providing the updated location to an online hosted map system using trust-based social graphs.
- 2. Description of the Background Art
- Maps frequently include incorrect information and the current approaches to correcting that information are laborious and expensive. Assessing whether or not a map is accurate traditionally requires sending expert observers to the mapped location. Experts are used to ensure that information is reliable and of sufficient quality for the map maker's usage.
- Because of the expense, some map providers update their maps infrequently. Additionally, the expense of acquiring map data result in the map and its data being proprietary to the map provider. This adds to the cost of providing maps to users whether it is in hard copy form or on through online media, such as the World Wide Web.
- Because of the prevalence of portable navigation systems, which pinpoint individual addresses for users, users of maps expect more accuracy from maps than in the past when looking at a paper map rarely allowed for pinpointing an individual address. Inaccuracies in maps are therefore more noticeable and burdensome now than in the past.
- There are some online hosted map hosting systems that allow individual end users to make suggestions for corrections to the system's maps. These system require that the correction proposed by the user be reviewed and approved by an expert reviewer. In some such approaches, only after a user has built up credibility by having a large number of suggestions approved, are the user's proposed changes accepted without review. This approach is therefore still labor intensive and expensive, requiring a large number of expert reviewers to approve users' suggested changes.
- Errors from incorrect and outdated maps lead to very frustrating experiences for users. For example, a user may obtain driving directions from a map hosting system, but then get lost while following such directions because there was an error in the map data, such as the destination business being a block further down the street than indicated on the map, or a change in the roads due to construction.
- A system and method for updating and adding locations of geospatial entities to maps provided by an online map hosting system allows a user to provide location information regarding a changes or correction to be made to a map, and receives votes from other users of the system to determine the trustworthiness of the provided location information. This system and method have the advantage of updating and correcting maps by tapping users of the maps as resources thereby avoiding the expense associated with current approaches to updating and correcting map information.
- In one aspect, a user of the system has a client device, such as a smartphone, PDA, GPS navigation unit, or the like, which is enabled to determine its location. The user is present at some location at which a geospatial entity is present. The location of the client is determined by a wireless location system and provided to the client device. The user enters information (such as tags, keywords, and the like) into the client device to provide a description of the entity. The client device transmits a location tag, which comprises the location and the user's description of the geospatial entity, to the system. A geospatial entity for which the user has provided a description is called a proposed location. The entity may be a new entity that was not previously on the map or a correction of an incorrect location on a map for the geospatial entity.
- Proposed locations are provided to other users of the system via their respective client devices. These users provide feedback to the system as to the trustworthiness of the proposed locations. The feedback is in the form of a vote that the other user agrees or disagrees with the proposed location. The system processes the votes to determine a trust metric for the proposed location, and responsive to the value of the trust metric for the proposed location the proposed location is accepted as correct and provided to the online map hosting system.
- Optionally proposed locations are provided to multiple subsets of other users wherein one subset is associated with the user who tagged the location. Additional subsets of users are less associated or not associated with the user who tagged the location. Votes from the multiple subsets are used in the trust metric determination.
- A geographic information system comprises a network interface configured to receive a proposed location for a geospatial entity from a mobile device, the proposed location determined by a wireless location system, and based upon a current location of the mobile device, the network interface provides information about the proposed location for the geospatial entity to a first plurality of other users who may be associated with the user who proposed the location. The network interface further receives votes from the first plurality of other users as to whether the proposed location is correct. Optionally, the network interface is further configured to provide information about the proposed location for the geospatial entity to a second plurality of other users and receives votes from the second plurality of other users.
- The wireless location system is a global positioning system, cell phone tower triangulation system, or coarse wifi location system.
- The geographic information system further comprises a database which is configured to store the proposed location for a geospatial entity as well as the votes from the first plurality of other users.
- The geographic information system further comprises an entity location module configured to determine whether to update the location information for the geospatial entity responsive to the received votes from other users. Optionally the entity location module provides the corrected location information to an online map hosting system.
- The features and advantages described in this summary and the following detailed description are not all-inclusive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims hereof.
-
FIG. 1 is a diagram of system architecture. -
FIG. 2 is a data flow chart illustrating the method of tagging a location on a map. -
FIGS. 3A-3F are screenshots illustrating the method of tagging a location on a map. -
FIG. 4 is a data flow chart illustrating the method of providing proposed locations to users of a map. -
FIG. 5 is a screenshot of proposed locations shown on a map displayed to a user. -
FIG. 6 is a screenshot of a proposed location displayed to a user wherein the proposed location is a correction to the location of a geospatial entity on a map. -
FIG. 7 is a screenshot of a proposed location displayed to the user with a dialog box for a user to vote on the proposed correction. -
FIG. 8 is a data flow chart illustrating determination of a trust metric and providing a proposed location to a online map hosting system. -
FIG. 1 is a diagram of system architecture according to one embodiment. Thelocation server 100 comprises alocation engine 101, atrust metric engine 102 and adatabase 103. For simplicity, only onelocation server 100, onelocation engine 101 and onetrust metric engine 102 are shown, but in practicemany location servers 100,many location engines 101 and manytrust metric engines 102 may be in operation. - The
location server 100 communicates with the onlinemap hosting system 105 andclient 115 via itslocation front end 130 and thenetwork 110. Thenetwork 110 is typically the Internet, but may also be any network, including but not limited to a LAN, a MAN, a WAN, a mobile, wired or wireless network, telecommunication network, a private network, or a virtual private network, and any combination thereof. - The
client 115 is any type of device that is adapted to access thelocation server 100 over thenetwork 110. Examples of clients include, but are not limited to, mobile devices such as a handheld computer, laptop computer, tablet computer, mobile phone or personal digital assistant (PDA) and devices that receive map information and wireless location system information such as navigation devices, which have been adapted to provide the structures and functions described herein. Most basically, aclient 115 is configured to determine its location, receive information from the user to tag a location, transmit a proposed location to thelocation server 100, and receive information describing proposed locations from thelocation server 100. Theclient 115 determines its location using thewireless location system 120. - The
wireless location system 120 is a system which determines the location of theclient 115 and transmits the location to theclient 115. The client's location is defined by coordinates in two-dimensional or three-dimensional space. Examples include, but are not limited to, a global positioning system, cell phone tower triangulation and wi-fi localization. - The
client 115 further comprises a client application for receiving the user input information and receiving information about proposed locations from thelocation server 100. In one embodiment the client application is abrowser 117. Thebrowser 117 is any browser known in the art. In addition to thelocation server 100, theclient 115 communicates with thewireless location system 120 via thenetwork 110. Optionally, theclient 115 is in communication with the onlinemap hosting system 105 via thenetwork 110. For simplicity only oneclient 115 is shown. In practice, very large numbers (e.g., millions) ofclients 115, or as many as can be supported by the hardware and software implementation, can be in communication with thelocation server 100 at any time. - The
location server 100 is implemented as server program executing on one or more server-class computers comprising a CPU, memory, network interface, peripheral interfaces, and other well known components. The computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, with 1G or more of memory, and 100G or more of disk storage. Of course, other types of computers can be used, and it is expected that as more powerful computers are developed in the future, they can be configured in accordance with the teachings here. The functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical/magnetic media), or by equivalent implementations in hardware and/or firmware. - The
location engine 101 receives proposed locations for geospatial entities and indexes and stores the proposed locations in thedatabase 103. A geospatial entity is an entity that is associated with a geographic location (either a point or a region); the entity may be associated with the geographic location by being located there, either currently or at some point in the past. Examples of entities include, but are not limited to, points of interest (POI), bodies of water, mountains, forests, cities, addresses, streets, businesses, buildings, historic sites, historic events (e.g., the location of Custer's Last Stand, or Woodstock) and landmarks. Additionally, thelocation engine 101 provides the proposed locations to other users of thelocation server 100. - The trust
metric engine 102 determines a trust metric for the proposed location based on votes received from other users indicating whether the other users agree or disagree with the proposed location The votes are used to determine a trust metric which is a measure of the trustworthiness of the proposed location. If a proposed location generates sufficient agreement and is thus sufficiently trustworthy, this is reflected in the value of the trust metric and thelocation server 100 provides the proposed location to all users responsive to the value of the trust metric. Optionally, thelocation server 100 provides the proposed location to the onlinemap hosting system 105. The operation of the trustmetric engine 102 is described in greater detail in reference toFIGS. 2 and 3 . - The
database 103 stores the proposed locations for geospatial entities, votes from other users in response to proposed location, as well as the trust metric for the proposed locations. Additionally, thedatabase 103 stores information associated with users of thelocation server 100. Information associated with users includes metadata about the user, a user's list of contacts, an identifier unique to the user and interactions with other users of thelocation server 100. In one embodiment, thedatabase 103 is structured using a BigTable database model, as provided by Google Inc. and described more fully in “Bigtable: A Distributed Storage System for Structured Data” by Fay Chang, Jeffrey Dean, Sanjay Ghemawat, Wilson C. Hsieh, Deborah A. Wallach, Mike Burrows, Tushar Chandra, Andrew Fikes and Robert E. Gruber published in Proceedings of the 7th USENIX Symposium on Operating Systems, pp 205-218, 2006, which is hereby incorporated by reference. - The online
map hosting system 105 is any web-based application known in the art that provides maps to users. An exemplary online map hosting system is GOOGLE™ Maps. Upon receiving the proposed location from thelocation server 100, the onlinemap hosting system 105 may incorporate the proposed location in maps provided by the onlinemap hosting system 105 to its users. - The process of receiving a proposed location for an entity is described in reference to FIGS. 2 and 3A-3F.
FIG. 3A illustrates amap 305 displayed to a user in abrowser 117 at aclient 115; for the purposes of reference, this user will be referred to as the “tagging user.” The tagging user's current location is indicated by alocation marker 310, here a small circular icon. To determine the placement of the marker, theclient 115requests 205 its location from thewireless location system 120. The location is returned 210 and theclient 115 displays thelocation marker 310 to the user on themap 305. Also displayed to the user is amenu 315. One of the buttons displayed on themenu 315 is “Label Location” 320. To propose a tag for the tagging user'scurrent location 310 identifying the location as being the location of a geospatial entity, the user selects theLabel Location 320 button. -
FIG. 3B illustrates theclient 115 requesting 205 its location from thewireless location system 120. Astatus dialog box 325 illustrates the location being requested based on upon local wireless networks in the vicinity of theclient 115. Alternatively, theclient 115 does not request its location again and instead uses the previously transmitted location (as shown inFIG. 3A ) for transmitting with the proposed location. - In the next step, the user enters information about the geospatial entity being tagged. The information from the user is received 212 by the
client 115.FIG. 3C illustrates adialog box 330 with which the user enters information describing the geospatial entity for which the location is being proposed. Thedialog box 330 comprises aname field 335 for entering the name of the entity and adescription field 340 for entering additional descriptive information. The user can checkbox 345 to share the proposed location for the geographic entity with other users. Selection of thesave button 350 sends 215 a location tag along with an identifier to identify the user to thelocation engine 101. The location tag comprises the location as determined by thewireless location system 120 and the descriptive information provided by the user of what the location is. - Examples of locations that a user would tag include a new geospatial entity that was not previously on the map such as a new business (e.g., a new restaurant) or a new park. Alternatively, the user tags a location as a correction of inaccurate data on the map. For example, a restaurant may be displayed on the map as being in one location (e.g., on the end of a block right on the corner) when in reality the restaurant is some other location (e.g., in the middle of the block). While at the actual, correct location of the restaurant, the user tags the restaurant's location thereby proposing a corrected location of a geospatial entity already on the map; once the proposed location has sufficient trust, it will be used to replace the incorrect location in the
database 103. Entities displayed on maps shown to users include an option for the user to correct the location of that entity, for example through a menu item, button, or other selection mechanism. Once the trust metric for proposed location is sufficiently high, the proposed location is provided to the onlinemap hosting system 105. - In one embodiment, upon receiving a location tag the
location engine 101 determines 220 whether or not there are possible matches for the location tag by searching the onlinemap hosting system 105 for any geospatial entities on the map within a pre-determined radius of the proposed location that match the proposed location. If there are, thelocation engine 101 asks 221 the user whether they are trying to update the location of an existing entity.FIG. 3D illustrates adialog box 360 displayed to the user asking if the proposed location is a correction for existing locations identified withicons 365 which have been identified as possible matches. The user selects either the “Yes”button 370 or “No”button 375 and the response is returned 222 to thelocation engine 101. If the user selects the “No” 375 button, the system processes the received location tag as a proposed location for a new entity not previously on the map. - If the user selects the “Yes”
button 370, thelocation engine 101 provides 223 the possible matching entities to the user.FIG. 3E illustrates alist 380 of possible matchingentities 381 displayed to the user. The list includes the name of the possible matching entity as well as information about the entity such as its address and distance from the location tag sent 215 by the user. Additionally,instructions 382 are displayed to the user requesting the user to select the entity that the user is trying to correct. Theaddress 383 for the location tag sent by the user is also displayed. - Upon the user selecting one of the possible matching
entities 381, a dialog box is displayed for the user to enter additional information about the entity. Thedialog box 385 comprises adescription field 340 for entering additional descriptive information. The user can checkbox 345 to share the updated location for the geographic entity with other users. Selection of thesave button 350 sends 224 the updated location tag to thelocation engine 101. - Referring again to
FIG. 2 , the remainder of the tagging process is described. Thelocation engine 101stores 225 the location tag at thedatabase 103. If thelocation engine 101 determined possible matches for the location tag, the location tag is stored after receiving information from the user indicating whether or not the location tag is a new entity or a correction to an existing entity. The location tag is stored as associated with the received user identifier. The user identifier is later used to determine to which other users to provide the proposed location. Thelocation engine 101indexes 230 the received location tags according to, for example, the geographic location as indicated by a latitude and longitude obtained from GPS. Alternatively, the location tags are indexed according to signature of signal strengths of WiFi access points visible at that location. The indexing may be immediate or at predetermined intervals, such as hourly or daily. In yet another alternative, the indexing occurs when the server has sufficient idle processing capacity to do indexing. -
FIG. 4 describes the process of displaying proposed locations to other users of thelocation server 100 according to one embodiment. A user of thelocation server 100, the “requesting user,” requests 405 a map from thelocation server 100 and an identifier for the requesting user is sent with the request. Thelocation server 100 in turn requests 415 a map from a onlinemap hosting system 105 which returns 420 the map. - Additionally, the
location engine 101 determines proposed locations tagged by other users to display on the map returned to the requesting user. Which proposed locations to include is determined using social graphs and subgraphs. All of the users of thelocation server 100 are considered part of a social graph which contains numerous subgraphs. A social graph, also referred to as a social network, is a group of interconnected nodes, where the nodes are the users of thelocation server 100 who are interconnected by a social relationship other than just being users of thelocation server 100. Subgraphs are created in a number of ways. A subgraph for a given user may be derived from the user's contact list, based upon other users with whom the user has exchanged email or text messages, or with whom the user is associated in a social network service, such as ORKUT™. For a given user, the subgraph may be based on any of these sources or similar sources, either alone or in combination. In one embodiment, the subgraphs used in this method have memberships where each member is directly connected to another member rather than indirectly. - The
location engine 101requests 425 from the database 103 a subgraph of users of thelocation server 100 wherein the subgraph includes the requesting user. Thedatabase 103 returns 430 the requested subgraph to thelocation engine 101. Thelocation engine 101requests 435 from thedatabase 103 the proposed locations tagged by the users who are part of the requested subgraph, and that are within the area of the map requested by the requesting user. Because the requesting user is a member of the subgraph, the proposed locations displayed to the requesting user will have been tagged by users somehow associated with the requesting user. Thedatabase 103 returns 445 proposed locations. Thelocation engine 101 generates and returns 445 a map including the locations tagged by subgraph users.FIG. 5 is an example of such a map. The map shows anicon 505 where the requesting user is located as well asicons 510 for the locations nearby tagged by subgraph users. - In another embodiment the user requesting the map has subscribed to have proposed locations from certain other users or all other users displayed on maps requested by this user.
- Additionally or alternatively, a user can request a map by searching for a specific address or geospatial entity.
FIG. 6 illustrates a map returned 345 to the user by thelocation engine 101 after a user searched for “Vito's Famous Pizza.” The map displays thelocation 605 of Vito's Famous Pizza as provided by the onlinemap hosting system 105 as well as alocation 610 tagged by other users that proposes a corrected location for Vito's Famous Pizza. In the example illustrated inFIG. 6 , the fact that the other users are 5 of the requesting user's contacts, is also displayed to the requesting user on the map. - As illustrated in
FIG. 7 , the proposedlocation 610 for Vito's Famous Pizza is accompanied by adialog box 615 for the requesting user to vote whether or not she agrees that the proposed location is the correct location for Vito's Famous Pizza. The requesting user chooses whether or not she agrees with the proposed location. Returning toFIG. 4 , the requesting user's vote is sent 450 by theclient 115 to the trustmetric engine 102 which stores 455 the vote as well as the user identifier of this user in thedatabase 130. Additionally, the requesting user can choose to share the proposed location with the user's contacts on thelocation server 100. -
FIG. 8 illustrates the process of determining the trust metric for a proposed location. The trustmetric engine 102requests 805 stored votes for a given proposed location which are returned 810 by thedatabase 103. The trustmetric engine 102 then processes 815 the votes to determine the trust metric. The votes are requested and processed periodically, for example hourly or daily. Processing 815 comprises determining for a given proposed location whether a sufficient number of votes have been received to determine a trust metric, and then determining the trust metric based on the votes. The trust metric can be determined based on a number of factors. In one embodiment, the trust metric is simply the absolute number of votes agreeing with the proposed location. Alternatively the trust metric is the percentage of the received votes agreeing with the proposed location. Responsive to the value of trust metric, the proposed location is provided 840 to the onlinemap hosting system 105. In one embodiment, the proposed location is provided to the onlinemap hosting system 105 responsive to the value of the trust metric exceeding a threshold. The threshold used varies, for example with the type and location of geospatial entity being tagged. The onlinemap hosting system 105 may choose to incorporate the proposed location in all maps provided by the onlinemap hosting system 105. - Optionally, determining the trust metric for proposed location comprises providing the proposed location to more than one subgraph of users. The proposed location is provided to a first plurality of users associated with the tagging user as described previously. The users in this first subgraph are the users of the
location server 100 that are directly associated with the tagging user such as users listed in the tagging user's contact list. A second plurality of users, an additional subgraph, is also identified and the proposed location is provided to the additional subgraph as well. The additional subgraph preferably has only minimal or no overlap with the first subgraph. The additional subgraph may be users directly associated with one of the users in the first subgraph, but not directly associated with the tagging user. For example, if the first subgraph was the contact list of the tagging user, the additional subgraph can be the contact list of one of the users in the subgraph provided that that contact list has minimal or no overlap with the contact list of the tagging user. Minimal overlap is less than 10% and preferably less than 5%. Alternatively, if there is overlap between the first subgraph and the additional subgraph, the users that appear in both are removed when defining the additional subgraph. In yet another alternative, the additional subgraph comprises a subset of the contact list of more than one of the users in the first subgraph where the membership of the additional subgraph has minimal or no overlap with the membership of the first subgraph. - The proposed location can be provided to an additional subgraph of users through the actions of other users. As explained previously, when a proposed location is provided to a user, the user may have the option to propagate that proposed location to the user's contacts or friends. In such an embodiment, if a user in the first subgraph opts to share the proposed location to the user's contact list, this action provides the proposed location to an additional subgraph of users provided that the overlap between the user's contact list and the first subgraph is minimal. If the overlap between the user's contact list and the first subgraph is too high, the sharing of the proposed location is not considered an additional subgraph.
- Votes from the multiple subgraphs are used to determine the trust metric and responsive to the trust metric exceeding a threshold, the proposed location is provided to the online
map hosting system 105. - The advantage to using multiple subgraphs with minimal overlap is that confirmation of a proposed location is received from users who are directly associated with the tagging user as well as those who are not directly associated with the tagging user. Graph-based systems are better at capturing trust-based relationships than random samples. The users who are directly associated with the tagging user presumably know the tagging user and are more likely to trust the tagging user. They are therefore more likely to follow the advice of the tagging user and therefore go to the proposed location and therefore be in a position to vote in agreement or disagreement. Additionally, users who know the tagging user are more likely to respond honestly as to whether they agree or disagree with the proposed location. In one embodiment, the tagging user can not see how other users have voted on the proposed location. This further increases likelihood that the other users will vote honestly in response to the proposed location.
- However, a subgraph may be more homogeneous than a random sample and so its members may share a bias. Using a second subgraph that has little to no overlap with the first subgraph counteracts this downside using a group that is more homogeneous than a random sample of users. An example of such a bias displayed overtly is a user tagging a competing business location incorrectly so that it cannot be found and the other users who are on the tagging user's contact list confirming the incorrect tag to support the tagging user's business.
- In one embodiment, when multiple subgraphs are used, the votes received from different subgraphs are weighted differently when determining the trust metric.
- Alternatively, the first vote from each subgraph has the same weight and this is the maximum weight given to any vote from users regardless of subgraph. Then each additional vote from a subgraph is given less weight than the first. In this method, votes from multiple subgraphs are favored and a sufficient trust metric is established more quickly when the proposed location is propagated to more subgraphs.
- Optionally, an additional step in determining whether there is sufficient agreement with the proposed location comprises providing the proposed location to random users of the
location server 100. These users are not necessarily part of a subgraph together with the tagging user or any members of the first or additional subgraphs nor are the random users in a subgraph with eachother. These votes are then also added to the trust metric determination. - In one embodiment, the trust metric is determined as follows
-
- wherein: there are one or more subgraphs, Sj; Uj are votes from users in the subgraphs; and Wij is the weight for the vote given the subgraph.
- The present invention has been described in particular detail with respect to several possible embodiments. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First, the particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Further, the system may be implemented via a combination of hardware and software, as described, or entirely in hardware elements. Also, the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead performed by a single component.
- Some portions of above description present the features of the present invention in terms of methods and symbolic representations of operations on information. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations, while described functionally or logically, are understood to be implemented by computer programs. Furthermore, it has also proven convenient at times, to refer to these arrangements of operations as modules or by functional names, without loss of generality.
- Unless specifically stated otherwise as apparent from the above discussion, it is appreciated that throughout the description, discussions utilizing terms such as “determining” or “displaying” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.
- Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer. Such a computer program may be stored in a tangible computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- The methods and operations presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent to those of skill in the, along with equivalent variations. In addition, the present invention is not described with reference to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references to specific languages are provided for invention of enablement and best mode of the present invention.
- The present invention is well suited to a wide variety of computer network systems over numerous topologies. Within this field, the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet, public networks, private networks, or other networks enabling communication between computing systems. Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which is set forth in the following claims.
Claims (21)
1-20. (canceled)
21. A computer-implemented method of updating geospatial entities on maps, the method comprising:
receiving from a computing device operated by a first user, a proposed location for a new geospatial entity, the proposed location determined by a wireless location system, and based upon a current location of the computing device;
receiving from a plurality of other users a request for a map comprising the proposed location, wherein the plurality of other users is connected to the first user in a social network;
responsive to the request, providing the map comprising the proposed location for the new geospatial entity to the plurality of other users;
providing a user interface requesting the plurality of other users to vote whether the proposed location for the new geospatial entity is correct;
receiving via the user interface votes from the plurality of other users as to whether the proposed location for the new geospatial entity is correct;
determining a score indicating a measure of trustworthiness of the proposed location responsive to the votes, the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network; and
responsive to the score, determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps.
22. The method of claim 21 , further comprising:
receiving from a second plurality of other users a second request for the map comprising the proposed location wherein each of the second plurality of other users is in a second social network with at least one of the plurality of other users;
providing the map comprising the proposed location for the new geospatial entity to the second plurality of other users;
providing the user interface requesting the second plurality of other users to vote whether the proposed location for the geospatial entity is correct; and
receiving via the user interface votes from the second plurality of other users; and
wherein determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps is responsive to votes received from the first and the second plurality of other users.
23. The method of claim 22 wherein there is minimal overlap between the users in the first plurality of other users and the second plurality of other users.
24. The method of claim 22 wherein there is less than 5% overlap between the users in the first plurality of other users and the second plurality of other users.
25. The method of claim 22 wherein the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network comprises weighing votes from the plurality of other users with a first weight and weighing votes from the second plurality of other users with a second weight wherein the first and second weights are different.
26. The method of claim 22 wherein the first user is not a member of the second social network.
27. The method of claim 21 wherein determining whether to add the new geospatial entity at the proposed location responsive to the score comprises, adding the new geospatial entity responsive the score exceeding a threshold.
28. The method of claim 27 wherein the new geospatial entity has a type and the threshold is different for different types of geospatial entities.
29. A computer-implemented geographic information system comprising:
a processor for executing program code; and
a non-transitory computer-readable storage medium storing program code executable to perform steps comprising:
receiving from a computing device operated by a first user, a proposed location for a new geospatial entity, the proposed location determined by a wireless location system, and based upon a current location of the computing device;
receiving from a plurality of other users a request for a map comprising the proposed location, wherein the plurality of other users is connected to the first user in a social network;
responsive to the request, providing the map comprising the proposed location for the new geospatial entity to the plurality of other users;
providing a user interface requesting the plurality of other users to vote whether the proposed location for the new geospatial entity is correct;
receiving via the user interface votes from the plurality of other users as to whether the proposed location for the new geospatial entity is correct;
determining a score indicating a measure of trustworthiness of the proposed location responsive to the votes, the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network; and
responsive to the score, determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps.
30. The system of claim 29 , further comprising program code executable to perform steps comprising:
receiving from a second plurality of other users a second request for the map comprising the proposed location wherein each of the second plurality of other users is in a second social network with at least one of the plurality of other users;
providing the map comprising the proposed location for the new geospatial entity to the second plurality of other users;
providing the user interface requesting the second plurality of other users to vote whether the proposed location for the geospatial entity is correct; and
receiving via the user interface votes from the second plurality of other users; and
wherein determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps is responsive to votes received from the first and the second plurality of other users.
31. The system of claim 30 wherein there is minimal overlap between the users in the first plurality of other users and the second plurality of other users.
32. The system of claim 30 wherein there is less than 5% overlap between the users in the first plurality of other users and the second plurality of other users.
33. The system of claim 30 wherein the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network comprises weighing votes from the plurality of other users with a first weight and weighing votes from the second plurality of other users with a second weight wherein the first and second weights are different.
34. The system of claim 29 wherein determining whether to add the new geospatial entity at the proposed location responsive to the score comprises, adding the new geospatial entity responsive the score exceeding a threshold.
35. The system of claim 34 wherein the new geospatial entity has a type and the threshold is different for different types of geospatial entities.
36. A non-transitory computer-readable storage medium with an executable program stored thereon, wherein the program instructs one or more processors to perform steps comprising:
receiving from a computing device operated by a first user, a proposed location for a new geospatial entity, the proposed location determined by a wireless location system, and based upon a current location of the computing device;
receiving from a plurality of other users a request for a map comprising the proposed location, wherein the plurality of other users is connected to the first user in a social network;
responsive to the request, providing the map comprising the proposed location for the new geospatial entity to the plurality of other users;
providing a user interface requesting the plurality of other users to vote whether the proposed location for the new geospatial entity is correct;
receiving via the user interface votes from the plurality of other users as to whether the proposed location for the new geospatial entity is correct;
determining a score indicating a measure of trustworthiness of the proposed location responsive to the votes, the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network; and
responsive to the score, determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps.
37. The non-transitory computer-readable storage medium of claim 36 wherein the program further instructs one or more processors to perform steps comprising:
receiving from a second plurality of other users a second request for the map comprising the proposed location wherein each of the second plurality of other users is in a second social network with at least one of the plurality of other users;
providing the map comprising the proposed location for the new geospatial entity to the second plurality of other users;
providing the user interface requesting the second plurality of other users to vote whether the proposed location for the geospatial entity is correct; and
receiving via the user interface votes from the second plurality of other users; and
wherein determining whether to add the new geospatial entity at the proposed location to a database of geospatial entities for maps is responsive to votes received from the first and the second plurality of other users.
38. The non-transitory computer-readable storage medium of claim 37 wherein the score weighing votes from different users differently responsive to distances from the voting users to the first user in the social network comprises weighing votes from the plurality of other users with a first weight and weighing votes from the second plurality of other users with a second weight wherein the first and second weights are different.
39. The non-transitory computer-readable storage medium of claim 36 wherein determining whether to add the new geospatial entity at the proposed location responsive to the score comprises, adding the new geospatial entity responsive the score exceeding a threshold.
40. The non-transitory computer-readable storage medium of claim 39 wherein the new geospatial entity has a type and the threshold is different for different types of geospatial entities.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/321,226 US10061854B2 (en) | 2010-03-29 | 2014-07-01 | Trusted maps: updating map locations using trust-based social graphs |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/749,441 US8812585B2 (en) | 2010-03-29 | 2010-03-29 | Trusted maps: updating map locations using trust-based social graphs |
US14/321,226 US10061854B2 (en) | 2010-03-29 | 2014-07-01 | Trusted maps: updating map locations using trust-based social graphs |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/749,441 Continuation US8812585B2 (en) | 2010-03-29 | 2010-03-29 | Trusted maps: updating map locations using trust-based social graphs |
Publications (2)
Publication Number | Publication Date |
---|---|
US20140317107A1 true US20140317107A1 (en) | 2014-10-23 |
US10061854B2 US10061854B2 (en) | 2018-08-28 |
Family
ID=44657570
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/749,441 Active 2031-04-02 US8812585B2 (en) | 2010-03-29 | 2010-03-29 | Trusted maps: updating map locations using trust-based social graphs |
US14/321,226 Active 2031-04-07 US10061854B2 (en) | 2010-03-29 | 2014-07-01 | Trusted maps: updating map locations using trust-based social graphs |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/749,441 Active 2031-04-02 US8812585B2 (en) | 2010-03-29 | 2010-03-29 | Trusted maps: updating map locations using trust-based social graphs |
Country Status (2)
Country | Link |
---|---|
US (2) | US8812585B2 (en) |
WO (1) | WO2011123421A1 (en) |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN108052263A (en) * | 2017-12-28 | 2018-05-18 | 广东小天才科技有限公司 | A kind of screenshotss method and terminal device based on terminal device |
US10380703B2 (en) | 2015-03-20 | 2019-08-13 | Www.Trustscience.Com Inc. | Calculating a trust score |
US10812354B2 (en) | 2009-10-23 | 2020-10-20 | Www.Trustscience.Com Inc. | Parallel computational framework and application server for determining path connectivity |
US11323347B2 (en) | 2009-09-30 | 2022-05-03 | Www.Trustscience.Com Inc. | Systems and methods for social graph data analytics to determine connectivity within a community |
US11341145B2 (en) | 2016-02-29 | 2022-05-24 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US11386129B2 (en) * | 2016-02-17 | 2022-07-12 | Www.Trustscience.Com Inc. | Searching for entities based on trust score and geography |
US11640569B2 (en) | 2016-03-24 | 2023-05-02 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate its risk-taking score |
Families Citing this family (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2797540C (en) * | 2010-04-26 | 2019-11-05 | Locationary, Inc. | Method and system for distributed data verification |
US20110313779A1 (en) * | 2010-06-17 | 2011-12-22 | Microsoft Corporation | Augmentation and correction of location based data through user feedback |
US20120158791A1 (en) * | 2010-12-21 | 2012-06-21 | Microsoft Corporation | Feature vector construction |
US10438299B2 (en) * | 2011-03-15 | 2019-10-08 | Visa International Service Association | Systems and methods to combine transaction terminal location data and social networking check-in |
US8700580B1 (en) | 2011-04-29 | 2014-04-15 | Google Inc. | Moderation of user-generated content |
US8533146B1 (en) | 2011-04-29 | 2013-09-10 | Google Inc. | Identification of over-clustered map features |
US8706732B1 (en) * | 2011-07-12 | 2014-04-22 | Google Inc. | Managing information about entities using clusters of received observations |
US8676804B1 (en) | 2011-07-12 | 2014-03-18 | Google Inc. | Managing information about entities using observations generated from user modified values |
US20130031190A1 (en) | 2011-07-29 | 2013-01-31 | Xtreme Labs Inc. | Method and system for providing notifications |
US9877299B2 (en) | 2011-08-18 | 2018-01-23 | Rivada Research, Llc | Method and system for performing trilateration for fixed infrastructure nodes (FIN) based on enhanced location based information |
US9055121B2 (en) * | 2011-10-08 | 2015-06-09 | Broadcom Corporation | Social processing member offering fixed and intelligent services |
CN103092855B (en) | 2011-10-31 | 2016-08-24 | 国际商业机器公司 | The method and device that detection address updates |
US8676506B1 (en) | 2011-11-15 | 2014-03-18 | Google Inc. | Systems and methods for identifying missing signage |
US8832116B1 (en) | 2012-01-11 | 2014-09-09 | Google Inc. | Using mobile application logs to measure and maintain accuracy of business information |
EP2825847A4 (en) * | 2012-03-16 | 2015-12-09 | Qoros Automotive Co Ltd | Mobile system and method for marking location |
US10148709B2 (en) * | 2012-08-31 | 2018-12-04 | Here Global B.V. | Method and apparatus for updating or validating a geographic record based on crowdsourced location data |
US20140108383A1 (en) * | 2012-10-16 | 2014-04-17 | Xtreme Labs Inc. | Method and System for Filtering Search Results for Maps Using Social Graph |
US9693201B2 (en) | 2012-11-30 | 2017-06-27 | Here Global B.V. | Method and apparatus for generating location reference information |
US9582589B2 (en) * | 2013-03-15 | 2017-02-28 | Facebook, Inc. | Social filtering of user interface |
US10162838B2 (en) * | 2013-06-27 | 2018-12-25 | Google Llc | Location refinement |
WO2015007945A1 (en) * | 2013-07-18 | 2015-01-22 | Nokia Corporation | Method and apparatus for updating points of interest information via crowdsourcing |
CN104035947B (en) * | 2013-09-16 | 2016-04-13 | 腾讯科技（深圳）有限公司 | Point of interest recommend method and device, acquisition recommend method and the device of point of interest |
US9521522B2 (en) * | 2015-02-19 | 2016-12-13 | Indooratlas Oy | Mobile apparatus with search function |
WO2017143023A1 (en) * | 2016-02-16 | 2017-08-24 | Rivada Research, Llc | Method and system for performing trilateration for fixed infrastructure nodes (fin) based on enhanced location based information |
US10502577B2 (en) | 2016-06-30 | 2019-12-10 | Here Global B.V. | Iterative map learning based on vehicle on-board sensor data |
KR102122974B1 (en) * | 2018-12-14 | 2020-06-15 | 한국전력기술 주식회사 | Device and Method for monitoring and controlling vehicles in a power plant |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070281689A1 (en) * | 2006-06-01 | 2007-12-06 | Flipt, Inc | Displaying the location of individuals on an interactive map display on a mobile communication device |
US20090112474A1 (en) * | 2007-10-25 | 2009-04-30 | Microsoft Corporation | View-Independent Tagging of Geospatial Entities in Images |
US20100023259A1 (en) * | 2008-07-22 | 2010-01-28 | Microsoft Corporation | Discovering points of interest from users map annotations |
US20100332118A1 (en) * | 2008-03-14 | 2010-12-30 | Pieter Geelen | Navigation device and method using map data correction files |
US20110087745A1 (en) * | 2009-10-14 | 2011-04-14 | International Business Machines Corporation | Group voting access control for multi-party forums |
US20110131172A1 (en) * | 2009-12-02 | 2011-06-02 | Microsoft Corporation | Identifying geospatial patterns from device data |
US20130067357A1 (en) * | 2006-06-22 | 2013-03-14 | Digg, Inc. | Evaluating content |
Family Cites Families (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5345595A (en) * | 1992-11-12 | 1994-09-06 | Coral Systems, Inc. | Apparatus and method for detecting fraudulent telecommunication activity |
US6216130B1 (en) * | 1998-04-24 | 2001-04-10 | Ingeo Acquisitions, Inc. | Geographic-based information technology management system |
US20020091758A1 (en) * | 2001-01-05 | 2002-07-11 | Singh Raj R. | Map viewing, publishing, and provisioning system |
US7082365B2 (en) * | 2001-08-16 | 2006-07-25 | Networks In Motion, Inc. | Point of interest spatial rating search method and system |
US7103854B2 (en) * | 2002-06-27 | 2006-09-05 | Tele Atlas North America, Inc. | System and method for associating text and graphical views of map information |
US7177623B2 (en) * | 2003-07-02 | 2007-02-13 | The United States Of America As Represented By The Secretary Of The Army | Localized cellular awareness and tracking of emergencies |
US7822631B1 (en) * | 2003-08-22 | 2010-10-26 | Amazon Technologies, Inc. | Assessing content based on assessed trust in users |
US7373385B2 (en) * | 2003-11-03 | 2008-05-13 | Cloudmark, Inc. | Method and apparatus to block spam based on spam reports from a community of users |
US7599790B2 (en) * | 2004-03-23 | 2009-10-06 | Google Inc. | Generating and serving tiles in a digital mapping system |
US20050278386A1 (en) * | 2004-06-15 | 2005-12-15 | Geographic Data Technology, Inc. | Geospatial information system and method for updating same |
US8582567B2 (en) * | 2005-08-09 | 2013-11-12 | Avaya Inc. | System and method for providing network level and nodal level vulnerability protection in VoIP networks |
WO2006094275A2 (en) * | 2005-03-02 | 2006-09-08 | Markmonitor, Inc. | Trust evaluation systems and methods |
US7496588B2 (en) * | 2005-06-27 | 2009-02-24 | Siperian, Inc. | Method and apparatus for data integration and management |
US8874477B2 (en) * | 2005-10-04 | 2014-10-28 | Steven Mark Hoffberg | Multifactorial optimization system and method |
US20080201156A1 (en) * | 2007-02-21 | 2008-08-21 | Fatdoor, Inc. | User-generated community publication in a geo-spatial environment |
US20070264618A1 (en) * | 2006-05-09 | 2007-11-15 | Caryl Fuller | Three-dimensional earth science display device |
GB2440958A (en) * | 2006-08-15 | 2008-02-20 | Tomtom Bv | Method of correcting map data for use in navigation systems |
US8165808B2 (en) * | 2007-07-17 | 2012-04-24 | Yahoo! Inc. | Techniques for representing location information |
US8271477B2 (en) * | 2007-07-20 | 2012-09-18 | Informatica Corporation | Methods and systems for accessing data |
US8468212B2 (en) * | 2007-08-08 | 2013-06-18 | Silicon Image, Inc. | Network repository for metadata |
US20100070930A1 (en) * | 2008-09-04 | 2010-03-18 | Gilles Thibault | Business document system |
US8095519B2 (en) * | 2008-12-16 | 2012-01-10 | International Business Machines Corporation | Multifactor authentication with changing unique values |
US20120110006A9 (en) * | 2008-12-23 | 2012-05-03 | Humanbook, Inc | System and method for a remotely accessible web-based personal address book |
US8918306B2 (en) * | 2011-11-16 | 2014-12-23 | Hartford Fire Insurance Company | System and method for providing dynamic insurance portal transaction authentication and authorization |
-
2010
- 2010-03-29 US US12/749,441 patent/US8812585B2/en active Active
-
2011
- 2011-03-29 WO PCT/US2011/030280 patent/WO2011123421A1/en active Application Filing
-
2014
- 2014-07-01 US US14/321,226 patent/US10061854B2/en active Active
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070281689A1 (en) * | 2006-06-01 | 2007-12-06 | Flipt, Inc | Displaying the location of individuals on an interactive map display on a mobile communication device |
US20130067357A1 (en) * | 2006-06-22 | 2013-03-14 | Digg, Inc. | Evaluating content |
US20090112474A1 (en) * | 2007-10-25 | 2009-04-30 | Microsoft Corporation | View-Independent Tagging of Geospatial Entities in Images |
US20100332118A1 (en) * | 2008-03-14 | 2010-12-30 | Pieter Geelen | Navigation device and method using map data correction files |
US20100023259A1 (en) * | 2008-07-22 | 2010-01-28 | Microsoft Corporation | Discovering points of interest from users map annotations |
US20110087745A1 (en) * | 2009-10-14 | 2011-04-14 | International Business Machines Corporation | Group voting access control for multi-party forums |
US20110131172A1 (en) * | 2009-12-02 | 2011-06-02 | Microsoft Corporation | Identifying geospatial patterns from device data |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11323347B2 (en) | 2009-09-30 | 2022-05-03 | Www.Trustscience.Com Inc. | Systems and methods for social graph data analytics to determine connectivity within a community |
US11968105B2 (en) | 2009-09-30 | 2024-04-23 | Www.Trustscience.Com Inc. | Systems and methods for social graph data analytics to determine connectivity within a community |
US10812354B2 (en) | 2009-10-23 | 2020-10-20 | Www.Trustscience.Com Inc. | Parallel computational framework and application server for determining path connectivity |
US11665072B2 (en) | 2009-10-23 | 2023-05-30 | Www.Trustscience.Com Inc. | Parallel computational framework and application server for determining path connectivity |
US10380703B2 (en) | 2015-03-20 | 2019-08-13 | Www.Trustscience.Com Inc. | Calculating a trust score |
US11900479B2 (en) | 2015-03-20 | 2024-02-13 | Www.Trustscience.Com Inc. | Calculating a trust score |
US11386129B2 (en) * | 2016-02-17 | 2022-07-12 | Www.Trustscience.Com Inc. | Searching for entities based on trust score and geography |
US11341145B2 (en) | 2016-02-29 | 2022-05-24 | Www.Trustscience.Com Inc. | Extrapolating trends in trust scores |
US11640569B2 (en) | 2016-03-24 | 2023-05-02 | Www.Trustscience.Com Inc. | Learning an entity's trust model and risk tolerance to calculate its risk-taking score |
CN108052263A (en) * | 2017-12-28 | 2018-05-18 | 广东小天才科技有限公司 | A kind of screenshotss method and terminal device based on terminal device |
Also Published As
Publication number | Publication date |
---|---|
US10061854B2 (en) | 2018-08-28 |
WO2011123421A1 (en) | 2011-10-06 |
US20110238735A1 (en) | 2011-09-29 |
US8812585B2 (en) | 2014-08-19 |
WO2011123421A8 (en) | 2012-01-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10061854B2 (en) | Trusted maps: updating map locations using trust-based social graphs | |
JP5857134B2 (en) | User-based proactive content correction and enhancement for geodata | |
JP4909633B2 (en) | Posting information evaluation method and system | |
US9672240B2 (en) | Apparatus and method to update geographic database | |
US10582342B2 (en) | Location based computerized system and method thereof | |
US11836787B2 (en) | Systems and methods for transient local commerce search | |
US20110313779A1 (en) | Augmentation and correction of location based data through user feedback | |
US9256890B1 (en) | Framework for geolocation-based customer-to-product matching hosted in a cloud-computing environment | |
US11449898B2 (en) | Method, device, and storage medium for recommending point of interest for location-based service | |
Millard-Ball et al. | Map-matching poor-quality GPS data in urban environments: the pgMapMatch package | |
US11639857B2 (en) | Objective generation of a point of interest score based on quantities of user stops | |
CN110619085A (en) | Information processing method and device | |
US8781499B2 (en) | Methods and systems for remote flood zone determinations | |
US8781990B1 (en) | Crowdsensus: deriving consensus information from statements made by a crowd of users | |
US10798520B2 (en) | Remote flood zone determination method, system, and computer program product | |
US10956528B2 (en) | Automatic detection of point of interest change using cohort analysis | |
JP2016035679A (en) | Poi data creation device, terminal device, poi data creation method, and program | |
US10902033B2 (en) | Point of interest accuracy using tickets | |
CN114092009A (en) | Information display method and device, electronic equipment and computer readable medium | |
AU2014101670A4 (en) | Property proximity method and apparatus | |
CN113220988A (en) | Information prompting method and device, electronic equipment and computer readable medium | |
JPWO2019155555A1 (en) | Behavior index evaluation system, behavior index evaluation method, and program | |
NZ629929B (en) | Property proximity method and apparatus | |
RU2009140968A (en) | METHOD, NAVIGATION DEVICE AND SERVER FOR DETERMINING THE LOCATION IN THE DIGITAL MAP DATABASE |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
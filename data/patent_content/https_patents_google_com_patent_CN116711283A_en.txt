CN116711283A - Providing deterministic reasoning about fulfilling assistant commands - Google Patents
Providing deterministic reasoning about fulfilling assistant commands Download PDFInfo
- Publication number
- CN116711283A CN116711283A CN202180089018.1A CN202180089018A CN116711283A CN 116711283 A CN116711283 A CN 116711283A CN 202180089018 A CN202180089018 A CN 202180089018A CN 116711283 A CN116711283 A CN 116711283A
- Authority
- CN
- China
- Prior art keywords
- deterministic
- assistant
- fulfillment
- automated assistant
- command
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 74
- 230000004044 response Effects 0.000 claims abstract description 73
- 238000012545 processing Methods 0.000 claims description 65
- 230000009471 action Effects 0.000 claims description 48
- 230000015654 memory Effects 0.000 claims description 11
- 230000008569 process Effects 0.000 abstract description 7
- 239000011435 rock Substances 0.000 description 73
- 238000004891 communication Methods 0.000 description 12
- 238000010801 machine learning Methods 0.000 description 12
- 230000000007 visual effect Effects 0.000 description 11
- IJJWOSAXNHWBPR-HUBLWGQQSA-N 5-[(3as,4s,6ar)-2-oxo-1,3,3a,4,6,6a-hexahydrothieno[3,4-d]imidazol-4-yl]-n-(6-hydrazinyl-6-oxohexyl)pentanamide Chemical compound N1C(=O)N[C@@H]2[C@H](CCCCC(=O)NCCCCCC(=O)NN)SC[C@@H]21 IJJWOSAXNHWBPR-HUBLWGQQSA-N 0.000 description 5
- 230000026676 system process Effects 0.000 description 5
- 230000008878 coupling Effects 0.000 description 4
- 238000010168 coupling process Methods 0.000 description 4
- 238000005859 coupling reaction Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 238000005516 engineering process Methods 0.000 description 4
- 101100264195 Caenorhabditis elegans app-1 gene Proteins 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000002452 interceptive effect Effects 0.000 description 3
- 230000007246 mechanism Effects 0.000 description 3
- 230000001755 vocal effect Effects 0.000 description 3
- 241000282412 Homo Species 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 230000006855 networking Effects 0.000 description 2
- 230000002093 peripheral effect Effects 0.000 description 2
- 238000013518 transcription Methods 0.000 description 2
- 230000035897 transcription Effects 0.000 description 2
- 230000007704 transition Effects 0.000 description 2
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 239000003795 chemical substances by application Substances 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000009877 rendering Methods 0.000 description 1
Abstract
Embodiments described herein relate to eliciting deterministic reasoning about why an automated assistant performs (or does not perform) deterministic and/or alternative performance of assistant commands. For example, embodiments can receive user input including an assistant command, process the user input to determine data to utilize in performing deterministic or alternative fulfillment of the assistant command, and cause an automated assistant to utilize the data to perform deterministic or alternative fulfillment of the assistant command. In some implementations, in response to additional user input requesting deterministic reasoning, an output can be provided that includes deterministic reasoning for presentation to a user. In some implementations, the selectable elements can be visually rendered and, when selected by a user, can provide an output including deterministic reasoning for presentation to the user.
Description
Background
Humans may participate in human-machine conversations with interactive software applications, referred to herein as "automated assistants" (also referred to as "chat robots," "interactive personal assistants," "intelligent personal assistants," "personal voice assistants," "conversation agents," etc.). For example, humans (which may be referred to as "users" when they interact with an automated assistant) may provide spoken natural language input (i.e., spoken utterances) to the automated assistant, which in some cases may be converted to text and then processed, and/or by providing text (e.g., typed) natural language input or touch input. Automated assistants typically respond to these user inputs, including assistant commands, by providing responsive user interface outputs (e.g., audible and/or visual user interface outputs), controlling intelligent networking device(s), and/or performing other action(s).
Automated assistants typically rely on component pipelines to interpret and respond to these user inputs, including assistant commands. For example, an Automatic Speech Recognition (ASR) engine can process audio data corresponding to a spoken utterance of a user to generate an ASR output, such as a transcription of the spoken utterance (i.e., a sequence of term(s) and/or other token (s)). Further, a Natural Language Understanding (NLU) engine can process the ASR output to generate an NLU output, such as the user's intent in providing the spoken utterance and, optionally, the slot value(s) of the parameter(s) associated with the intent. Further, the fulfillment engine can be used to process the NLU output and generate fulfillment output, such as obtaining content of responses to the spoken utterance and/or structured requests to perform actions in response to the spoken utterance.
In some cases, the user may not understand why the automated assistant provided particular responsive content and/or performed particular actions in response to receiving these user inputs including assistant commands. This misunderstanding may be exacerbated when the automated assistant does not provide specific response content and/or does not perform specific actions that these users expect when providing user input. For example, if a given user provides user input directed to an automated assistant requesting that the automated assistant cause music to be played, but the automated assistant uses an undesired software application causing music to be played, or in response to the user input causing search results to be provided, the given user may be confused as to why the automated assistant did not cause music to be played in the desired manner. As a result, a given user may provide additional user input including the same user input or another instance of other user input to cause music to be played using a desired software application, thereby extending the duration of a human-machine conversation between the given user and the automated assistant. Furthermore, even if the automated assistant does use the desired software application such that music is played, a given user may be concerned about the automated assistant because the user may not know how the automated assistant can use the desired software application such that music is played, and may be concerned about the security of his/her data. Thus, it may be beneficial to provide a mechanism for a given user to understand why an automated assistant causes deterministic fulfillment of the assistant command to be performed.
Disclosure of Invention
Embodiments disclosed herein relate to eliciting deterministic reasoning about why an automated assistant performs (or does not perform) deterministic and/or alternative performance of assistant commands. For example, embodiments can receive user input including an assistant command, process the user input to determine data to utilize in performing deterministic or alternative fulfillment of the assistant command, and cause an automated assistant to utilize the data to perform deterministic or alternative fulfillment of the assistant command. In some implementations, in response to additional user input requesting deterministic reasoning, an output can be provided that includes deterministic reasoning for presentation to a user. In some implementations, one or more selectable elements can be visually rendered, and when a given one of the one or more selectable elements is selected by a user, an output can be provided for presentation to the user that includes deterministic reasoning.
For example, assume that the user of the client device provides the spoken utterance "play rock music". In this example, the automated assistant can use Automatic Speech Recognition (ASR) model(s) such that the audio data of the captured spoken utterance is processed to generate ASR outputs, such as speech hypotheses predicted to correspond to the spoken utterance, predicted phonemes predicted to correspond to the spoken utterance, and/or other ASR outputs, and optionally ASR metrics associated with each of the speech hypotheses, predicted phonemes, and/or other ASR outputs (e.g., that indicate a likelihood that a given speech hypothesis or a given predicted phoneme corresponds to the spoken utterance). Further, the automated assistant can cause the ASR output to be processed using a Natural Language Understanding (NLU) model(s) to generate an NLU output, such as one or more predicted intentions of the user in providing the spoken utterance, one or more slot values of corresponding parameters associated with each of the one or more predicted intentions, and/or other NLU outputs, and optionally NLU metrics associated with each of the intentions, slot values, and/or other NLU outputs (e.g., indicating a likelihood that the given intent and/or given slot value corresponds to providing an actual intent and/or desired slot value in the spoken utterance). In this example, the automated assistant can infer one or more slot values because the user only specified a particular music genre (e.g., rock), such as an artist slot value for an artist parameter associated with the musical intent, a song slot value for a song parameter associated with the musical intent, a software application or streaming service slot value for a software application or streaming service parameter associated with the musical intent, and so forth. Variants of the cut-off slot values can result in one or more interpretations of the spoken utterance. In various implementations, and assuming that the automated assistant is able to access one or more user profiles of the user of the client device, the automated assistant is able to infer one or more slot values using the user profile data. Otherwise, the automated assistant may utilize one or more default slot values.
Further, the automated assistant can cause the NLU output to be processed using one or more fulfillment rules and/or fulfillment model(s) to generate a fulfillment output, such as one or more structured requests to be transmitted to one or more fulfillment persons (e.g., software application(s), server(s), etc.) that can satisfy the spoken utterance. Upon transmitting the one or more structured requests, the one or more fulfillment persons can generate one or more fulfillment candidates and transmit the one or more fulfillment candidates back to the automated assistant. Assuming the automated assistant is able to access one or more user profiles of the user of the client device (e.g., that indicate a likelihood that a given one of the one or more fulfillment candidates will satisfy the spoken utterance, if implemented), the automated assistant is able to generate a fulfillment metric associated with each of the one or more fulfillment candidates in response to the received one or more fulfillment candidates based on the user profile data. The automated assistant can rank the one or more fulfillment candidates based on the ASR metrics, NLU metrics, and/or fulfillment metrics, and select deterministic fulfillment candidates based on the ranking. Furthermore, the automated assistant can cause the selected deterministic fulfillment candidates to be implemented in an attempt to satisfy the spoken utterance.
For example, in this example, assume that the automated assistant determines a first interpretation of the spoken utterance "play rock music" that includes a musical intention with an artist slot value of "artist 1" for an artist parameter associated with the musical intention, with a song slot value of "song 1" for a song parameter associated with the musical intention, and with a software application or stream service slot value of "application 1" for a software application or stream service parameter associated with the musical intention. Further assume that the automated assistant determines a first interpretation of the spoken utterance "play rock music" that includes a musical intention having an artist slot value of "artist 1" for an artist parameter associated with the musical intention, having a song slot value of "song 1" for a song parameter associated with the musical intention, and having a software application or stream service slot value of "application 2" for a software application or stream service parameter associated with the musical intention. In this case, "application 1" and "application 2" can be considered as one or more performers who can satisfy the spoken utterance. Thus, the automated assistant can transmit one or more structured requests to "application 1" and "application 2" (and optionally other performers who can satisfy the spoken utterance) to obtain one or more fulfillment candidates. Further, the automated assistant can rank the one or more fulfillment candidates and select deterministic fulfillment candidates such that deterministic fulfillment is performed in response to the spoken utterance. In this example, further assume that the automated assistant selects a fulfillment candidate associated with the first interpretation. Thus, the automated assistant can cause "song 1" of "artist 1" to be played as deterministic fulfillment of the spoken utterance using "application 1" via the speaker(s) of the client device (or an additional client device in communication with the client device).
In some implementations, and after the automated assistant causes deterministic fulfillment to be performed, the user of the client device may provide additional user input requesting the automated assistant to provide deterministic reasoning about why deterministic fulfillment is performed and/or why alternative fulfillment is not performed. In some versions of these embodiments, the request for deterministic reasoning may be a general request for deterministic reasoning (e.g., "why did you do that (why do you do so). For example, suppose the user provides a further spoken utterance "why did you do that? ". In this example, the request is a general request for deterministic reasoning, and the automated assistant can determine additional data associated with the first interpretation of the spoken utterance to generate an output responsive to the general request (e.g., "You use application 1the most to listen to music,you have listened to artist 1in the past,and song 1is artist 1's most popular song (you most commonly use application 1 to listen to music, you have listened to songs of artist 1in the past, and song 1is the most popular song of artist 1)", etc.). In contrast, suppose the user provides a further spoken utterance "whydin't you use application 2? ". In this example, the request is a specific request for deterministic reasoning, and the automated assistant can determine additional data associated with the first interpretation and/or the second interpretation of the spoken utterance to generate an output (e.g., "You use application 1more than application 2to listen to music (you use application 1more than application 2to listen to music)" etc.) in response to the general request. However, in this example with a specific request, it is assumed that the user has not yet authorized the automated assistant to access "application 2". In this example, the automated assistant can additionally or alternatively determine recommendation data associated with the recommended action and generate a hint based on the recommendation data that includes the recommended action (e.g., "You have not granted me access to use application 2,would you like to grant me access (do you not have authorized me to access application 2, do you want to authorize me to access. Thus, the automated assistant may not only provide deterministic reasoning about certainty of performance, but the automated assistant may also prompt the user to adapt to current and/or future performance in response to receiving user input including an assistant command.
In additional or alternative embodiments, and after the automated assistant causes deterministic fulfillment to be performed, the automated assistant may proactively cause one or more selectable elements associated with deterministic reasoning to be provided for presentation to the user via a display of the client device. For example, a first selectable element associated with a general request for deterministic reasoning can be provided for presentation to a user, and when selected, an automated assistant can be caused to provide deterministic reasoning in response to the general request. Further, additionally or alternatively, a second selectable element associated with the first particular request for deterministic reasoning can be provided for presentation to the user, and when selected, the automated assistant can be caused to provide deterministic reasoning in response to the first particular request. Further, additionally or alternatively, a third selectable element associated with the second particular request for deterministic reasoning can be provided for presentation to the user, and when selected, the automated assistant can be caused to provide deterministic reasoning in response to the second particular request. In some versions of these implementations, in response to determining that the ASR metrics, NLU metrics, and/or performance metrics fail to meet a threshold that indicates that the automated assistant is not highly confident of the deterministic performance of the assistant command, the automated assistant can cause one or more selectable elements to be provided for presentation to the user. In some versions of these embodiments, the automated assistant can cause one or more selectable elements to be provided for presentation to the user regardless of the ASR metrics, NLU metrics, and/or fulfillment metrics.
While the above examples are described with respect to providing deterministic reasoning about why an automated assistant selects a particular software application to cause music to be played (e.g., "application 1"), it should be understood that this is for purposes of example and is not meant to be limiting. As described herein, the techniques described herein can be used to provide deterministic reasoning about any aspect of fulfillment, such as why a particular computing device is selected to fulfill an assistant command, why a particular slot value for a corresponding parameter is selected, why an automated assistant cannot perform alternative fulfillment, and/or any other aspect described herein. Furthermore, while the recommended actions described in the above examples include a user authorizing the automated assistant to access a particular software application (e.g., "application 2"), it should be understood that this is also for purposes of example and is not meant to be limiting. The techniques described herein can be used to provide any recommended action to accommodate the fulfillment of the assistant command, such as downloading a software application at the client device, communicatively coupling additional client devices with the client device over the network(s), and/or any other recommended action described herein.
One or more technical advantages may be realized by using the techniques described herein. As one non-limiting example, the techniques described herein enable an automated assistant to provide deterministic reasoning for deterministic aspects of fulfillment (or lack thereof) so that by providing this deterministic reasoning, a user of a client device is made aware of when and how his/her data is utilized. Furthermore, the techniques described herein enable an automated assistant to quickly and efficiently adapt to the privacy settings of user data and reduce the amount of user input by eliminating the need for users to manually change the privacy settings of user data by navigating through various interfaces. Thus, security of user data is increased and computing resources of the client device can be saved. As another non-limiting example, by providing recommended actions to be performed and continuing the human-machine conversation, the automated assistant can save otherwise wasted user interactions. For example, if the user provides the spoken word "turn on the lights (turn on)" such that one or more intelligent lights are controlled, but the user has not authorized the automated assistant to access the software application for controlling the intelligent lights, the automated assistant can prompt the user to authorize access to the software application for controlling the intelligent lights, rather than simply instruct the automated assistant to not be able to control the lights in a timely manner at that particular moment. Thus, computational and/or network resources can be saved using the techniques described herein.
The foregoing description is provided as an overview of only some of the embodiments disclosed herein. These and other embodiments will be described in detail herein.
It should be appreciated that all combinations of the foregoing concepts and additional concepts described in more detail herein are considered a part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are considered part of the subject matter disclosed herein.
Drawings
FIG. 1 depicts a block diagram of an exemplary environment that illustrates aspects of the present disclosure and in which embodiments disclosed herein can be implemented.
FIG. 2 depicts a flowchart that shows an example method that causes deterministic fulfillment of an assistant command included in user input and directed to an automated assistant to be performed and causes deterministic reasoning to be provided as to why the automated assistant caused deterministic fulfillment of the assistant command, in accordance with various embodiments.
FIG. 3 depicts a flowchart that shows an example method of determining that deterministic fulfillment of an assistant command included in user input and directed to an automated assistant cannot be performed and causing deterministic reasoning about why the automated assistant cannot perform the deterministic fulfillment to be provided, in accordance with various embodiments.
Fig. 4A, 4B, and 4C depict various non-limiting examples that enable deterministic reasoning about the fulfillment of assistant commands to be provided, according to various embodiments.
Fig. 5A and 5B depict various additional non-limiting examples that enable deterministic reasoning about the fulfillment of assistant commands to be provided, according to various embodiments.
FIG. 6 depicts an example architecture of a computing device according to various embodiments.
Detailed Description
Turning now to fig. 1, a block diagram of an example environment is depicted that illustrates aspects of the present disclosure and in which embodiments disclosed herein can be implemented. An example environment includes a client device 110, one or more cloud-based automation assistant components 115, one or more first party servers 191, and one or more third party servers 192.
The client device 110 is capable of enforcing an automated assistant client 113. The automated assistant client 113 can be an application separate from the operating system of the client device 110 (e.g., installed "on top of" the operating system) -or can alternatively be implemented directly by the operating system of the client device 110. As described further below, the automated assistant client 113 is capable of optionally interacting with one or more cloud-based automated assistant components 115 in response to various requests received by the user interface component(s) 112 of the client device 110. Further, and as also described below, other engine(s) of the client device 110 can optionally interact with one or more cloud-based automation assistant components 115.
The one or more cloud-based automation assistant components 115 can be implemented on one or more computing systems (e.g., server(s) collectively referred to as "cloud" or "remote" computing systems) communicatively coupled to the client device 110 via one or more local area networks ("LANs," including Wi-Fi LANs, bluetooth networks, near field communication networks, mesh networks, etc.), wide area networks ("WANs," including the internet, etc.), and/or other networks. The communicative coupling of the cloud-based automation assistant component 115 with the client device 110 is generally represented by 199 of fig. 1 1 To indicate. Further, in some implementations, the client device 110 may be communicatively coupled with other client devices (not depicted) described herein via one or more networks (e.g., LAN and/or WAN).
The one or more cloud-based automation assistant components 115 can also be communicatively coupled with one or more first party servers 191 and/or one or more third party servers 192 via one or more networks (e.g., LANs, WANs, and/or other networks). The communicative coupling of the cloud-based automation assistant component 115 with the one or more first party servers 191 is generally represented by 199 of fig. 1 2 An indication. Further, the communicative coupling of the cloud-based automation assistant component 115 with the one or more third party servers 192 is generally performed by 199 of fig. 1 3 An indication. In some implementations, although not explicitly depicted in fig. 1, the client device 110 can additionally or alternatively be communicatively coupled with one or more first party servers 191 and/or one or more third party servers 192 via one or more networks (e.g., LAN, WAN, and/or other networks). Furthermore, for simplicity, one or more networks 199 1 、199 2 And 199 3 Hereinafter collectively referred to as network(s) 199).
Through its interaction with one or more cloud-based automation assistant components 115, the automation assistant client 113 may form a logical instance that appears to be the automation assistant 120 from the user's perspective, with which the user of the client device 110 may engage in a human-machine conversation. Examples of the automation assistant 120 enclosed by the dashed line include, for example, an automation assistant client 113 of the client device 110 and one or more cloud-based automation assistant components 115. Thus, it should be appreciated that each user interfacing with an automated assistant client 113 executing on a client device 110 may actually interface with his or her own logical instance of the automated assistant 120 (or a logical instance of the automated assistant 120 shared between a household or other group of users and/or shared among multiple automated assistant clients 113). Although only client device 110 is illustrated in fig. 1, it is to be understood that one or more cloud-based automation assistant components 115 can additionally serve many additional groups of client devices. Further, while a cloud-based automation assistant component 115 is illustrated in fig. 1, it should be appreciated that in various embodiments, the automation assistant 12 can be implemented exclusively at the client device 110.
As used herein, a first party device or system (e.g., one or more first party servers 191, one or more first party software applications, etc.) refers to a system controlled by the same party as the party controlling the automated assistant 120 referenced herein. For example, the one or more first party servers 191 can refer to systems hosting search engine services, communication services (e.g., email, SMS messaging, etc.), navigation services, music services, document editing or sharing services, and/or other services controlled by the same party that controls the automated assistant 120 referenced herein. In contrast, a third party device or system (e.g., one or more third party servers 192, one or more third party software applications, etc.) refers to a system controlled by a party other than the party controlling the automated assistant 120 referenced herein. For example, one or more third party servers 192 can refer to systems hosting the same services, but those services are controlled by a different party than the party controlling the automated assistant 120 referenced herein.
Client device 110 may include, for example, one or more of the following: a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device in a user's vehicle (e.g., an in-vehicle communication system, an in-vehicle entertainment system, an in-vehicle navigation system), an interactive independent speaker (e.g., with or without a display), a smart networking device (such as a smart home appliance, a smart television, a smart light, or a smart washer/dryer, etc.), a wearable apparatus including a user of the computing device (e.g., a watch of a user with the computing device, glasses of a user with the computing device, a virtual or augmented reality computing device), and/or any IoT device capable of receiving user input directed to the automated assistant 120. Additional and/or alternative client devices may be provided.
In various implementations, the client device 110 may include one or more presence sensors 111, the presence sensors 111 being configured to provide a signal indicative of a detected presence, in particular a human presence, upon approval by a user of the client device 110. In some of these implementations, the automated assistant 120 can identify the client device 110 (or another computing device associated with the user of the client device 110) to satisfy the spoken utterance (or other input directed to the automated assistant 120) based at least in part on the presence of the user at the client device 110 (or at another computing device associated with the user of the client device 110). The spoken utterance (or other input directed to the automated assistant 120) can be satisfied by rendering the responsive content at the client device 110 and/or other computing device(s) associated with the user of the client device 110 (e.g., audibly and/or visually), by causing the client device 110 and/or other computing device(s) associated with the user of the client device 110 to be controlled, and/or by causing the client device 110 and/or other computing device(s) associated with the user of the client device 110 to perform any other action that satisfies the spoken utterance (or other input directed to the automated assistant 120). As described herein, the automated assistant 120 can determine the client device 110 (or other computing device (s)) from where the user is near or recently near using data determined based on the presence sensor 111 and provide corresponding commands only to the client device 110 (or those other computing device (s)). In some additional or alternative implementations, the automated assistant 120 can utilize the data determined based on the presence sensor 111 to determine whether any user(s) (any user or particular user) are currently in proximity to the client device 110 (or other computing device (s)) and can optionally refrain from supplying data to the client device 110 (or other computing device (s)) and/or refrain from data from the client device 110 (or other computing device (s)) based on the user(s) in proximity to the client device 110 (or other computing device (s)).
The presence sensor 111 may be present in various forms. For example, the client device 110 may be equipped with one or more visual components (e.g., digital camera(s) and/or other visual component (s)) configured to capture and provide signal(s) indicative of movement detected in its field of view. Additionally or alternatively, the client device 110 may be equipped with other types of light-based presence sensors 111, such as passive infrared ("PIR") sensors that measure infrared ("IR") light radiated from objects within its field of view. Additionally or alternatively, the client device 110 may be equipped with a presence sensor 111, such as one or more microphones, that detects acoustic (or pressure) waves.
Additionally or alternatively, in some embodiments, the presence sensor 111 may be configured to detect other phenomena associated with human presence or device presence. For example, in some embodiments, client device 110 may be equipped with presence sensor 111 that detects various types of wireless signals (e.g., waves such as radio, ultrasonic, electromagnetic, etc.) emitted by other computing devices (e.g., mobile devices, wearable computing devices, etc.) and/or other computing devices that are carried/operated by, for example, a user. For example, the client device 110 may be configured to transmit human-imperceptible waves, such as ultrasonic or infrared waves, that may be detected by other computing device(s) (e.g., via an ultrasonic/infrared receiver such as a microphone supporting ultrasonic waves).
Additionally or alternatively, the client device 110 may emit other types of human-imperceptible waves, such as radio waves (e.g., wi-Fi, bluetooth, cellular, etc.), which may be detected by other computing device(s) (e.g., mobile devices, wearable computing devices, etc.) carried/operated by the user, and used to determine a particular location of the user. In some implementations, GPS and/or Wi-Fi triangulation may be used to detect the location of a person, e.g., based on GPS and/or Wi-Fi signals to/from client device 110. In other implementations, other wireless signal characteristics (such as time of flight, signal strength, etc.) may be used, alone or in combination, by client device 110 to determine the location of a particular person based on signals transmitted by other computing device(s) carried/operated by the user.
Additionally or alternatively, in some implementations, the client device 110 may perform voice recognition to recognize users from their voices. For example, some instances of the automated assistant 120 may be configured to match speech to a user's profile, e.g., in order to provide/limit access to various resources. In some implementations, movement of the speaker may then be determined, for example, by the presence sensor 111 (and optionally a GPS sensor and/or accelerometer) of the client device 110. In some implementations, based on such detected movements, a location of the user may be predicted, and may be assumed to be a location of the user when any content is rendered at the client device 110 and/or other computing device(s) based at least in part on the proximity of the client device 110 and/or other computing device(s) to the user location. In some implementations, the user may simply be assumed to be at the last location he or she is engaged with the automated assistant 120, especially if not too much time has elapsed since the last engagement.
Client device 110 also includes user interface component(s) 112, which can include one or more user interface input devices (e.g., microphone(s), touch screen, keyboard, and/or other input devices) and/or one or more user interface output devices (e.g., display, speaker, projector, and/or other output devices). In addition, client device 110 and/or any other computing device(s) may include one or more memories for storing data and software applications, one or more processors for accessing data and executing applications, and other components that facilitate communication over network(s) 199. In some implementations, the operations performed by the client device 110, other computing device(s), and/or by the automated assistant 120 may be distributed across multiple computer systems, while in other implementations, the operations described herein may be performed exclusively at the client device 110 or at a remote system. The automated assistant 110 may be implemented, for example, as a computer program running on one or more computers of one or more locations that are coupled to one another through a network (e.g., network(s) 199 of fig. 1).
As described above, in various embodiments, the client device 110 may operate an automated assistant client 113. In various embodiments, the automated assistant client 113 can include a speech capture/Automatic Speech Recognition (ASR)/Natural Language Understanding (NLU)/text-to-speech (TTS)/fulfillment module 114. In other implementations, one or more aspects of the respective speech capture/ASR/NLU/TTS/fulfillment module 114 may be implemented separately from the automation assistant client 113 (e.g., through one or more cloud-based automation assistant components 115).
The speech capture/ASR/NLU/TTS/fulfillment module 114 may be configured to perform one or more functions including, for example: capturing the user's voice (voice capture, e.g., via respective microphone(s) (which may include one or more presence sensors 111 in some cases)); converting the captured audio into recognized text and/or other representations or embeddings using ASR model(s) stored in Machine Learning (ML) model database(s) 120A; parsing and/or annotating the recognized text using NLU model(s) stored in ML model database(s) 120A; and/or use one or more fulfillment rules and/or fulfillment models stored in ML model database(s) 120A to determine fulfillment data to be utilized in generating the structured request to obtain data and/or cause an action to be performed in response to the user's voice. Further, the speech capture/ASR/NLU/TTS/fulfillment module 114 may be configured to convert text to speech using TTS model(s) stored in ML model database(s) 120A and can provide synthesized speech audio data that captures synthesized speech based on the text to speech conversion for audible presentation to a user of the client device 110 via speaker(s) of the client device 110. These instance(s) of the ML model(s) may be stored locally at the client device 110 and/or may be accessed by the client device 110 over the network(s) 199 of fig. 1. In some implementations, because the client device 110 may be relatively constrained in terms of computing resources (e.g., processor cycles, memory, battery, etc.), the respective speech capture/ASR/NLU/TTS/fulfillment module 114 local to the client device 110 may be configured to convert a limited number of different spoken phrases into text (or into other forms, such as lower-dimensional embedding) using the speech recognition model(s).
Some speech inputs may be sent to one or more cloud-based automation assistant components 115, which may include a cloud-based ASR module 116, a cloud-based NLU module 117, a cloud-based TTS module 118, and/or a cloud-based fulfillment module 119. These cloud-based automation assistant components 115 can utilize nearly unlimited resources of the cloud to perform the same or similar functionality described with respect to the speech capture/ASR/NLU/TTS/fulfillment module 114 local to the client device 110, but it should be noted that the speech capture/ASR/NLU/TTS/fulfillment module 114 can perform this functionality locally at the client device 110 without interacting with the cloud-based automation assistant components 115.
Although fig. 1 is described with respect to a single client device having a single user, it should be understood that this is for purposes of illustration and is not meant to be limiting. For example, one or more additional client devices of the user may also be capable of implementing the techniques described herein. These additional client devices may communicate with client device 110 (e.g., over network(s) 199). As another example, the client device 110 can be utilized by multiple users in a shared setting (e.g., a group of users, a family, a hotel room, a shared space of an enterprise, etc.).
In some implementations, the client device 110 can also include various engines for responding to additional user inputs requesting deterministic reasoning such that deterministic reasoning about the fulfillment of assistant commands included in the user inputs and directed to the automated assistant 120 is provided for presentation to the user of the client device 110. For example, and as depicted in fig. 1, client device 110 can also include a request engine 130 and an inference engine 140. The client device 110 can also include on-device memory that includes user profile database(s) 110A, ML model database(s) 120A, and metadata database 140A. In some implementations, these various engines can be implemented exclusively on the client device 110. In additional or alternative embodiments, one or more of these various engines can be implemented remotely from the client device 110 (e.g., as part of the cloud-based automation assistant component 115). For example, in implementations in which the assistant command is fulfilled locally at the client device 110, on-device instances of these various engines can be used to perform the operations described herein. However, in implementations in which the assistant command is fulfilled remotely from the client device 110 (e.g., as part of the cloud-based automated assistant component 115), remote instances of these various engines can be used to perform the operations described herein.
In some implementations, and after fulfilling the assistant command included in the user input detected via the user interface component(s) 112 of the client device and directed to the automated assistant 120, the request engine 130 can cause additional user input to be processed (e.g., using one or more aspects of the speech capture/ASR/NLU/TTS/fulfillment module 114) to determine whether the additional user input includes a request. For example, assume that the user of client device 110 provides a spoken utterance "turn on the lights" to cause a light of a residence of the user of client device 110 to transition from an off state to an on state. As described in more detail with reference to fig. 2 and 3, the audio data of the captured spoken utterance can be processed using the ASR model(s) stored in the ML model database(s) 120A to generate an ASR output (optionally including ASR metrics), the ASR output can be processed using the NLU model(s) stored in the ML model database(s) 120A to generate an NLU output (optionally including NLU metrics), and the NLU output can be processed using the fulfillment rule(s) and/or the fulfillment model(s) stored in the ML model database(s) 120A to generate a fulfillment output. The structured request(s) associated with the fulfillment output can be transmitted to one or more fulfillment persons, such as various software applications locally performed at the client device 110 and/or remotely performed at the first party server(s) 191 and/or third party server(s) 192, and one or more fulfillment candidates can be generated in response to the structured request(s) (and each fulfillment metric can be associated with one or more corresponding fulfillment measures). The automated assistant 120 can cause one or more fulfillment candidates to be ranked based on the ASR metrics, NLU metrics, and/or fulfillment metrics. ASR metrics, NLU metrics, performance metrics, and/or any other data associated with the performance of the spoken utterance can be stored in metadata database 140A. This data can then be accessed by the automated assistant 120 to determine data associated with providing deterministic reasoning for fulfilling assistant commands as described herein (e.g., with reference to fig. 2, 3, 4A-4C, and 5A-5B).
However, in this example, it is further assumed that the user of the client device 110 has not authorized the automated assistant 120 to access the software applications or services associated with controlling lights at the premises of the user of the client device. Thus, one or more fulfillment candidates in this example may indicate that there is no accessible software application at the client device 110 or at the server (e.g., first party server(s) 191 and/or third party server) that is capable of satisfying the spoken utterance, because data to be utilized at turn-on cannot be determined due to at least lack of access to one or more of these fulfillment persons. Thus, the automated assistant 120 can determine alternative data to utilize when informing the user of the client device 110 that the automated assistant 120 cannot satisfy the spoken utterance. Thus, the automated assistant 120 can utilize the speech capture/ASR/NLU/TTS/fulfillment module 114 to generate synthesized speech audio data including, for example, synthesized speech based on the replacement data "Sorry, but I cannot turn on the lights (inexact, but i cannot turn on)", and cause the synthesized speech to be provided for audible presentation via speaker(s) of the client device 110.
In some implementations, and assuming that the user of the client device 110 provides additional user input requesting the automated assistant 120 to provide information regarding why the automated assistant 120 caused the certainty of the assistant command to fulfill the performed certainty, the request engine 130 can determine whether the request is a general request for fulfilling the certainty or a specific request for fulfilling the certainty. The request engine 130 can determine whether the request is for a general request for definitive reasoning about fulfillment or for a particular request for definitive reasoning about fulfillment based at least on NLU output generated from processing additional user input, and the reasoning engine 140 can adapt additional data determined to provide definitive reasoning based on the type of request (e.g., as described with respect to fig. 2, 3, 4A-4C, and 5A-5B). In additional or alternative embodiments, the automated assistant 120 can obtain recommendation data to determine recommended actions that, when executed, enable the automated assistant 120 to cause deterministic fulfillment of the assistant command. In this example, the recommended action can include authorizing the automated assistant 120 to access a software application or service that can cause the light to be controlled. Thus, the automated assistant 120 can utilize the speech capture/ASR/NLU/TTS/fulfillment module 114 to generate additional synthesized speech audio data based on the recommendation data, including synthesized speech such as "" "I would be able to control the lights if you granted me access to lights application (i will be able to control the lights if you authorize me access to the light application)", and cause the synthesized speech to be provided for audible presentation via speaker(s) of the client device 110. It should be understood that the above description is provided for purposes of example and is not meant to be limiting, and that additional descriptions of the techniques described herein are provided below with reference to fig. 2, 3, 4A-4C, and 5A-5B.
Turning now to fig. 2, a flow diagram is depicted that illustrates an exemplary method 200 that enables deterministic fulfillment of an assistant command included in a user input and directed to an automated assistant to be performed. For convenience, the operations of method 200 are described with reference to a system performing the operations. The system of method 200 includes one or more processors, memory, and/or other component(s) of a computing device(s) (e.g., client device 110 of fig. 1, client device 410 of fig. 4A-4C, client device 510 of fig. 5A-5B, computing device 610 of fig. 6, one or more servers, and/or other computing devices). Moreover, although the operations of method 200 are shown in a particular order, this is not intended to be limiting. One or more operations may be reordered, omitted, and/or added.
At block 252, the system receives user input from a user of the client device that includes an assistant command and is directed to an automated assistant. In some implementations, the user input can correspond to a spoken utterance captured in audio data generated by a microphone(s) of the client device. In additional or alternative implementations, the user input can correspond to touch input or key input received via a display of the client device or another input device of the client device (e.g., a keyboard and/or mouse).
At block 254, the system processes the user input to determine data to utilize in performing deterministic fulfillment of the assistant command. In embodiments in which the user input corresponds to a spoken utterance, the audio data of the captured spoken utterance can be processed using the ASR model(s) to generate an ASR output (e.g., speech hypothesis(s), phoneme(s), and/or other ASR output), and optionally an ASR metric associated with the ASR output. Further, the ASR output can be processed using the NLU model(s) to generate an NLU output (e.g., intent(s) determined based on the ASR output, slot value(s) of parameter(s) associated with intent(s) determined based on the ASR output, etc.), and optionally an NLU metric associated with the NLU output. Further, the NLU output can be processed using the fulfillment rule(s) and/or the fulfillment model(s) to generate a fulfillment output utilized in generating the request to be transmitted to obtain data utilized in performing the fulfillment of the assistant command and/or to cause the action(s) to be performed based on the fulfillment output (e.g., to the first party server(s) 191 of fig. 1, the third party server(s) 192 of fig. 1, the first party software application(s) implemented locally at the client device, the third party software application(s) implemented locally at the client device, etc.), and optionally the fulfillment metrics associated with the fulfillment data. In embodiments in which the user input corresponds to a touch input or a typed input, text corresponding to the touch input or typed input can be processed using the NLU model(s) to generate an NLU output and optionally an NLU metric associated with the NLU output. Further, the NLU output can be processed using the fulfillment rule(s) and/or the fulfillment model(s) to generate a fulfillment output utilized in generating the request, the request to be transmitted to obtain data utilized in performing the fulfillment of the assistant command and/or to cause the action(s) to be performed based on the fulfillment output in performing the fulfillment of the assistant command.
At block 256, the system causes the automated assistant to utilize the data to perform deterministic fulfillment of the assistant command. Notably, the fulfillment output can include data transmitted to one or more of the first party server(s) 191 of fig. 1, the third party server(s) 192 of fig. 1, the first party software application(s) implemented locally at the client device, the third party software application(s) implemented locally at the client device, and the like, thereby generating one or more fulfillment candidates. The system can select deterministic fulfillment candidates from among the one or more fulfillment candidates to perform deterministic fulfillment of the assistant command based on, for example, ASR metrics, NLU metrics, and/or fulfillment metrics. For example, assume that the user of the client device provides the spoken utterance "play rock music". In this example, the audio data of the captured spoken utterance can be processed using the ASR model(s) to generate a first speech hypothesis of a "play rock music" associated with a first ASR metric (e.g., a likelihood that the first speech hypothesis corresponds to term(s) and/or phrase(s) included in the spoken utterance, such as a probability, a binary value, a logarithmic likelihood, etc.), a second speech hypothesis of a "play Bach music" associated with a second ASR metric, and/or other speech hypotheses and corresponding metrics as ASR output. Further, each speech hypothesis can be processed using NLU model(s) to generate, as NLU data, a first intent of "play music" having a "rock" slot value of a genre parameter associated with the first NLU metric (e.g., the first intent and likelihood that the slot value(s) corresponds to the user's desired intent, such as probability, binary value, logarithmic likelihood, etc.), and a second intent of "bach" slot value of an artist parameter associated with the second NLU metric.
Further, one or more of the fulfillment candidates in this example can include, for example, a first fulfillment candidate to play rock music using a first party media application associated with a first fulfillment metric (e.g., returned to the system by the first party media application in response to a fulfillment request from the system), a second fulfillment candidate to play rock music using a third party media application associated with a second fulfillment metric (e.g., returned to the system by the third party media application in response to a fulfillment request from the system), a third fulfillment candidate to play bach music using a first party media application associated with a third fulfillment metric (e.g., also returned to the system by the first party media application in response to a fulfillment request from the system), a fourth fulfillment candidate to play bach music using a third party media application associated with a fourth fulfillment metric (e.g., also returned to the system by the third party media application in response to a fulfillment request from the system), and/or other fulfillment candidates. In this example, and assuming that the ASR metrics, NLU metrics, and/or performance metrics indicate that the first performance candidate for playing rock music using the first party media application is most likely to satisfy the spoken utterance, the automated assistant can cause the first party media application to begin playing rock music as deterministic performance of the assistant command. In this example, the system can infer the slot values for other parameters associated with the "play music" intent, as well as both interpretations (e.g., as part of the NLU output). For example, with respect to the first interpretation of "play rock music," the system can infer an artist slot value for an artist parameter (e.g., the most user-listened rock artist), infer a software application slot value for a software application parameter (e.g., the most user-listened application for music), infer a song slot value for a song parameter (e.g., the most user-listened rock song or the most user-listened bach work), etc., based on user profile data (e.g., stored in the user profile database(s) 110A of the client device 110 of fig. 1), if any of these is accessible by the system. Otherwise, the system may utilize default slot values for one or more of these parameters. In other examples, the user may specify slot values for one or more of these parameters, such as a particular artist, a particular software application, and so forth.
In some implementations, the block 256 may include a sub-block 256A. If so, at sub-block 256A, the system causes one or more optional elements associated with deterministic reasoning for deterministic fulfillment to be provided for presentation to the user. Deterministic reasoning for deterministic fulfillment can include, for example, one or more reasons why deterministic fulfillment candidates are selected from among one or more fulfillment candidates in response to user input. In response to receiving a user selection of a given selectable element of the one or more selectable elements from a user of the client device, the system can cause deterministic reasoning to be provided for presentation to the user of the client device. In some versions of those embodiments, in response to determining that the ASR metrics, NLU metrics, and/or performance metrics associated with the selected deterministic performance candidates do not meet the metric threshold, the system can cause one or more selectable elements associated with deterministic reasoning for deterministic performance to be provided for presentation to the user. In other words, in response to the system determining that the selected certainty fulfillment candidate is most likely to be desired by the user, but the system is not very confident of the selected certainty fulfillment candidate, the system can cause one or more selectable elements associated with the certainty reasoning for certainty fulfillment to be provided for presentation to the user. In other versions of those embodiments, the system can cause one or more selectable elements associated with deterministic reasoning for deterministic performance to be provided for presentation to the user regardless of ASR metrics, NLU metrics, and/or performance metrics associated with the selected deterministic performance candidates. As described herein (e.g., with reference to fig. 5B), one or more optional elements can be associated with a general request or one or more corresponding specific requests.
At block 258, the system determines whether a request is received at the client device for deterministic reasoning about why the automated assistant is caused to perform deterministic performance. In some implementations, a request for a deterministic inference as to why the automated assistant enabled deterministic fulfillment to be performed can be included in additional user input received at the client device. In some versions of those implementations, the system can process the additional user input using the ASR model(s) to generate ASR output, use the NLU model(s) to generate NLU data, and/or use the fulfillment rule(s) or model(s) to generate fulfillment output in the same or similar manner as described with respect to block 252 to determine whether the additional user input includes a request for deterministic reasoning. For example, regardless of whether the additional user input is a spoken utterance or a typed input, the additional user input can be processed to generate an NLU output, and the system can determine whether the additional user input includes a request for deterministic reasoning about why the automated assistant caused deterministic performance to be performed based on the NLU output (e.g., intent associated with the request for deterministic reasoning). In additional or alternative versions of those embodiments, a request for a deterministic inference as to why the automated assistant enabled deterministic fulfillment to be performed can be included in a user selection of one or more selectable elements received at the client device (e.g., as described above with respect to sub-block 256A). At the iteration of block 258, if the system determines that a request for deterministic reasoning about why the automated assistant caused the deterministic performance to be performed was not received at the client device, the system continues to monitor at block 258 the request for deterministic reasoning about why the automated assistant caused the deterministic performance to be performed (and optionally for a threshold duration (e.g., 5 seconds, 10 seconds, 15 seconds, and/or any other threshold duration) after causing the deterministic performance to be performed). At the iteration of block 258, if the system determines that a request is received at the client device for deterministic reasoning about why the automated assistant is to cause deterministic performance to be performed, the system proceeds to block 260.
At block 260, the system processes additional user input including a request to determine additional data to utilize in providing deterministic reasoning. The additional data determined to provide deterministic reasoning can be based on, for example, the type of request included in the additional user input. Thus, at block 262, the system determines the request type for deterministic reasoning. The request types can be, for example, general requests for deterministic reasoning about why an automated assistant causes certainty to perform performed (e.g., "why did you do that. For example, the additional user input can be processed to generate an NLU output, and the system can determine whether the additional user input includes a request for deterministic reasoning about why the automated assistant caused the deterministic to perform based on the NLU output (e.g., intent associated with a general request for deterministic reasoning and/or intent associated with a specific request for deterministic reasoning).
At the iteration of block 262, if the system determines that the type of request for deterministic reasoning is a general request for deterministic reasoning, the system proceeds to block 264. At block 264, the system determines the first additional data as additional data that provides deterministic reasoning. Continuing with the example of "play rock music" above, a general request for deterministic reasoning can be made through, for example, "why did you do that? "wherein" that "refers to a selected deterministic fulfillment candidate such as playing rock music using a first party media application and a selected particular rock artist and particular rock song. In response to determining that the type of request is a general request, the system can obtain first data associated with the deterministic fulfillment candidate as additional data corresponding to the output, such as, "I selected the first-party application because you share your application usage with me and use it the most to listen to music (i select the first party application because you share your application use with i and most commonly use it to listen to music)", "I selected a certain artist because you share your music preferences with me and you listen to the certain artist the most (i select a certain artist because you share your music preference with i and most commonly listen to a certain artist)", "I selected a certain song by the certain artist because it the certain artist's most popular song (i select a certain song of a certain artist because it is the most popular song of the artist)", and/or other inferences associated with why the system selects the deterministic fulfillment candidate (or inferred particular slot value) in response to user input.
At the iteration of block 262, if the system determines that the type of request for deterministic reasoning is a particular request for deterministic reasoning, the system proceeds to block 266. At block 266, the system determines the second additional data as additional data that provides deterministic reasoning. Continuing with the example of "play rock music" above, a particular request for deterministic reasoning can be made by, for example, the request "why did you select the first-party music application? "," why didn't you select the third-party music application? "," why did you select the certain artist? "," why did you select the certain artist's most popular song? "and/or other specific requests. In response to determining that the type of request is a particular request, the system can obtain second data associated with deterministic fulfillment candidates or alternative fulfillment candidates included in one or more fulfillment candidates as additional data corresponding to the output, e.g., "I selected the first-party application because you share your application usage with me and use it the most to listen to music", "I did not select the third-party application because you have not provided me with access to the third-party application (i have not selected a third party application because you have not provided me with access to the third party application)", "I selected a certain artist because you share your music preferences with me and you listen to the certain artist the most", "I selected a certain song by the certain artist because it the certain artist's most popular song", and/or other inferences associated with why the system selected deterministic fulfillment candidates or did not select particular alternative fulfillment candidates in response to user input.
At block 268, the system causes the automated assistant to utilize the additional data to provide an output including deterministic reasoning for presentation to the user. In some implementations, the output including deterministic reasoning can include synthesized speech audio data including synthesized speech that captures deterministic reasoning characterized by additional data. In some versions of these implementations, text corresponding to deterministic reasoning generated by the system based on metadata associated with one or more fulfillment candidates can be processed using TTS model(s) (e.g., stored in ML model database(s) 120A of fig. 1) to generate synthesized speech audio data, and the synthesized speech audio data can be audibly rendered for presentation to a user via a speaker(s) of a client device or an additional client device in communication with the client device. In additional or alternative embodiments, the output including deterministic reasoning can include text or other graphical content that is visually rendered for presentation to the user via a display of the client device or an additional client device in communication with the client device. The system can return to block 252 and perform additional iterations of the method 200 of fig. 2 in response to receiving another user input that includes another assistant command and is directed to the automated assistant.
Turning now to fig. 3, a flow chart illustrating an example method 300 of determining that deterministic fulfillment of an assistant command included in a user input and directed to an automated assistant cannot be performed is depicted. For convenience, the operations of method 300 are described with reference to a system performing the operations. The system of method 300 includes one or more processors, memory, and/or other component(s) of a computing device(s) (e.g., client device 110 of fig. 1, client device 410 of fig. 4A-4C, client device 510 of fig. 5A-5B, computing device 610 of fig. 6, one or more servers, and/or other computing devices). Moreover, although the operations of method 300 are shown in a particular order, this is not intended to be limiting. One or more operations may be reordered, omitted, and/or added.
At block 352, the system receives user input from a user of the client device that includes an assistant command and is directed to an automated assistant. In some implementations, the user input can correspond to a spoken utterance captured in audio data generated by a microphone(s) of the client device. In additional or alternative implementations, the user input can correspond to touch input or key input received via a display of the client device or another input device of the client device (e.g., a keyboard and/or mouse).
At block 354, the system determines whether data to be utilized in performing deterministic fulfillment of the assistant command can be determined. In embodiments in which the user input corresponds to a spoken utterance, the audio data of the captured spoken utterance can be processed using the ASR model(s) to generate an ASR output (e.g., speech hypothesis(s), phoneme(s), and/or other ASR output), and optionally an ASR metric associated with the ASR output. Further, the ASR output can be processed using the NLU model(s) to generate an NLU output (e.g., intent(s) determined based on the ASR output, slot value(s) of parameter(s) associated with intent(s) determined based on the ASR output, etc.), and optionally an NLU metric associated with the NLU output. Further, the NLU output can be processed using the fulfillment rule(s) and/or the fulfillment model(s) to generate fulfillment data to be utilized in performing the fulfillment of the assistant command, and optionally, a fulfillment metric associated with the fulfillment data. In embodiments in which the user input corresponds to a touch input or a typed input, text corresponding to the touch input or typed input can be processed using the NLU model(s) to generate an NLU output and optionally an NLU metric associated with the NLU output. Further, the NLU output can be processed using the fulfillment rule(s) and/or the fulfillment model(s) to generate a fulfillment output utilized in generating the request, the request to be transmitted to obtain data utilized in performing the fulfillment of the assistant command and/or to cause the action(s) to be performed based on the fulfillment output in performing the fulfillment of the assistant command.
The system can determine whether data to utilize in performing deterministic performance of the assistant command can be determined based on data received in response to the transmitted performance output, to obtain data utilized in performing performance of the assistant command, and/or to cause the action(s) to be performed based on the performance output in performing performance of the assistant command. As described above with reference to fig. 2, the data obtained in response to the fulfillment output can include one or more fulfillment candidates. The system can select deterministic fulfillment candidates from among the one or more fulfillment candidates to perform deterministic fulfillment of the assistant command based on, for example, ASR metrics, NLU metrics, and/or fulfillment metrics associated with the user input. For example, assume that the user of the client device provides a spoken utterance "turn on the lights". In this example, the audio data of the captured spoken utterance can be processed using the ASR model(s) to generate a speech hypothesis of "turn on the lights" associated with an ASR metric (e.g., a likelihood that the first speech hypothesis corresponds to term(s) and/or phrase(s) included in the spoken utterance, such as probability, binary value, logarithmic likelihood, etc.) as ASR output. Further, each speech hypothesis can be processed using NLU model(s) to generate a "turn on the lights" intent associated with the NLU metric (e.g., first intent and likelihood that the slot value(s) corresponds to the user's desired intent, such as probability, binary value, logarithmic likelihood, etc.) as NLU data. Further, the fulfillment output can include, for example, a request for one or more software applications (e.g., a first party software application and/or a third party software application capable of turning on a light). However, in this example, it is assumed that the automated assistant does not have access to any software applications for controlling the lights. Thus, in this example, the system may not be able to transmit the fulfillment output to any software application, and the one or more fulfillment candidates may include only empty fulfillment candidates that indicate that the spoken utterance cannot be fulfilled because the automated assistant cannot interact with the software application to control the lights. Instead, and assuming that the automated assistant does have access to the software application for controlling the lights, the system may determine that data to be utilized in performing deterministic fulfillment of the assistant command can be determined because the automated assistant can interact with the software application to control the lights, and the one or more fulfillment candidates can include one or more assistant commands that, when executed, cause the lights to be controlled.
At the iteration of block 354, if the system determines that data to be utilized in performing deterministic fulfillment of the assistant command can be determined, the system proceeds to block 256 of FIG. 2 and continues with the iteration of method 200 of FIG. 2. For example, in the above example where the automated assistant has access to a software application for controlling the lights, the system can proceed to block 256 of fig. 2 and continue the iteration of method 200 of fig. 2 described above from block 256 such that deterministic fulfillment of the assistant command is performed and, if requested, deterministic reasoning is provided for deterministic fulfillment, as described above with respect to fig. 2. At the iteration of block 354, if the system determines that the data to be utilized in performing deterministic fulfillment of the assistant command cannot be determined, the system proceeds to block 356. For example, in the example above where the automated assistant has access to a software application for controlling the lights, the system can proceed to block 356.
At block 356, the system determines whether alternative data to be utilized in performing alternative fulfillment of the assistant command can be determined. For example, the system can analyze one or more fulfillment candidates to determine if one or more alternative fulfillment candidates exist. At the iteration of block 356, if the system determines that the alternative data to be utilized in performing the alternative fulfillment of the assistant command cannot be determined, the system proceeds to block 358. For example, continuing the above example, where the user of the client device provides the spoken utterance "turn on the lights" and the automated assistant does not have access to any software application for controlling the lights, the system can determine that no alternative fulfillment candidates (e.g., only empty fulfillment candidates) are included in the one or more fulfillment candidates. In this example, the system can determine to proceed to block 358.
At block 358, the system processes the user input to determine recommendation data to be used to generate recommendation actions regarding how the automated assistant can perform deterministic performance. Continuing with the example above, the system can determine that deterministic fulfillment of the control light in response to the spoken utterance "turn on the lights" can be performed, but the fact is that the user has not yet authorized the automated assistant to access the software application for controlling the light. Thus, in this example, the recommended action can include an indication that the user should authorize the automated assistant to access the software application utilized in controlling the light. As another example, and assuming that the software application for controlling the light is not installed at the client device, the system is able to determine that deterministic fulfillment of the control light in response to the spoken utterance "turn on the lights" can be performed, but the fact is that the user has not yet installed the software application for controlling the light and the user needs to authorize the automated assistant to access the software application for controlling the light.
At block 360, the system causes the automated assistant to utilize the recommendation data to provide an output comprising the recommended action for presentation to the user. The output including the recommended actions can be audibly and/or visually rendered for presentation to the user (e.g., as described with respect to block 268 of fig. 2). In some implementations, the output including the recommended action can include a prompt that enables the user to provide additional input that causes the automated assistant to automatically perform the recommended action. Continuing with the example above, the system can cause the output "I cannot turn on the lights right now, but I can if you grant me access to the software application utilized to control the lights, would you like to grant me access (i cannot turn on the light now, but if you grant me access to the software application for controlling the light, i can turn on the light, do you like to grant me access? ". Thus, output provided for presentation to the user including recommended actions can indicate one or more of how the automated assistant can perform deterministic fulfillment of the assistant command (e.g., "I cannot turn on the lights right now, but I can if you grant me access to the software application utilized to control the lights") and prompt the user to cause deterministic fulfillment of the execution of the assistant command (e.g., "would you like to grant me access. In additional or alternative embodiments, the output including the recommended action can include step-by-step instructions for the user to follow to enable the automated assistant to perform deterministic fulfillment of the assistant command (e.g., "(1) open settings, (2) open software application sharing settings, (3) share software application settings for the light application"). The system may return to block 352 and perform additional iterations of the method 300 of fig. 3 in response to receiving another user input that includes another assistant command and is directed to an automated assistant.
At the iteration of block 356, if the system determines that alternative data to be utilized in performing alternative fulfillment of the assistant command can be determined, the system proceeds to block 362. In contrast to the example in which the user provided the spoken utterance "turn on the lights," assume that the user provided the spoken utterance "play rock music using application 2 (play rock music using application 2)" received at block 352. Further assume that the user has not authorized the automated assistant to access "application 2". Thus, in this example, at the instance of block 354, deterministic fulfillment of the rock music playing at "application 2" cannot be performed. However, at the example of block 356, the system may determine that there are alternative fulfillment candidates that are different from the previous example. For example, in this example, further assume that the user has authorized the automated assistant to access "application 1" so that the automated assistant can alternatively utilize "application 1" to play rock music.
At block 362, the system processes the user input to determine alternative data to utilize in alternative fulfillment of the assistant command. Continuing with the example above, where the user provides the spoken utterance "play rock music using application 2", a fulfillment output including a structured request to play rock music can initially be transmitted to at least "application 2". In some implementations, and in response to transmitting the fulfillment output to "application 2," the system may receive an indication of a null fulfillment candidate because the user has not authorized the automated assistant to access "application 2. In additional or alternative embodiments, the system may determine that the user has not authorized the automated assistant to access "application 2", and the system may refuse to transmit the request to "application 2" and determine a null fulfillment candidate because the user has not authorized the automated assistant to access "application 2". However, in attempting to perform fulfillment of the request to play music, the system may transmit a fulfillment output to "application 1" (and optionally in response to determining that "application 2" is associated with an empty fulfillment candidate) and determine replacement data associated with a replacement fulfillment candidate to play rock music using "application 1" because the user has authorized the automated assistant to access "application 1". Thus, even if the alternative fulfillment candidate is not deterministic fulfillment of the assistant command included in the user input (e.g., because the alternative fulfillment candidate is associated with "application 1" instead of "application 2" requested by the user), the system can attempt to fulfill the assistant command using the alternative fulfillment candidate.
At block 364, the system causes the automated assistant to utilize the alternative data to perform alternative fulfillment of the assistant command. Continuing with the example above, the system can cause "application 1" to begin playing rock music via speaker(s) of the client device or via speaker(s) of an additional computing device in communication with the client device (e.g., smart speaker(s) in communication with the client device, another client device, etc.). In some implementations, and similar to sub-block 256A of fig. 2, the system can cause one or more optional elements associated with deterministic reasoning to be presented to the user. However, in contrast to the above-described operations of sub-block 256A of FIG. 2, deterministic reasoning may be provided as to why alternative fulfillment is performed (e.g., why rock music is played using "application 1") or why deterministic fulfillment is not performed (e.g., why rock music is not played using "application 2"). In these embodiments, the deterministic reasoning for alternative fulfillment can include, for example, one or more reasons why alternative fulfillment candidates were selected from among the one or more fulfillment candidates in response to user input.
At block 366, the system determines whether a request is received at the client device for deterministic reasoning about why the automated assistant caused the surrogate to fulfill being performed. In some implementations, a request for information regarding why the automated assistant enabled the replacement to fulfill the deterministic reasoning performed can be included in additional user input received at the client device. In some versions of those embodiments, the system can process the additional user input using the ASR model(s) to generate ASR output, use the NLU model(s) to generate NLU data, and/or use the fulfillment rule(s) or model(s) to generate fulfillment output in the same or similar manner as described with respect to block 252 to determine whether the additional user input includes a request for deterministic reasoning. For example, regardless of whether the additional user input is a spoken utterance or a typed input, the additional user can be processed to generate an NLU output, and the system can determine whether the additional user input includes a request for deterministic reasoning about why the automated assistant caused the surrogate to fulfill being performed based on the NLU output (e.g., intent associated with the request for deterministic reasoning). In additional or alternative versions of those embodiments, a request for information regarding why the automated assistant enabled the alternative to fulfill the deterministic reasoning performed can be included in the user selection of one or more selectable elements received at the client device (e.g., as described above with respect to sub-block 256A). At the iteration of block 366, if the system determines that a request for deterministic reasoning about why the automated assistant caused the surrogate to fulfill was performed was not received at the client device, the system continues to monitor at block 366 the request for why the automated assistant caused the surrogate to fulfill the deterministic reasoning performed (and optionally for a threshold duration (e.g., 15 seconds, 20 seconds, 30 seconds, and/or any other threshold duration) after causing deterministic fulfillment to be performed). At the iteration of block 366, if the system determines that a request is received at the client device for deterministic reasoning about why the automated assistant caused the surrogate to fulfill being performed, the system proceeds to block 368. In some implementations, and similar to block 262 of fig. 2, the system can determine a request type (e.g., general request, first specific request, second specific request, etc.) for deterministic reasoning.
At block 368, the system processes additional user input including the request to determine additional data to utilize in providing deterministic reasoning. Continuing with the example of "play rock music using application 2" above, a general request for deterministic reasoning can be made through, for example, "why did you do that? "wherein" that "refers to a selected alternative fulfillment candidate, such as playing rock music using" app 1 "(instead of" app 2 "requested by the user) and a selected particular rock artist and particular rock song (e.g., inferred slot values as described above with reference to fig. 2). In response to determining that the type of request is a general request, the system can obtain additional data associated with the additional data corresponding to the output in response to the general request (e.g., as described with reference to fig. 2). Continuing also with the example of "play rock music" above, a particular request for deterministic reasoning can be made by, for example, request "why did you use application 1instead of application 2like I requested (why you utilize application 1instead of application 2 as per me request)? "," why did you select the certain artist? "," why did you select the certain artist's most popular song? ", and/or other specific requests. In response to determining that the type of request is a particular request, the system can obtain additional data corresponding to an output responsive to the particular request (e.g., as described with reference to fig. 2).
At block 370, the system causes the automated assistant to utilize the additional data to provide an output including deterministic reasoning for presentation to the user. In some implementations, the output including deterministic reasoning can include synthesized speech audio data including synthesized speech that captures deterministic reasoning characterized by additional data. In some versions of these implementations, text corresponding to deterministic reasoning generated by the system based on metadata associated with one or more fulfillment candidates can be processed using TTS model(s) (e.g., stored in ML model database(s) 120A of fig. 1) to generate synthesized speech audio data, and the synthesized speech audio data can be audibly rendered for presentation to a user via a speaker(s) of a client device or an additional client device in communication with the client device. In additional or alternative embodiments, the output including deterministic reasoning can include text or other graphical content that is visually rendered for presentation to the user via a display of the client device or an additional client device in communication with the client device. The system may return to block 352 and perform additional iterations of the method 300 of fig. 3 in response to receiving another user input that includes another assistant command and is directed to an automated assistant.
Turning now to fig. 4A-4C, various non-limiting examples are depicted that enable deterministic reasoning about the fulfillment of assistant commands to be provided. Client device 410 (e.g., an example of client device 110 of fig. 1) can include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other auditory inputs, and/or speaker(s) to audibly render synthesized speech and/or other auditory outputs. Although the client device 410 depicted in fig. 4A-4C is a stand-alone speaker without a display, it should be understood that this is for purposes of illustration and is not meant to be limiting. For example, client device 410 may be a stand-alone speaker with a display, a mobile phone (e.g., as described with respect to fig. 5A-5B), a home automation device, an in-vehicle system, a laptop computer, a desktop computer, and/or any other device capable of performing an automated assistant to participate in a man-machine conversation session with user 401 of client device 410.
Referring specifically to fig. 4A, assume that user 401 of client device 410 provides a spoken utterance 452A"Assistant,play rock music (assistant, play rock music)". In response to receiving the spoken utterance 452A, the automated assistant can use the ASR model(s) to cause the captured audio data of the spoken utterance 452A to be processed to generate an ASR output that includes, for example, one or more speech hypotheses (e.g., term hypothesis(s) and/or transcription hypothesis (s)) predicted to correspond to the spoken utterance 452A, one or more predicted phonemes predicted to correspond to the spoken utterance 452A, and/or other ASR output. In generating the ASR output, the ASR model(s) can optionally generate ASR metrics associated with each of the one or more speech hypotheses, predicted phonemes, and/or other ASR outputs that indicate a likelihood that the one or more speech hypotheses, predicted phonemes, and/or other ASR outputs correspond to the spoken utterance 452A. Further, the ASR output can be processed using the NLU model(s) to generate an NLU output that includes, for example, one or more intents determined based on the ASR output, one or more slot values of one or more corresponding parameters associated with each of the one or more intents determined based on the ASR output, and/or other NLU outputs. In generating the NLU outputs, the NLU model(s) can optionally generate NLU metrics associated with one or more intents, one or more slot values of corresponding parameters associated with the intents, and/or each of the other NLU outputs that indicate a likelihood that the one or more intents, the one or more slot values of corresponding parameters associated with the intents, and/or the other NLU outputs correspond to the actual intent of the user 401 in providing the spoken utterance 452A.
Notably, the automated assistant can infer one or more slot values for the corresponding parameter associated with each of the one or more intents, thereby generating one or more interpretations of the spoken utterance 452A, wherein each of the one or more interpretations includes at least one unique slot value for the given corresponding parameter. Thus, in the example of fig. 4A, the first interpretation can include a "play music" intent with a slot value of an application parameter "application 1" associated with the "play music" intent, a slot value of an artist parameter "artist 1" associated with the "play music" intent, and a slot value of a song parameter "song 1" associated with the "play music" intent; the second interpretation can include a "play music" intent with a slot value of an application parameter "application 2" associated with the "play music" intent, a slot value of an artist parameter "artist 1" associated with the "play music" intent, and a slot value of a song parameter "song 1" associated with the "play music" intent; the third interpretation can include a "play music" intent with a slot value of an application parameter "application 1" associated with the "play music" intent, a slot value of an artist parameter "artist 2" associated with the "play music" intent, and a slot value of a song parameter "song 2" associated with the "play music" intent; other explanations and so on.
Further, the automated assistant can cause the NLU output to be processed to generate a fulfillment output using the fulfillment rule(s) and/or the fulfillment model(s). Fulfillment output can include, for example, one or more structured requests generated based on a plurality of interpretations (e.g., determined based on NLU output) and to be transmitted to one or more fulfillment persons, such as first party server(s) 191 of fig. 1, third party server(s) 192 of fig. 1, first party software application(s) accessible at client device 410, third party software application(s) accessible at client device 410, and/or any other fulfillment persons capable of fulfilling spoken utterance 452A. In the example of fig. 4A, based on the software applications being identified as being able to satisfy the spoken utterance 452A indicated by the NLU output, the automated assistant is able to cause the corresponding structured requests to be transmitted to at least "application 1" and "application 2". In response to transmitting these structured requests, the automated assistant can receive one or more fulfillment candidates from "application 1" and "application 2". For example, the automated assistant can receive one or more fulfillment candidates from "application 1" indicating whether "application 1" can fulfill one or more structured requests generated based on multiple interpretations, and can receive one or more fulfillment candidates from "application 2" indicating whether "application 2" can fulfill one or more structured requests generated based on multiple interpretations. The one or more performance candidates can optionally include a performance metric indicating how likely each of the one or more performance candidates satisfies the spoken utterance 452A.
The automated assistant can rank the one or more fulfillment candidates based on the ASR metrics, NLU metrics, and/or fulfillment, and select a deterministic fulfillment candidate from the one or more fulfillment candidates based on the ranking. For example, assume in the example of fig. 4A, as described above, the automated assistant selects a deterministic fulfillment candidate associated with a first interpretation that includes a "play music" intent, the first interpretation having a slot value of application parameter "application 1", a slot value of artist parameter "artist 1", and a slot value of song parameter "song 1" based on the ranking. Further assume that user 401 is not authorized for the automated assistant to access "application 2" and, therefore, the one or more fulfillment candidates determined based on the one or more structured requests transmitted to "application 1" are empty fulfillment candidates. In additional or alternative embodiments, the automated assistant may refuse to transmit any structured requests to "application 2" to save computing and/or network resources, because the automated assistant knows that user 401 has not authorized the automated assistant to access "application 2" and automatically determines empty fulfillment candidates for any potential structured requests that may be transmitted to "application 2". In response to selecting the deterministic fulfillment candidate associated with the first interpretation, the automated assistant may cause synthesized speech 454A1"Okay,playing rock music using application1 (good, using application1 to play rock music)" to be provided for audible presentation to user 401 via speaker(s) of client device 410, and cause an assistant command determined based on the first interpretation associated with the deterministic fulfillment candidate to be implemented as indicated by 454A2 (e.g., "play song 1by artist 1using application1 (using application1 to play song 1 of artist 1)") to satisfy spoken utterance 452A.
However, further assume that user 401 provides additional spoken utterances 456A"Why did you do that? ". In response to receiving the additional spoken utterance 456A, the automated assistant can use the ASR model(s) to cause the capture of audio data of the additional spoken utterance 456A to be processed to generate ASR output in the same or similar manner as described above with respect to processing the spoken utterance 452A. Further, the ASR output can be processed using NLU model(s) to generate an NLU output in the same or similar manner as described above with respect to processing the spoken utterance 452A. The automated assistant can determine whether the additional spoken utterance 456A includes a request for the automated assistant to provide deterministic reasoning about why the deterministic fulfillment of the assistant command included in the spoken utterance 452A was performed based on the ASR output and/or the NLU output. In some implementations, additionally or alternatively, the automated assistant can determine whether the request for deterministic reasoning is a general request for deterministic reasoning or one or more specific requests for deterministic reasoning based on the ASR output and/or the NLU output.
For example, in the example of fig. 4A, the automated assistant can determine that the request for deterministic reasoning is a general request based on ASR output and/or NLU output generated from processing the additional spoken utterance 456A, because the user does not query for particular aspects of deterministic performance (e.g., as described below with reference to fig. 4B). Instead, the additional spoken utterance 456A typically requests the automated assistant to explain why the automated assistant caused "application 1" to play "song 1" of "artist 1". Thus, the automated assistant can obtain metadata associated with the selected deterministic fulfillment candidates to determine additional data to utilize in generating the output in response to the additional spoken utterance 456A. Based on the additional data, the automated assistant can cause additional synthesized speech 458A1"You share your application usage with me,and it looks like you use application 1the most for listening to music,you have listened to artist 1in the past,and song 1is a new song by artist 1 (you share your application use with me, and it appears that you are most often listening to music using application 1, you have listened to the song of artist 1in the past, and song 1is a new song of artist 1)" to be provided for audible presentation to user 401 via speaker(s) of client device 410. In some implementations, the automated assistant can optionally cause the prompt 458A2 (e.g., determined based on the recommendation data), e.g., "Would you prefer me to do something else (do you prefer me to do something else)? "provided for audible presentation to user 401 via speaker(s) of client device 410" if user 401 prefers the automated assistant to perform some alternative fulfillment candidates, client device 410 requests user 401 to provide further additional spoken utterances, such as requesting user 401 to provide further additional spoken utterances 460A"Use application 2,but only for rock music (using application 2, but only for rock music)".
Notably, further additional spoken utterances 460A can implicitly authorize the automated assistant to access "application 2" to be utilized in response to the spoken utterance 452A, as well as future instances of the spoken utterance including assistant commands for the automated assistant to play rock music. In some implementations, the further additional spoken utterance 460A can implicitly grant the automated assistant access to "app 2" to be utilized for playing rock music only. In additional or alternative embodiments, further additional spoken utterances 460A may implicitly grant the automated assistant access to "app 2" to be utilized for playing any genre of music. Furthermore, in some implementations, in response to receiving a further spoken utterance 460A authorizing the automated assistant to access "app 2", the automated assistant can transition from "song 1" playing "artist 1" using "app 1" (e.g., based on the assistant command explained above) to "song 1" playing "artist 1" using "app 2" (e.g., based on the assistant command explained above).
With specific reference to fig. 4B, and in contrast to the general request for deterministic reasoning described with respect to fig. 4A, again assuming that the user provides the same spoken utterance 452B"Assistant,play rock music", the automated assistant causes synthesized speech 454B1"Okay,playing rock music using application 1" to be provided for audible presentation to the user 401 via speaker(s) of the client device 410, and causes an assistant command as indicated by 454B2 (e.g., "play song 1by artist 1using application 1") to be implemented to satisfy the spoken utterance 45BA based on the first interpretation associated with the deterministic fulfillment candidate. However, in the example of fig. 4B, it is assumed that the user 401 provided the additional spoken utterance "Why did you use application 1? ". In this example, the automated assistant can determine that the request for deterministic reasoning is a particular request based on the ASR output and/or NLU output generated from processing the additional spoken utterance 456B, because the user is asking for a particular aspect about deterministic fulfillment (e.g., why the automated assistant selects "application 1" to play "song 1" of "artist 1"). Thus, the automated assistant can obtain metadata associated with the selected deterministic fulfillment candidates to determine additional data to utilize in generating the output in response to the additional spoken utterance 456A. Notably, in the example of fig. 4B, the additional data may be different from that in the example of fig. 4A, as the additional data utilized in the example of fig. 4B can be tailored or adapted to the particular request of the user 401, particularly asking why "application 1" was selected. Based on the additional data, the automated assistant can cause additional synthesized speech 458B1"You share your application usage with me,and it looks like you use application 1the most for listening to music" to be provided for audible presentation to the user 401 via the speaker(s) of the client device 410. In some implementations, the automated assistant can optionally cause the prompt 458B2 (e.g., determined based on the recommendation data), e.g., "Would you prefer me to do something else? "provided for audible presentation to user 401 via speaker(s) of client device 410" if user 401 prefers the automated assistant to perform some alternative fulfillment candidates, client device 410 requests user 401 to provide further additional spoken utterances, such as requesting user 401 to provide further additional spoken utterances 460B"Use application 2,but only for rock music". Similar to that described above with respect to fig. 4A, further additional spoken utterances 460B can implicitly authorize the automated assistant to access the future instance of "application 2" to be utilized in response to the spoken utterance 452B, as well as the spoken utterance including the assistant command for the automated assistant to play rock music.
Referring specifically to fig. 4C, and in contrast to fig. 4A and 4B, again assume that the user provides the same spoken utterance 452C"Assistant,play rock music". However, in the example of fig. 4C, it is assumed that user 401 has not authorized the automated assistant to access any software applications or services capable of playing music (e.g., streaming services implemented by one or more of first party server(s) 191 of fig. 1 and/or third party server(s) 192 of fig. 1). Thus, any fulfillment candidates associated with "application 1", "application 2", or any other software application or service included in one or more fulfillment candidates may be associated with empty fulfillment candidates. Nonetheless, in an attempt to satisfy the spoken utterance 452C, the automated assistant may transmit a structured request to, for example, a web browser to obtain search results responsive to content of the spoken utterance 452C, such as "rock music," to avoid wasting computing resources for interaction. As shown in fig. 4C, the automated assistant can cause synthesized speech 454C"Rock music is a broad genre of popular music that originated as'rock and roll' … (rock music is the broad genre … … of popular music originating from 'rock') to be provided for audible presentation to the user 401 via the speaker(s) of the client device 410.
However, further assume that user 401 provides additional spoken utterances 456C"Why didn't you play music (why do you not play music)? ". In response to receiving the additional spoken utterance 456C, the automated assistant can use the ASR model(s) such that capturing the audio data of the additional spoken utterance 456C is processed to generate ASR output in the same or similar manner as described above with respect to processing the spoken utterance 452A in fig. 4A. Further, the ASR output can be processed using NLU model(s) to generate an NLU output in the same or similar manner as described above with respect to processing the spoken utterance 452A in fig. 4A. The automated assistant can determine whether the additional spoken utterance 456C includes a request for the automated assistant to provide a deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command included in the spoken utterance 452A based on the ASR output and/or the NLU output. Notably, in the example of fig. 4C, rather than the user 401 asking the automated assistant why deterministic fulfillment was performed, the user 401 asks the automated assistant why deterministic fulfillment was not performed.
Thus, in the example of fig. 4C, the automated assistant can determine that the request for deterministic reasoning is a particular request based on the ASR output and/or NLU output generated from processing the additional spoken utterance 456A, because the user is asking about a particular aspect of deterministic performance (e.g., why the automated assistant did not play any music). Thus, the automated assistant can obtain metadata associated with one or more of the unselected alternative fulfillment candidates to determine additional data to utilize in generating output in response to the additional spoken utterance 456C. It is noted that in the example of fig. 4C, the additional data may differ from the additional data in the examples of fig. 4A and 4B, as the additional data utilized in the example of fig. 4C can be customized or adapted to the specific request of the user 401, in particular to ask why music is not played. Based on the additional data, the automated assistant can cause additional synthesized speech 458C1"You have not granted me access to any applications or services that I can use to play music (you have not authorized me to access any applications or services that i can use to play music)" to be presented audibly to the user 401 via the speaker(s) of the client device 410. In some implementations, the automated assistant can optionally cause a prompt 458C2 (e.g., determined based on recommendation data), such as "Would you like to grant me permission to an application or service (do you like to grant i permission for an application or service)? "presented to user 401 audibly via speaker(s) of client device 410" is true using application 2, but only for rock music, if user 401 wants to be able to play music using one or more software applications or services, client device 410 requests user 401 to provide further additional spoken utterances, such as requesting user 401 to provide further additional spoken utterances 460C. In the example of fig. 4C, further additional spoken utterances 460C may explicitly grant the automated assistant access to "application 2" to be utilized in response to the spoken utterance 452C, as well as future instances of the spoken utterance including assistant commands for the automated assistant to play rock music.
Turning now to fig. 5A-5B, various additional non-limiting examples are depicted that enable deterministic reasoning about the fulfillment of assistant commands to be provided. Client device 510 (e.g., an example of client device 110 of fig. 1) may include various user interface components including, for example, microphone(s) to generate audio data based on spoken utterances and/or other audible input, speaker(s) to audibly render synthesized speech and/or other audible output, and/or display 580 to visually render visual output. In addition, the display 580 of the client device 510 can include various system interface elements 581, 582, and 583 (e.g., hardware and/or software interface elements) with which a user of the client device 510 can interact to cause the client device 510 to perform one or more actions. The display 580 of the client device 510 enables a user to interact with content rendered on the display 580 by touch input (e.g., by directing user input to the display 580 or portions thereof (e.g., to a text input box (not depicted), to a keyboard (not depicted), or to other portions of the display 580)) and/or by verbal input (e.g., by selecting the microphone interface element 584-or by merely speaking at the client device 510 without having to select the microphone interface element 584 (i.e., the automated assistant may monitor one or more terms or phrases, gesture(s), gaze(s), mouth movement(s), lip movement(s), and/or other conditions that activate verbal input). Although the client device 510 depicted in fig. 5A-5B is a mobile telephone, it should be understood that this is for purposes of example and not meant to be limiting.
Referring specifically to fig. 5A, assume that the user of the client device 510 provides a spoken utterance 552A"Play some rock music (plays some rock music)". In response to receiving the spoken utterance 552A, the automated assistant can use the ASR model(s) such that the audio data of the captured spoken utterance 552A is processed to generate an ASR output, use the NLU model(s) such that the ASR output is processed to generate an NLU output, and use the fulfillment rule(s) and/or the fulfillment model(s) such that the NLU output is processed to generate a fulfillment output in the same or similar manner. Further assume that the automated assistant determines that the user's client device 510 is communicatively coupled to a smart speaker (e.g., a living room speaker) that has a more robust speaker than the client device 510 and is capable of playing rock music. Thus, based on processing the spoken utterance 552A, the automated assistant may determine to cause rock music to be played at the living room speaker and to cause synthesized speech 554A"Okay,playing rock music on the living room speaker (good, rock music to be played on the living room speaker)" to be provided for audible presentation to the user via the speaker(s) of the client device 510 and/or to be provided for visual presentation to the user via the display 580 of the client device 510 and to cause rock music to be played on the living room speaker.
However, further assume that the user of the client device 510 provides an additional spoken utterance 556A"Why did you decide to play the music on the living room speaker (why you decided to play music on the living room speaker)? ". In this example, the automated assistant can determine that a request for deterministic reasoning is included in the additional spoken utterance based on ASR output and/or NLU output generated from processing the additional spoken utterance 556A, and that the request is a particular request because the user is asking about a particular aspect of deterministic fulfillment (e.g., why the automated assistant selects "living room speaker" to play rock music). In this example, the automated assistant can obtain metadata associated with the selected fulfillment candidates to determine additional data to be utilized in providing deterministic reasoning about why the automated assistant decides to play music on the living room speaker instead of playing music at the client device 510 or another computing device (e.g., kitchen speaker, study speaker, etc.) communicatively coupled to the client device 510 and capable of playing music. Based on the additional data, the automated assistant can make the additional synthesized voice 558A1"The living room speaker is more robust than your phone's speaker (the living room speaker is more robust than the speaker of your phone)" (and optionally based on detecting the presence of the user of the client device 510 in the living room (e.g., via the presence sensor(s) 111 of the client device 110 of fig. 1)), provided for audible presentation to the user via the speaker(s) of the client device 510 and/or provided for visual presentation to the user via the display 580 of the client device 510. In some implementations, the automated assistant can optionally cause prompts 558A2 (e.g., determined based on recommendation data), such as "Would you prefer me to play the rock music on your phone or another device (do you wish me to play rock music on your phone or another device)? By way of example, if the user prefers the automated assistant to perform some alternative fulfillment candidates, such as playing rock music using the client device 510, playing music using a different software application accessible by the client device 510, such that the automated assistant switches artists/songs, etc., the client device 510 requests the user to provide further additional spoken utterances. If the user provides any further input, the automated assistant can adapt the playing of the music accordingly.
In additional or alternative embodiments, the automated assistant can proactively provide one or more optional elements associated with deterministic reasoning, as opposed to waiting for the user of the client device 510 to provide any additional user input 556A that includes a request for deterministic reasoning. For example, and with specific reference to fig. 5B, again assume that the user of the client device 510 provided a spoken utterance 552B"Play some rock music". In response to receiving the spoken utterance 552B, the automated assistant can use the ASR model(s) to cause the audio data of the captured spoken utterance 552B to be processed to generate an ASR output, use the NLU model(s) to cause the ASR output to be processed to generate an NLU output, and use the fulfillment rule(s) and/or the fulfillment model(s) to cause the NLU output to be processed to generate a fulfillment output in the same or similar manner. Further, assume further that the automated assistant determines that the user's client device 510 is communicatively coupled with a smart speaker (e.g., a living room speaker) that has a more robust speaker than the client device 510 and is capable of playing rock music. Thus, based on processing the spoken utterance 552B, the automated assistant can determine to cause rock music to be played at the living room speaker and to cause synthesized speech 554B"Okay,playing rock music on the living room speaker ″ to be provided for audible presentation to the user via the speaker(s) of the client device 510 and/or to be provided for visual presentation to the user via the display 580 of the client device 510 and to cause rock music to be played on the living room speaker.
However, in the example of fig. 5B, it is further assumed that the automated assistant actively provides one or more optional elements associated with deterministic reasoning, while the user of the client device 510 does not provide any additional spoken utterances or other user input. For example, and as shown in fig. 5B, the automated assistant can cause "Why did you do that? The "first selectable element 556B1 and/or" Why did you use the living room speaker (why you use living room speakers)? "a second selectable element 556B2 associated with a general request as to why the automated assistant generally causes deterministic fulfillment of the assistant command to be performed, and associated with a specific request as to why the automated assistant uses the living room speaker to cause deterministic fulfillment of the assistant command to be performed. In response to a user selection of the first selectable element 556B1 from a user of the client device (e.g., via touch input or verbal input), the automated assistant can obtain metadata associated with deterministic fulfillment of the assistant command based on the user selection (e.g., user selection of the first selectable element 556B1 or user selection of the second selectable element 556B 2) to determine additional data to be utilized in providing deterministic pushing. For example, in response to receiving a user selection of the first selectable element 556B1, the automated assistant can determine why the automated assistant decided to select a particular application to play rock music (e.g., "app 1" and "app 2" as described above with reference to fig. 4A-4C), select an artist (e.g., as described above with reference to fig. 4A-4C), select a song of an artist (e.g., as described above with reference to fig. 4A-4C), play additional data of music on a living room speaker (e.g., as described above with reference to fig. 5A), and/or deterministic reasoning about any other aspect of deterministic fulfillment. Further, for example, in response to receiving a user selection of the second selectable element 556B2, the automated assistant can determine why the automated assistant decided to play the music on the living room speaker instead of additional data at the client device 510 or another computing device (e.g., kitchen speaker, study speaker, etc.) communicatively coupled to the client device 510 and capable of playing the music.
For example, in the example of fig. 5B, assume that the user of client device 510 provides a user selection of second selectable element 556B 2. Based on the additional data determined from the user selection of the second selectable element 556B2, the automated assistant can cause the additional synthesized speech 558B1"The living room speaker is more robust than your phone's speaker" (and optionally based on the detected presence of the user of the client device 510 in the living room (e.g., via the presence sensor(s) 111 of the client device 110 of fig. 1)), to be provided for audible presentation to the user via the speaker(s) of the client device 510 and/or to be provided for visual presentation to the user via the display 580 of the client device 510. In some implementations, the automated assistant can optionally cause a prompt 558B2 (e.g., determined based on the recommendation data), such as "Would you prefer me to play the rock music on your phone or another device? By way of example, if the user prefers the automated assistant to perform some alternative fulfillment candidates, such as playing rock music using the client device 510, playing music using a different software application accessible by the client device 510, such that the automated assistant switches artists/songs, etc., the client device 510 requests the user to provide further additional spoken utterances. If the user provides any further input, the automated assistant can adapt the playing of the music accordingly.
While the above examples of fig. 4A-4C and 5A-5B are described with respect to having an automated assistant perform fulfillment based on a particular spoken utterance of a media application or media service, and providing deterministic reasoning of fulfillment in response to additional particular spoken utterances, it should be understood that this is for purposes of illustration and is not meant to be limiting. For example, the techniques described herein can be used to provide deterministic reasoning for any aspect of any fulfillment performed by an automated assistant and/or with respect to any fulfillment candidates selected or not selected by an automated assistant. Further, while the above examples of FIGS. 4A-4C and 5A-5B have been described with respect to providing deterministic recommendation actions (e.g., authorizing an automated assistant to access a particular software application for playing media) determined based on particular recommendation data, it should be understood that this is also for purposes of example and is not meant to be limiting. As some non-limiting examples, the recommended actions described herein can include authorizing the automated assistant to access any software application, any user account, any computing device associated with the user, historical query activity, and/or any other user data that can be used by the automated assistant to determine how to fulfill any assistant command.
Turning now to fig. 6, a block diagram of an example computing device 610 is depicted that may optionally be used to perform one or more aspects of the techniques described herein. In some implementations, one or more of the client device, the cloud-based automation assistant component(s), and/or other component(s) may include one or more components of the example computing device 610.
The computing device 610 typically includes at least one processor 614 that communicates with a number of peripheral devices via a bus subsystem 612. These peripheral devices may include a storage subsystem 624 (including, for example, a memory subsystem 625 and a file storage subsystem 626), a user interface output device 620, a user interface input device 622, and a network interface subsystem 616. Input and output devices allow users to interact with computing device 610. Network interface subsystem 616 provides an interface to external networks and couples to corresponding interface devices among other computing devices.
User interface input devices 622 may include a keyboard, a pointing device (such as a mouse, trackball, touch pad, or tablet), a scanner, a touch screen incorporated into a display, an audio input device (such as a voice recognition system, microphone, and/or other types of input devices). In general, use of the term "input device" is intended to include all possible types of devices and ways of inputting information into computing device 610 or onto a communication network.
The user interface output device 620 may include a display subsystem, a printer, a facsimile machine, or a non-visual display (such as an audio output device). The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating visual images. The display subsystem may also provide for non-visual displays, such as via an audio output device. In general, use of the term "output device" is intended to include all possible types of devices and ways to output information from computing device 610 to a user or to another machine or computing device.
Storage subsystem 624 stores programming and data structures that provide the functionality of some or all of the modules described herein. For example, storage subsystem 624 may include logic to perform selected aspects of the methods disclosed herein, as well as to implement the various components depicted in fig. 1 and 2.
These software modules are typically executed by processor 614 alone or in combination with other processors. The memory 625 used in the storage subsystem 624 can include a number of memories, including a main Random Access Memory (RAM) 630 for storing instructions and data during program execution and a Read Only Memory (ROM) 632 in which fixed instructions are stored. File storage subsystem 626 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive, and associated removable media, CD-ROM drive, optical drive, or removable media cartridge. Modules implementing the functionality of certain embodiments may be stored in storage subsystem 624 by file storage subsystem 626, or in other machines accessible by processor(s) 614.
Bus subsystem 612 provides a mechanism for letting the various components and subsystems of computing device 610 communicate with each other as intended. Although bus subsystem 612 is shown schematically as a single bus, alternative implementations of bus subsystem 612 may use multiple buses.
Computing device 610 can be of different types including a workstation, a server, a computing cluster, a blade server, a server farm, or any other data processing system or computing device. Due to the ever-changing nature of computers and networks, the description of computing device 610 depicted in FIG. 6 is intended only as a specific example for purposes of illustrating some embodiments. Many other configurations of computing device 610 are possible with more or fewer components than the computing device depicted in fig. 6.
Where the systems described herein collect or otherwise monitor personal information about a user or may utilize personal and/or monitoring information, the user may be provided with an opportunity to control whether programs or features collect user information (e.g., information about the user's social network, social actions or activities, profession, user preferences, or the user's current geographic location), or to control whether and/or how content that may be more relevant to the user is received from a content server. Moreover, the specific data may be processed in one or more ways prior to storage or use in order to remove the personal identity information. For example, the identity of the user may be processed such that personal identity information of the user cannot be determined, or the user's geolocation may be generalized where geolocation information is obtained (such as to a city, zip code, or state level) such that a particular geolocation of the user cannot be determined. Thus, the user may control how information about the user is collected and/or used.
In some implementations, a method implemented by one or more processors is provided and includes: receiving user input from a user of the client device, the user input comprising an assistant command and directed to an automated assistant that is at least partially implemented at the client device; processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command; causing the automated assistant to utilize the data to perform deterministic fulfillment of the assistant command; receiving additional user input from a user of the client device, the additional user input including a request for the automated assistant to provide deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command; processing the additional user input to determine additional data to be used to provide deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command; and causing the automated assistant to utilize the additional data to provide an output for presentation to a user of the client device, the output including a deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command.
These and other embodiments of the technology disclosed herein can optionally include one or more of the following features.
In some implementations, user input including an assistant command and directed to an automated assistant is captured in audio data generated by one or more microphones of a client device. In some versions of those embodiments, processing the user input to determine data to utilize in performing deterministic fulfillment of the assistant command may include: processing captured audio data comprising user input of assistant commands using an Automatic Speech Recognition (ASR) model to generate an ASR output; processing the ASR output using a Natural Language Understanding (NLU) model to generate an NLU output; and determining data to be utilized in performing deterministic fulfillment of the assistant command based on the NLU output.
In some implementations, user input including assistant commands directed to the automated assistant can be captured in typed input detected via a display of the client device. In some versions of those embodiments, processing the user input to determine data to utilize in performing deterministic fulfillment of the assistant command may include: processing the typed input using a Natural Language Understanding (NLU) model to generate an NLU output; and generating data to be utilized in performing deterministic fulfillment of the assistant command based on the NLU output.
In some implementations, providing the request for the automated assistant with deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include providing the automated assistant with a particular request for deterministic reasoning about why the automated assistant selects a particular software application from a plurality of different software applications for performing deterministic fulfillment. In some versions of those embodiments, processing the additional user input to determine additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command may include: obtaining metadata associated with a particular software application utilized in executing deterministic fulfillment; and determining, based on metadata associated with the particular software application, additional data to be utilized in providing a deterministic boost of why the automated assistant performed deterministic fulfillment of the assistant command.
In some implementations, providing the request for the automated assistant with deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include: the automated assistant is provided with a specific request for deterministic reasoning about why the automated assistant selects a specific interpretation of the user input from a plurality of different interpretations of the user input for performing deterministic fulfillment. In some versions of those embodiments, processing the additional user input to determine additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command may include: obtaining metadata associated with a particular interpretation of user input utilized in performing deterministic fulfillment; and determining additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command based on metadata associated with the particular interpretation of the user input.
In some implementations, providing the request for the automated assistant with deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include: the automated assistant is provided with a specific request as to why the automated assistant selects an additional client device of the user to replace the user's client device for performing deterministic reasoning of deterministic performance. In some versions of those embodiments, processing the additional user input to determine additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command may include: obtaining metadata associated with additional client devices utilized in performing deterministic fulfillment; and determining, based on metadata associated with the additional client device, additional data to be utilized in providing a deterministic boost of why the automated assistant performed deterministic fulfillment of the assistant command.
In some implementations, providing the request for the automated assistant with deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include providing the automated assistant with a general request for deterministic reasoning about why the automated assistant performs deterministic fulfillment. In some versions of those embodiments, processing the additional user input to determine additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command may include obtaining corresponding metadata associated with one or more of: (i) A particular software application for performing deterministic fulfillment from a plurality of different software applications; (ii) A specific interpretation of the user input for performing deterministic fulfillment from a plurality of different interpretations of the user input; or (iii) an additional client device of the user for performing deterministic fulfillment in place of the client device of the user; and determining, based on the corresponding metadata, additional data to be utilized in providing a deterministic boost regarding why the automated assistant performs deterministic fulfillment of the assistant command.
In some implementations, causing the automated assistant to utilize the additional data to provide an output for presentation to a user of the client device, the output including deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include: the additional data is processed using a text-to-speech (TTS) model to generate synthesized speech audio data that includes synthesized speech corresponding to deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command.
In some implementations, causing the automated assistant to utilize the additional data to provide an output for presentation to a user of the client device, the output including deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command may include: such that an output including deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command is visually rendered at a display of the client device.
In some implementations, processing the additional user input to determine additional data to utilize in providing a deterministic boost regarding why the automated assistant performed deterministic fulfillment of the assistant command may include: additional data is selected based on a request included in the additional user input and from a plurality of different instances of pre-generated data.
In some implementations, processing the additional user input to determine additional data to utilize in providing a deterministic boost regarding why the automated assistant performed deterministic fulfillment of the assistant command may include: additional data is generated based on the request included in the additional user input.
In some implementations, a method implemented by one or more processors is provided and includes: receiving user input from a user of the client device, the user input comprising an assistant command and directed to an automated assistant that is at least partially implemented at the client device; determining whether data to be utilized in performing deterministic fulfillment of the assistant command can be determined; in response to determining that data to be utilized in performing deterministic fulfillment of the assistant command cannot be determined: processing the user input to determine alternative data to be utilized in performing alternative fulfillment of the assistant command; and causing the automated assistant to perform alternative fulfillment of the assistant command with the alternative data; receiving additional user input from a user of the client device, the additional user input including a request for the automated assistant to provide deterministic reasoning about why the automated assistant performs alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command; processing the additional user input to determine additional data to be used to provide deterministic reasoning about why the automated assistant performs alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command; and causing the automated assistant to utilize the additional data to provide an output for presentation to the user of the client device, the output including a deterministic reasoning about why the automated assistant performs alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command.
These and other embodiments of the technology disclosed herein can optionally include one or more of the following features.
In some implementations, processing the additional user input to determine why the automated assistant performed alternative fulfillment of the assistant command in place of the deterministic push of the deterministic fulfillment of the assistant command may further include: additional user inputs are processed to generate recommendation data to be utilized in generating recommendation actions regarding how the automated assistant can perform deterministic fulfillment of the assistant command. In some versions of those embodiments, the output may further include recommended actions as to how the automated assistant is able to achieve deterministic fulfillment of the assistant command. In some other versions of those embodiments, the recommended action may include a prompt that, when selected, causes the automated assistant to perform the recommended action.
In some implementations, a method implemented by one or more processors is provided and includes: receiving user input from a user of the client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device; determining whether data to be utilized in performing deterministic fulfillment of the assistant command can be determined; in response to determining that data to be utilized in performing deterministic fulfillment of the assistant command cannot be determined: processing the user input to determine recommendation data to be utilized in generating recommendation actions regarding how the automated assistant can perform deterministic fulfillment of the assistant command; and causing the automated assistant to utilize the recommendation data to provide an output for presentation to a user of the client device, the output including a recommendation action regarding how the automated assistant is able to achieve deterministic fulfillment of the assistant command, and a prompt, when selected, causing the automated assistant to perform the recommendation action; and in response to receiving additional user input from a user of the client device including a user selection of the prompt: such that the automated assistant performs the recommended action to enable deterministic fulfillment of the assistant command.
These and other embodiments of the technology disclosed herein can optionally include one or more of the following features.
In some implementations, processing the user input to determine recommendation data to utilize in generating recommendation actions regarding how the automated assistant can perform deterministic fulfillment of the assistant command is in response to determining that there is no alternative fulfillment of the assistant command.
In some implementations, a method implemented by one or more processors is provided and includes: receiving user input from a user of the client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device; processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command; causing the automated assistant to utilize the data to perform deterministic fulfillment of the assistant command; receiving additional user input from a user of the client device, the additional user input including a request for the automated assistant to provide deterministic reasoning about why the automated assistant does not perform alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command; processing the additional user input to determine additional data to be used to provide deterministic reasoning about why the automated assistant does not perform alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command; and causing the automated assistant to utilize the additional data to provide an output for presentation to a user of the client device, the output including a deterministic reasoning about why the automated assistant does not perform alternative fulfillment of the assistant command in place of deterministic fulfillment of the assistant command.
In some implementations, a method implemented by one or more processors is provided and includes: receiving user input from a user of the client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device; processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command; causing the automated assistant to utilize the data to perform deterministic fulfillment of the assistant command; when the automated assistant performs deterministic execution of the assistant command: causing the automated assistant to visually render the selectable element for presentation to a user of the client device, which, when selected, causes the automated assistant to provide deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command; and in response to receiving additional user input from a user of the client device including a user selection of the selectable element: processing the additional user input to determine additional data to be used to provide deterministic reasoning about why the automated assistant does not perform alternative fulfillment of the assistant command in lieu of deterministic fulfillment of the assistant command; and causing the automated assistant to provide an output for presentation to a user of the client device, the output including deterministic reasoning about why the automated assistant performs deterministic fulfillment of the assistant command.
These and other embodiments of the technology disclosed herein can optionally include one or more of the following features.
In some implementations, user input including an assistant command and directed to an automated assistant can be captured in audio data generated by one or more microphones of a client device. In some versions of those embodiments, processing the user input to determine data to utilize in performing deterministic fulfillment of the assistant command may include: processing captured audio data comprising user input of assistant commands using an Automatic Speech Recognition (ASR) model to generate an ASR output; processing the ASR output using a Natural Language Understanding (NLU) model to generate an NLU output; and determining data to be utilized in performing deterministic fulfillment of the assistant command based on the NLU output. In some other versions of those implementations, causing the automated assistant to visually render the selectable element for presentation to the user of the client device, when the selectable element is selected, causing the automated assistant to provide deterministic reasoning about why the automated assistant performs deterministic performance of the assistant command is in response to determining that the NLU metric associated with the NLU output fails to meet the NLU metric threshold.
Additionally, some implementations include one or more processors (e.g., central processing unit(s) (CPU), graphics processing unit(s) (GPU), and/or tensor processing unit(s) (TPU)) of one or more computing devices, wherein the one or more processors are operable to execute instructions stored in an associated memory, and wherein the instructions are configured to cause performance of any of the methods described above. Some embodiments also include one or more non-transitory computer-readable storage media storing computer instructions executable by one or more processors to perform any of the methods described above. Some embodiments also include a computer program product comprising instructions executable by one or more processors to perform any of the methods described above.
Claims (30)
1. A method implemented by one or more processors, the method comprising:
receiving user input from a user of a client device, the user input comprising an assistant command and directed to an automated assistant that is at least partially implemented at the client device;
processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command;
Causing the automated assistant to utilize the data to perform the deterministic fulfillment of the assistant command;
receiving additional user input from the user of the client device, the additional user input comprising a request for the automated assistant to provide deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command;
processing the additional user input to determine additional data to be used to provide the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command; and
causing the automated assistant to utilize the additional data to provide output for presentation to the user of the client device, the output including the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command.
2. The method of claim 1, wherein the user input including the assistant command and directed to the automated assistant is captured in audio data generated by one or more microphones of the client device.
3. The method of claim 2, wherein processing the user input to determine the data to utilize in performing the deterministic fulfillment of the assistant command comprises:
Processing the audio data captured of the user input including the assistant command using an Automatic Speech Recognition (ASR) model to generate an ASR output;
processing the ASR output using a Natural Language Understanding (NLU) model to generate an NLU output; and
the data to be utilized in executing the deterministic fulfillment of the assistant command is determined based on the NLU output.
4. The method of any preceding claim, wherein the user input comprising the assistant command directed to the automated assistant is captured in a typed input detected via a display of the client device.
5. The method of claim 4, wherein processing the user input to determine the data to utilize in performing the deterministic fulfillment of the assistant command comprises:
processing the typed input using a Natural Language Understanding (NLU) model to generate an NLU output; and
the data to be utilized in executing the deterministic fulfillment of the assistant command is generated based on the NLU output.
6. The method of any preceding claim, wherein providing the request for the automated assistant for the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command comprises providing the automated assistant with a specific request for the deterministic reasoning about why the automated assistant selects a specific software application from a plurality of different software applications for performing the deterministic fulfillment.
7. The method of claim 6, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
obtaining metadata associated with the particular software application utilized in executing the deterministic fulfillment; and
based on the metadata associated with the particular software application, the additional data to be utilized in providing the deterministic push regarding why the automated assistant performed the deterministic fulfillment of the assistant command is determined.
8. The method of any preceding claim, wherein providing the request for the automated assistant for the deterministic inference as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises providing the automated assistant with a specific request for the deterministic inference as to why the automated assistant selected a specific interpretation of the user input from a plurality of different interpretations of the user input for performing the deterministic fulfillment.
9. The method of claim 8, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
obtaining metadata associated with the particular interpretation of the user input utilized in performing the deterministic fulfillment; and
based on the metadata associated with the particular interpretation of the user input, the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command is determined.
10. The method of any preceding claim, wherein providing the request for the automated assistant for the deterministic inference as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises providing the automated assistant with a specific request for why the automated assistant selected an additional client device of the user in place of the client device of the user for performing the deterministic inference of the deterministic fulfillment.
11. The method of claim 10, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
obtaining metadata associated with the additional client device utilized in performing the deterministic fulfillment; and
based on the metadata associated with the additional client device, the additional data to be utilized in providing the deterministic push on why the automated assistant performed the deterministic fulfillment of the assistant command is determined.
12. The method of any preceding claim, wherein providing the request for the automated assistant for the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command comprises providing a generic request for the automated assistant for the deterministic reasoning about why the automated assistant performs the deterministic fulfillment.
13. The method of claim 12, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
Obtaining corresponding metadata associated with one or more of: (i) A particular software application from a plurality of different software applications for executing the deterministic fulfillment; (ii) A specific interpretation of the user input from a plurality of different interpretations of the user input for performing the deterministic fulfillment; or (iii) an additional client device of the user for performing the deterministic fulfillment in place of the client device of the user; and
based on the corresponding metadata, the additional data to be utilized in providing the deterministic push on why the automated assistant performed the deterministic fulfillment of the assistant command is determined.
14. The method of any preceding claim, wherein causing the automated assistant to utilize the additional data to provide the output including the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command for presentation to the user of the client device comprises:
the additional data is processed using a text-to-speech (TTS) model to generate synthesized speech audio data that includes synthesized speech corresponding to the deterministic reasoning about why the automated assistant performed the deterministic fulfillment of the assistant command.
15. The method of any preceding claim, wherein causing the automated assistant to utilize the additional data to provide the output including the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command for presentation to the user of the client device comprises:
the output including the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command is caused to be visually rendered at a display of the client device.
16. The method of any preceding claim, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
the additional data is selected based on the request included in the additional user input and from a plurality of different instances of pre-generated data.
17. The method of any preceding claim, wherein processing the additional user input to determine the additional data to be utilized in providing the deterministic push as to why the automated assistant performed the deterministic fulfillment of the assistant command comprises:
The additional data is generated based on the request included in the additional user input.
18. A method implemented by one or more processors, the method comprising:
receiving user input from a user of a client device, the user input comprising an assistant command and directed to an automated assistant that is at least partially implemented at the client device;
determining whether data to be utilized in performing deterministic fulfillment of the assistant command can be determined;
in response to determining that the data to be utilized in executing the deterministic fulfillment of the assistant command cannot be determined:
processing the user input to determine alternative data to be utilized in performing alternative fulfillment of the assistant command; and
causing the automated assistant to utilize the replacement data to perform the replacement fulfillment of the assistant command;
receiving additional user input from the user of the client device, the additional user input comprising a request for the automated assistant to provide deterministic reasoning about why the automated assistant performs the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command;
Processing the additional user input to determine additional data to be used to provide the deterministic reasoning about why the automated assistant performs the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command; and
causing the automated assistant to utilize the additional data to provide an output for presentation to the user of the client device, the output including the deterministic reasoning about why the automated assistant performs the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command.
19. The method of claim 18, wherein processing the additional user input to determine the additional data to utilize in providing the deterministic push of why the automated assistant performed the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command further comprises:
the additional user input is processed to generate recommendation data to be utilized in generating recommendation actions regarding how the automated assistant can perform the deterministic fulfillment of the assistant command.
20. The method of claim 19, wherein the output further includes the recommended action regarding how the automated assistant can implement the deterministic fulfillment of the assistant command.
21. The method of claim 20, wherein the recommended action includes a prompt that, when selected, causes the automated assistant to perform the recommended action.
22. A method implemented by one or more processors, the method comprising:
receiving user input from a user of a client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device;
determining whether data to be utilized in performing deterministic fulfillment of the assistant command can be determined;
in response to determining that the data to be utilized in executing the deterministic fulfillment of the assistant command cannot be determined:
processing the user input to determine recommendation data to be utilized in generating recommendation actions regarding how the automated assistant can perform the deterministic fulfillment of the assistant command; and
causing the automated assistant to utilize the recommendation data to provide an output for presentation to the user of the client device, the output including the recommendation action regarding how the automated assistant is able to implement the deterministic fulfillment of the assistant command; and including a prompt that, when selected, causes the automated assistant to perform the recommended action; and
In response to receiving additional user input from the user of the client device including a user selection of the prompt:
causing the automated assistant to perform the recommended action to enable execution of the deterministic fulfillment of the assistant command.
23. The method of claim 22, wherein processing the user input to determine the recommendation data to utilize in generating the recommendation action regarding how the automated assistant can perform the deterministic fulfillment of the assistant command is in response to determining that there is no alternative fulfillment of the assistant command.
24. A method implemented by one or more processors, the method comprising:
receiving user input from a user of a client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device;
processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command;
causing the automated assistant to utilize the data to perform the deterministic fulfillment of the assistant command;
receiving additional user input from the user of the client device, the additional user input including a request for the automated assistant to provide deterministic reasoning about why the automated assistant does not perform alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command;
Processing the additional user input to determine additional data to be used to provide the deterministic reasoning about why the automated assistant does not perform the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command; and
causing the automated assistant to utilize the additional data to provide output for presentation to the user of the client device, the output including the deterministic reasoning about why the automated assistant does not perform the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command.
25. A method implemented by one or more processors, the method comprising:
receiving user input from a user of a client device, the user input comprising an assistant command and directed to an automated assistant executing at least in part at the client device;
processing the user input to determine data to be utilized in performing deterministic fulfillment of the assistant command;
causing the automated assistant to utilize the data to perform the deterministic fulfillment of the assistant command;
when the automated assistant performs the deterministic execution of the assistant command:
Causing the automated assistant to visually render selectable elements for presentation to the user of the client device, which when selected cause the automated assistant to provide deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command; and
in response to receiving additional user input from the user of the client device including a user selection of the selectable element:
processing the additional user input to determine additional data to be used to provide the deterministic reasoning about why the automated assistant does not perform the alternative fulfillment of the assistant command in place of the deterministic fulfillment of the assistant command; and
causing the automated assistant to provide output for presentation to the user of the client device, the output including the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command.
26. The method of claim 25, wherein the user input including the assistant command and directed to the automated assistant is captured in audio data generated by one or more microphones of the client device.
27. The method of claim 26, wherein processing the user input to determine the data to utilize in performing the deterministic fulfillment of the assistant command comprises:
processing the audio data captured of the user input including the assistant command using an Automatic Speech Recognition (ASR) model to generate an ASR output;
processing the ASR output using a Natural Language Understanding (NLU) model to generate an NLU output; and
the data to be utilized in executing the deterministic fulfillment of the assistant command is determined based on the NLU output.
28. The method of claim 27, wherein causing the automated assistant to visually render the selectable element for presentation to the user of the client device, when the selectable element is selected, causing the automated assistant to provide the deterministic reasoning about why the automated assistant performs the deterministic fulfillment of the assistant command is in response to determining that an NLU metric associated with the NLU output fails to meet an NLU metric threshold.
29. A system, comprising:
at least one processor; and
a memory storing instructions that, when executed, cause the at least one processor to perform operations corresponding to any of claims 1 to 28.
30. A non-transitory computer-readable storage medium storing instructions that, when executed, cause at least one processor to perform operations corresponding to any of claims 1-28.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US63/226,961 | 2021-07-29 | ||
US17/532,759 | 2021-11-22 | ||
US17/532,759 US20230031461A1 (en) | 2021-07-29 | 2021-11-22 | Providing certain reasoning with respect to fulfillment of an assistant command |
PCT/US2021/060986 WO2023009156A1 (en) | 2021-07-29 | 2021-11-29 | Providing certain reasoning with respect to fulfillment of an assistant command |
Publications (1)
Publication Number | Publication Date |
---|---|
CN116711283A true CN116711283A (en) | 2023-09-05 |
Family
ID=87837965
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180089018.1A Pending CN116711283A (en) | 2021-07-29 | 2021-11-29 | Providing deterministic reasoning about fulfilling assistant commands |
Country Status (1)
Country | Link |
---|---|
CN (1) | CN116711283A (en) |
-
2021
- 2021-11-29 CN CN202180089018.1A patent/CN116711283A/en active Pending
Similar Documents
Publication | Publication Date | Title |
---|---|---|
KR102586990B1 (en) | Defining assistant responsiveness according to the characteristics of a multi-assistant environment | |
JP7297836B2 (en) | Voice user interface shortcuts for assistant applications | |
US20230267921A1 (en) | Systems and methods for determining whether to trigger a voice capable device based on speaking cadence | |
EP3788620B1 (en) | Supplementing voice inputs to an automated assistant according to selected suggestions | |
US20230074406A1 (en) | Using large language model(s) in generating automated assistant response(s | |
US11763813B2 (en) | Methods and systems for reducing latency in automated assistant interactions | |
KR20240007261A (en) | Use large-scale language models to generate automated assistant response(s) | |
US20230377580A1 (en) | Dynamically adapting on-device models, of grouped assistant devices, for cooperative processing of assistant requests | |
JP2021515341A (en) | Reducing client device latency in rendering remotely generated automation assistant content | |
CN116830075A (en) | Passive disambiguation of assistant commands | |
JP2023549015A (en) | Enabling natural conversations about automated assistants | |
US20230031461A1 (en) | Providing certain reasoning with respect to fulfillment of an assistant command | |
KR20230156929A (en) | Robotic computing device with adaptive user interaction | |
JP2024510698A (en) | Contextual suppression of assistant commands | |
CN116711283A (en) | Providing deterministic reasoning about fulfilling assistant commands | |
EP4150536A1 (en) | Providing certain reasoning with respect to fulfillment of an assistant command | |
US20240078374A1 (en) | System(s) and method(s) for causing contextually relevant emoji(s) to be visually rendered for presentation to user(s) in smart dictation | |
US20230215422A1 (en) | Multimodal intent understanding for automated assistant | |
KR20230158615A (en) | Enable natural conversations using soft endpointing for automated assistants | |
KR20230153450A (en) | Device arbitration for local implementation of automatic speech recognition | |
CN117121100A (en) | Enabling natural conversations with soft endpoints for automated assistants | |
WO2024054271A1 (en) | System(s) and method(s) for causing contextually relevant emoji(s) to be visually rendered for presentation to user(s) in smart dictation |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
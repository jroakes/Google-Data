JP2020535690A - Quantum error correction - Google Patents
Quantum error correction Download PDFInfo
- Publication number
- JP2020535690A JP2020535690A JP2020514733A JP2020514733A JP2020535690A JP 2020535690 A JP2020535690 A JP 2020535690A JP 2020514733 A JP2020514733 A JP 2020514733A JP 2020514733 A JP2020514733 A JP 2020514733A JP 2020535690 A JP2020535690 A JP 2020535690A
- Authority
- JP
- Japan
- Prior art keywords
- quantum
- error
- detection event
- algorithm
- detection
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000012937 correction Methods 0.000 title claims abstract description 27
- 238000001514 detection method Methods 0.000 claims abstract description 153
- 238000004422 calculation algorithm Methods 0.000 claims abstract description 73
- 238000000034 method Methods 0.000 claims abstract description 73
- 238000005259 measurement Methods 0.000 claims abstract description 56
- 208000011580 syndromic disease Diseases 0.000 claims abstract description 44
- 230000008569 process Effects 0.000 claims abstract description 28
- 238000012545 processing Methods 0.000 claims description 60
- 238000004590 computer program Methods 0.000 claims description 4
- 230000001131 transforming effect Effects 0.000 claims 1
- 239000002096 quantum dot Substances 0.000 description 30
- 239000002243 precursor Substances 0.000 description 16
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 13
- 230000009471 action Effects 0.000 description 9
- 239000000463 material Substances 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 230000005281 excited state Effects 0.000 description 2
- 230000004907 flux Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 241000238366 Cephalopoda Species 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 239000003990 capacitor Substances 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000010367 cloning Methods 0.000 description 1
- 238000004891 communication Methods 0.000 description 1
- 238000007596 consolidation process Methods 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 230000006378 damage Effects 0.000 description 1
- 238000000354 decomposition reaction Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 230000010365 information processing Effects 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 150000002500 ions Chemical class 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 230000005233 quantum mechanics related processes and functions Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 239000002887 superconductor Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 239000013598 vector Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/20—Models of quantum computing, e.g. quantum circuits or universal quantum computers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/08—Error detection or correction by redundancy in data representation, e.g. by using checking codes
- G06F11/10—Adding special bits or symbols to the coded information, e.g. parity check, casting out 9's or 11's
- G06F11/1076—Parity data used in redundant arrays of independent storages, e.g. in RAID systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/70—Quantum error correction, detection or prevention, e.g. surface codes or magic state distillation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/80—Quantum programming, e.g. interfaces, languages or software-development kits for creating or handling programs capable of running on quantum computers; Platforms for simulating or accessing quantum computers, e.g. cloud-based quantum computing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/40—Physical realisations or architectures of quantum processors or components for manipulating qubits, e.g. qubit coupling or qubit control
Abstract
量子コンピュータによって発生されるシンドローム測定のストリームを訂正するステップを含む量子誤り訂正方法が、量子誤り検出回路を通じて誤り伝搬の階層表現を受け取るステップであり、階層表現が、量子アルゴリズムの実行における1つまたは複数の潜在的誤りプロセスと関連する量子コンピュータにおける局所検出事象の確率を各々表現する複数の線回路層を含む、ステップ、ならびに量子アルゴリズムの実行中に、量子誤り検出回路から1つまたは複数のシンドローム測定を受け取るステップ、シンドローム測定を、量子アルゴリズムにおける一連のステップで量子誤り訂正回路のパッチを表現する配列に書き込まれる検出事象へ変換するステップ、記憶した線回路層に依存して検出事象から量子アルゴリズムの実行の1つまたは複数の誤りを判定するステップ、および判定した誤りに基づくシンドローム測定の訂正を与えるステップ、を含む。A quantum error correction method that involves correcting a stream of syndrome measurements generated by a quantum computer is the step of receiving a hierarchical representation of error propagation through a quantum error detection circuit, where the hierarchical representation is one or more in the execution of a quantum algorithm. One or more syndromes from a quantum error detection circuit during a step, as well as a quantum algorithm, including multiple line circuit layers, each representing the probability of a local detection event in a quantum computer associated with multiple potential error processes. The step of receiving the measurement, the step of converting the syndrome measurement into the detection event written in the array representing the patch of the quantum error correction circuit in a series of steps in the quantum algorithm, the step of converting the detection event to the quantum algorithm depending on the stored line circuit layer. Includes a step of determining one or more errors in the execution of, and a step of providing correction of the syndrome measurement based on the determined error.
Description
本開示は、量子誤り訂正の方法に関する。特に、本開示は、量子コンピュータにおいて量子アルゴリズムを実行するキュービットの配列の誤りを判定および訂正する方法に関する。 The present disclosure relates to a method of quantum error correction. In particular, the present disclosure relates to a method of determining and correcting an error in the arrangement of qubits for executing a quantum algorithm in a quantum computer.
量子コンピュータは、量子の重ね合わせおよびもつれを利用して、古典コンピュータより速く或る種類の問題を解く計算装置である。量子コンピュータの構成ブロックはキュービットである。キュービットは、状態が古典ビットの場合のように2つの状態のいずれかにだけよりむしろ、その2つの状態の重ね合わせにあることができる二準位系である。 A quantum computer is a computing device that uses quantum superposition and entanglement to solve certain types of problems faster than classical computers. The building blocks of a quantum computer are qubits. A qubit is a two-level system that can be in the superposition of two states, rather than just one of the two states as in the case of a classical bit.
量子アルゴリズムは、量子コンピュータ上で実行されるアルゴリズムである。量子コンピュータ上でのこれらのアルゴリズムの実行中に、デコヒーレンスおよびノイズを含む幾つかの原因から誤りが導かれ得る。いわゆる「複製不可能定理」により、状態の多重コピーを作成することを伴う古典的誤り検出および訂正技術は不適切である。代わりに、量子誤り検出および訂正技術は、キュービットを幾つかの他のキュービットともつれさせ、そして誤りがいつ発生したかを識別するためにもつれたキュービットの部分集合に測定を行うことを伴う。 A quantum algorithm is an algorithm that is executed on a quantum computer. During the execution of these algorithms on a quantum computer, errors can be derived from several sources, including decoherence and noise. By the so-called "no-cloning theorem", classical error detection and correction techniques that involve making multiple copies of a state are inappropriate. Instead, quantum error detection and correction techniques entangle qubits with some other qubits, and make measurements on a subset of entangled qubits to identify when an error occurred. Accompany.
第1の態様によれば、量子コンピュータによって発生されるシンドローム測定のストリームを訂正する方法であって、量子コンピュータにおける量子誤り検出回路を通じて誤り伝搬の階層表現を受け取るステップであり、階層表現が複数の線回路層を含み、各線回路層が、量子アルゴリズムの実行における1つまたは複数の潜在的誤りプロセスと関連する量子コンピュータにおける局所検出事象の確率を表現する、ステップ、ならびに量子アルゴリズムの実行中に、量子コンピュータにおける量子誤り検出回路から1つまたは複数のシンドローム測定を受け取るステップ、シンドローム測定を配列に書き込まれる検出事象へ変換するステップであり、配列は量子アルゴリズムにおける一連のステップで量子誤り訂正回路のパッチを表現する、ステップ、記憶した線回路層に依存して検出事象から量子アルゴリズムの実行の1つまたは複数の誤りを判定するステップ、および判定した誤りに基づくシンドローム測定の訂正を与えるステップ、を含む方法が記載される。 According to the first aspect, it is a method of correcting a stream of syndrome measurement generated by a quantum computer, which is a step of receiving a hierarchical representation of error propagation through a quantum error detection circuit in the quantum computer, and has a plurality of hierarchical representations. During the step, as well as during the execution of the quantum algorithm, each line circuit layer, including the line circuit layer, represents the probability of a local detection event in the quantum computer associated with one or more potential error processes in the execution of the quantum algorithm. The step of receiving one or more syndrome measurements from a quantum error detection circuit in a quantum computer, the step of converting the syndrome measurement into a detection event written in an array, and the array is a patch of the quantum error correction circuit in a series of steps in the quantum algorithm. Including a step of determining one or more errors in the execution of a quantum algorithm from a detected event depending on the stored line circuit layer, and a step of giving correction of syndrome measurement based on the determined error. The method is described.
本方法は、量子アルゴリズムの実行前に量子誤り訂正回路を通じて誤り伝搬の階層表現を構築するステップを更に含んでよい。 The method may further include constructing a hierarchical representation of error propagation through a quantum error correction circuit prior to execution of the quantum algorithm.
量子誤り検出回路を通じて誤り伝搬の階層表現を構築するステップは、量子回路における1つまたは複数の量子ゲートに対して、その量子ゲートにおいて発生する各潜在的誤りプロセスと関連する1つまたは複数の潜在的検出事象を判定するステップと、各潜在的誤りプロセスと1つまたは複数の線を関連付けるステップであり、線は各々潜在的誤りプロセスと関連する潜在的検出事象を同じ潜在的誤りプロセスと関連する別の潜在的検出事象または量子回路の境界に接続する、ステップと、類似線を併合して1つまたは複数の併合線を形成するステップとを含んでよく、複数の一意の線回路層が複数の併合線から構築される。 The step of constructing a hierarchical representation of error propagation through a quantum error detection circuit is for one or more quantum gates in the quantum circuit, one or more potentials associated with each potential error process occurring at that quantum gate. A step of determining a target detection event and a step of associating one or more lines with each potential error process, each of which associates a potential detection event associated with a potential error process with the same potential error process. It may include a step that connects to another potential detection event or the boundary of a quantum circuit and a step that merges similar lines to form one or more merged lines, with multiple unique line circuit layers. It is constructed from the merged line of.
線は各々、関連する潜在的誤りプロセスの確率を示す重みと関連付けられてよい。重みは離散化されてよい。 Each line may be associated with a weight that indicates the probability of the associated potential error process. The weights may be discretized.
類似線を併合するステップは、同じ始点および同じ終点、同じ方向および長さ、ならびに/または、線の各々と関連する共通の潜在的誤りの少なくとも1つを有する線を結合するステップを含んでよい。 The step of merging similar lines may include joining lines with the same start and end points, the same direction and length, and / or at least one of the common potential errors associated with each of the lines. ..
併合線を形成する類似線に共通でない潜在的誤りプロセスは、上記併合線との関連付けから削除されてよい。 Potential error processes that are not common to the similar lines that form the merge line may be removed from the association with the merge line.
検出事象は配列に循環的に書き込まれてよい。 Detection events may be written cyclically to the sequence.
配列は複数の層を含んでよく、層の数は2のべきである。 The sequence may contain multiple layers and the number of layers should be two.
配列は、量子アルゴリズムの実行中にプロセッサキャッシュに記憶されてよい。 The array may be stored in the processor cache during the execution of the quantum algorithm.
配列は、量子コンピュータにおける量子誤り訂正回路の局所パッチを表してよい。 The array may represent a local patch of quantum error correction circuit in a quantum computer.
量子計算アルゴリズムの実行の誤りを判定するステップは、完全一致プロセスを使用するステップを含んでよい。 The step of determining an error in executing a quantum computing algorithm may include a step of using an exact match process.
量子計算アルゴリズムの実行の誤りを判定するステップは、最小重み完全一致プロセスを使用して、線回路層の1つまたは複数における1つまたは複数の線によって接続される配列における検出事象を対にするステップを含む。 The step of determining an error in the execution of a quantum computing algorithm uses a minimum weight exact match process to pair detection events in an array connected by one or more lines in one or more of the line circuit layers. Including steps.
量子計算アルゴリズムの実行の誤りを判定するステップは、最小重み完全一致を使用して1つまたは複数の検出事象を配列の境界と一致させるステップを含んでよい。 The step of determining an error in the execution of a quantum computing algorithm may include matching one or more detection events with the boundaries of an array using minimum weight exact match.
量子計算アルゴリズムの実行の誤りを判定するステップは、選択された検出事象周辺の配列を探索して未着手の検出事象を見つけ、選択された検出事象を未着手の検出事象と対にするステップ、および/または、選択された検出事象周辺の配列を探索して、異なる検出事象と関連する以前に探索した領域を見つけ、選択された検出事象を異なる検出事象と対にするステップの少なくとも1つを含んでよい。 The step of determining an error in the execution of the quantum calculation algorithm is to search the array around the selected detection event to find the unstarted detection event, and pair the selected detection event with the unstarted detection event. And / or at least one of the steps to search the sequence around the selected detection event to find the previously searched region associated with the different detection event and pair the selected detection event with the different detection event. May include.
選択された検出事象周辺の配列の探索は線回路層によって導かれてよい。 The search for the sequence around the selected detection event may be guided by the line circuit layer.
階層表現は別個のコンピュータによって構築されてよい。 The hierarchical representation may be constructed by a separate computer.
更なる態様によれば、複数の量子誤り検出回路を備える、量子アルゴリズムを実行するための量子コンピュータと、1つまたは複数の古典処理コアとを備え、一組の1つまたは複数の古典処理コアが、本明細書に記載される方法のいずれかを行うように構成される、システムも記載される。 According to a further aspect, a set of one or more classical processing cores comprising a quantum computer for executing a quantum algorithm with multiple quantum error detection circuits and one or more classical processing cores. However, a system configured to perform any of the methods described herein is also described.
本システムは、量子コンピュータにおける量子誤り検出回路を通じて誤り伝搬の階層表現を構築するように構成される更なる1つまたは複数の古典処理コアを更に備えてよい。 The system may further include one or more classical processing cores configured to construct a hierarchical representation of error propagation through quantum error detection circuits in quantum computers.
更なる態様によれば、処理コアによって実行されると、処理コアに、本明細書に記載される方法のいずれかを行わせる、コンピュータプログラムも記載される。 According to a further aspect, a computer program that, when executed by the processing core, causes the processing core to perform any of the methods described herein is also described.
図1は、量子コンピュータ100の一実施形態の概要例を例示する。
FIG. 1 illustrates a schematic example of an embodiment of the
量子コンピュータ100は、量子計算層102、制御層104および古典処理層106を備える。
The
量子計算層102は、量子計算アルゴリズムを行うように構成される量子素子またはキュービット108の配列を備える。量子素子またはキュービット108は、データキュービットおよびシンドロームキュービット(本明細書において測定キュービットとも称される)の共存系を備える。量子計算層102は、キュービット108上の演算を行うための複数の量子ゲート(図示せず)を更に備える。一部の実施形態において、量子計算層は量子素子108の2次元配列の形態にある。
The
量子素子またはキュービット108は、例えば、超伝導キュービットであり得る。量子計算層102は、量子アルゴリズムの実行を通してキュービット間のコヒーレンスを維持するのに十分に低温度に保たれる(例えば、20mK未満)。高コヒーレンスを容易にするために、キュービットは清浄に製造されてよい。キュービット配置も、コヒーレンスを強化するように選ばれてよい。超伝導キュービットが使用される実施形態において、温度は超伝導臨界温度未満に保たれる。コヒーレンスを改善するために、温度は十分に超伝導臨界温度未満に保たれ得る。本明細書において、用語「キュービット」および「量子素子」は互換的に使用されることになる。
The quantum device or
複数の制御素子110を備える制御層104が量子計算層102と古典処理層106との間に介在する。制御素子110は、量子計算層102におけるキュービット108から生測定データを受け取り、そしてそれらを古典処理層106において使用するために2値測定データへ変換する。制御素子110は、一部の実施形態において、量子素子108に命令を発行して、例えば量子ゲート(図示せず)にキュービット回転を行うように命令することもできる。一部の実施形態において、各制御素子110は約6つの量子素子108に接続される。制御素子110は、一部の実施形態において、フィールドプログラマブルゲートアレイ(FPGA)である。
A
古典処理層106は処理コア112の配列を備える。古典処理層106は制御層104を介して量子計算層102に結合される。古典計算層106における処理コア112はキュービット108の局所パッチ114と関連付けられる。局所パッチ114は、複数の共にグループ化されたキュービット108を備える。一部の実施形態において、パッチサイズは約100個のキュービットである。各プロセッサコアは、中央処理ユニット(「CPU」または「プロセッサ」)ならびにL1およびL2キャッシュの形態のオンチップキャッシュメモリ(本明細書において「プロセッサキャッシュ」と称される)を備える。古典処理層106における処理コア112は古典処理層106における隣接する処理コア112に結合される。これにより、処理コア112がそれらの隣接するコアとデータを交換することを許容できる。一部の実施形態において、処理コア112は、古典処理層106内に処理コア112の2次元配列を形成する。
The
古典処理コア112には、プロセッサコアにおけるプロセッサによって実行されると、プロセッサに隣接するコアのプロセッサキャッシュにアクセスさせる専用のアセンブリ命令が設けられる。これにより、複雑なメモリコントローラが必要とされないので、隣接するコア間の低遅延通信に結びつくことができる。
The
使用時には、量子計算層102が、例えばショアのアルゴリズムまたはドイッチュ-ジョサのアルゴリズムなどの量子計算アルゴリズムを実行する。量子計算層102におけるシンドロームキュービットがそれらの隣接するデータキュービットと相互作用して生測定データを発生する。生測定データは制御層104の制御素子110へ送られる。制御素子110は、生測定データを2値測定データへ変換し、そして2値測定データを古典処理層106の処理コア112へ流す。
In use, the
古典処理層106は、制御層104からの2値測定データを、測定された量子計算層102におけるキュービット108の量子状態のパリティへ変換する。これらのパリティは次いで、いかなる量子誤りもおよび/または量子計算層102における量子素子108に対する必要とされる訂正されたパリティを判定するために古典処理層106によって処理される。判定された訂正は次いで、必要とされる訂正処置を判定して与えるために更に処理できる。一部の実施形態において、この更なる処理は追加の古典処理層(図示せず)において行える。
The
図2は、量子コンピュータの誤りを訂正するための方法の一例のフロー図を示す。以下では、本方法は図1における量子コンピュータに関して記載することになる。しかしながら、一般に、それは、キュービットから1つまたは複数の古典処理コアにシンドローム測定を提供する任意の量子計算システムによって行える。 FIG. 2 shows a flow chart of an example of a method for correcting an error in a quantum computer. In the following, this method will be described with respect to the quantum computer in FIG. However, in general, it can be done by any quantum computing system that provides syndrome measurements from qubits to one or more classical processing cores.
本方法(本明細書において量子誤り訂正方法とも称される)は、量子コンピュータにおけるシンドロームキュービットから得られる測定データのストリームを訂正する。一部の実施形態において、本方法は、図1に関して上記した量子計算層などのキュービットの2次元配列の誤りを訂正するために使用される。他の実施形態において、本方法はキュービットの1次元配列に適用できる。 The method (also referred to herein as a quantum error correction method) corrects a stream of measurement data obtained from a syndrome qubit in a quantum computer. In some embodiments, the method is used to correct an error in the two-dimensional array of qubits, such as the quantum computing layer described above, with respect to FIG. In other embodiments, the method is applicable to a one-dimensional array of qubits.
動作115で、古典処理層106における古典処理コア112が量子コンピュータ100における量子誤り検出回路を通じて誤り伝搬の階層表現を受け取り、ここで階層表現が複数の線回路層を含み、各線回路層が、量子アルゴリズムの実行における1つまたは複数の潜在的誤りプロセスと関連する量子コンピュータにおける局所検出事象の確率を表現する。
In
一部の実施形態において、階層表現は1つまたは複数の層(本明細書において線回路層とも称される)を含む。各線回路層は、量子アルゴリズムの段階において一回の誤り検出中に発生し得る1つまたは複数の潜在的検出事象を表現する。例えば、層は、量子アルゴリズムの実行中の一回の誤り検出中にシンドロームキュービットにおいて発生し得る全ての検出事象の表現を含むことができる。 In some embodiments, the hierarchical representation includes one or more layers (also referred to herein as line circuit layers). Each line circuit layer represents one or more potential detection events that can occur during a single error detection at the stage of the quantum algorithm. For example, the layer can contain representations of all detection events that can occur in the syndrome qubit during a single error detection during the execution of the quantum algorithm.
層における1つまたは複数の潜在的検出事象の各々から生じるのは、その検出事象を1つまたは複数の他の潜在的検出事象に接続する一組の加重線である。他方の潜在的検出事象は、線が生じる検出事象と同じ回の誤り検出で発生し、したがって同じ層内にあり得る。他方の検出事象は他の回の誤り検出にもあり得る。 Each of the one or more potential detection events in the layer results from a set of weighted lines that connect the detection event to one or more other potential detection events. The other potential detection event occurs in the same number of error detections as the detection event in which the line occurs, and can therefore be in the same layer. The other detection event can also occur in other rounds of error detection.
各線の重みは、誤りの結果として共に発生する線の各端における検出事象の確率を表す。一部の実施形態において、線は、高確率線ほど低確率線より低い重みを有するように加重される。例えば、線は以下に従って加重できる:
wi=-Clnpi、
式中wiは第iの線の重みであり、piは第iの線と関連する確率であり、そしてCは定数である。
The weight of each line represents the probability of a detection event at each end of the line that co-occurs as a result of the error. In some embodiments, the line is weighted so that the higher the probability line, the lower the weight than the lower probability line. For example, lines can be weighted according to:
w i =-Clnp i ,
In the equation w i is the weight of the i-th line, p i is the probability associated with the i-th line, and C is a constant.
階層表現は、量子アルゴリズムおよびその実行中に発生し得る起こり得る誤りの知識に基づいて事前決定される。事前決定によって、量子アルゴリズムの実行が開始する前に階層表現が決定されることが意味される。一部の実施形態において、階層表現は、量子計算システムとは別個の計算システムによって構築される。例えば、階層表現は、量子計算システム上で走らせられることになる量子アルゴリズムの知識に基づいて遠隔計算システムによって構築されてよい。階層表現は、量子アルゴリズムの実行前にこの遠隔計算システムから量子計算システムに伝送できる。 The hierarchical representation is pre-determined based on knowledge of the quantum algorithm and possible errors that can occur during its execution. Predetermination means that the hierarchical representation is determined before the execution of the quantum algorithm begins. In some embodiments, the hierarchical representation is constructed by a computational system separate from the quantum computing system. For example, the hierarchical representation may be constructed by a remote computing system based on the knowledge of the quantum algorithm that will be run on the quantum computing system. The hierarchical representation can be transmitted from this remote computing system to the quantum computing system before executing the quantum algorithm.
一部の実施形態において、階層表現は、量子計算層における量子素子の各局所パッチに対する表現が第1の古典計算層における対応するプロセッサコアのプロセッサキャッシュへ適合するように選ばれる。これにより、古典計算層におけるプロセッサコアによって行われる計算的に遅いRAM検索の数を削減または排除さえできて、誤り訂正を高速化できる。階層表現の構築は図4に関して以下により詳細に記載することになる。 In some embodiments, the hierarchical representation is chosen so that the representation for each local patch of the quantum element in the quantum computing layer fits into the processor cache of the corresponding processor core in the first classical computing layer. This can reduce or even eliminate the number of computationally slow RAM searches performed by the processor core in the classical computing layer, thus speeding up error correction. The construction of the hierarchical representation will be described in more detail below with respect to Figure 4.
動作116で、量子コンピュータが量子アルゴリズムの実行を開始する。量子アルゴリズムは量子コンピュータにおいて実行される。一部の実施形態において、量子コンピュータは、図1に関して記載したように、量子計算層において量子アルゴリズムを実行した。量子コンピュータは、誤り訂正のために使用されている表面符号を伴う量子アルゴリズムを実行する。表面符号は大きなチェッカーボードとして視覚化できる。各正方形がキュービットを表現する。白い正方形が、データを記憶するために使用されているキュービットに対応して、データキュービットと称される。黒い正方形が、それらの隣接する4つのデータキュービットの誤りを検査するために使用されているキュービットに対応して、測定またはシンドロームキュービットと称される。表面符号の領域をオン/オフすることによって計算が達成される。物理的に、これには、測定キュービットに量子計算層の特定領域内のデータキュービットと相互作用するのをやめさせることを伴う。
At
量子アルゴリズムの実行中に、シンドロームキュービットが隣接するデータキュービット上の測定を行ってシンドローム測定を発生する。これらの測定は、量子計算アルゴリズムの実行においていくらかでも誤りが発生したかどうかを判定する処理のために古典処理層に伝送できる。一部の実施形態において、シンドローム測定は制御層を介して古典処理層に伝送される。 During the execution of the quantum algorithm, the syndrome qubits make measurements on adjacent data qubits to generate syndrome measurements. These measurements can be transmitted to the classical processing layer for processing to determine if any error has occurred in the execution of the quantum computing algorithm. In some embodiments, the syndrome measurement is transmitted to the classical processing layer via the control layer.
複数回の測定が適時に順次行われる。本方法の結果は、時に時空またはボリュームと呼ばれる、2次元(キュービットの1次元配列に対する)または3次元(キュービットの2次元配列に対する)データ構造において動作するとして視覚化できる。 Multiple measurements are taken sequentially in a timely manner. The results of this method can be visualized as operating in a two-dimensional (for a one-dimensional array of cue bits) or three-dimensional (for a two-dimensional array of cuebits) data structures, sometimes called space-time or volume.
動作118で、古典処理コア112が量子コンピュータにおける量子誤り検出回路から1つまたは複数のシンドローム測定を受け取る。
At
一部の実施形態において、シンドローム測定は、量子計算システムにおける制御層を通過する。制御層は、生シンドローム測定データを、古典処理コアによって処理できる2値測定データへ変換する。この2値シンドローム測定データは、更なる処理のために制御層から古典処理コアに伝送される。 In some embodiments, the syndrome measurement passes through a control layer in a quantum computing system. The control layer transforms the raw syndrome measurement data into binary measurement data that can be processed by the classical processing core. This binary syndrome measurement data is transmitted from the control layer to the classical processing core for further processing.
一部の実施形態において、古典処理コアはその生形式のシンドローム測定データを受け取る。 In some embodiments, the classical processing core receives its raw form of syndrome measurement data.
動作120で、古典処理コア112がシンドローム測定を配列であって、量子アルゴリズムにおける一連のステップで量子誤り訂正回路のパッチを表現する、各処理コアにおける配列に書き込まれる検出事象へ変換する。
In
各プロセッサコアにおける配列は、量子アルゴリズムのステップを表現する層から順次配列を構成することによって階層表現から構築される。新たな回の誤り検出が行われるにつれて、各プロセッサコアはその誤り検出回を表現する配列に層を追加する。配列内で、特定の層が、行われている量子アルゴリズムに依存して連続してか否か、複数回繰り返されてよい。 The array in each processor core is constructed from the hierarchical representation by constructing a sequential array from the layers representing the steps of the quantum algorithm. As each new error detection occurs, each processor core adds a layer to the array that represents that error detection. Within the array, the particular layer may be repeated multiple times, depending on the quantum algorithm being performed, whether it is continuous or not.
一部の実施形態において、配列は処理コア112のプロセッサキャッシュに循環的に書き込まれる。各プロセッサキャッシュは、その処理コア112と関連するキュービットの局所パッチを表す配列を記憶する。
In some embodiments, the array is cyclically written to the processor cache of
一部の実施形態において、以前のシンドローム測定と比較して測定の変化が検出されると、検出事象が発生したと判定される。シンドローム測定の値の変化は誤りチェーンの終点を示す。判定した検出事象は配列に書き込まれる。 In some embodiments, if a change in the measurement is detected compared to a previous syndrome measurement, it is determined that a detection event has occurred. Changes in the value of the syndrome measurement indicate the end point of the error chain. The determined detection event is written to the array.
動作122で、古典処理コア112が、完全一致および記憶した線回路層を使用して検出事象から量子アルゴリズムの実行の1つまたは複数の誤りを判定する。
In
量子計算アルゴリズムの実行の誤りは、配列における検出事象の対を一致させることによって、または検出事象を配列の抽象的な境界に一致させることによって判定される。最も有望な対合が見つけられるように対が一致される。 Mistakes in the execution of quantum computing algorithms are determined by matching a pair of detection events in an array or by matching the detection events to the abstract boundaries of the array. Pairs are matched so that the most promising pair can be found.
検出事象の対合は古典処理層における処理コアによって行われる。各プロセッサコアは、その配列における検出事象を同じ配列における検出事象、隣接する処理コアの配列における検出事象および/または量子回路の抽象的な境界と一致させようと試みる。 The pairing of detected events is performed by the processing core in the classical processing layer. Each processor core attempts to match the detection events in its array with the detection events in the same array, the detection events in the array of adjacent processing cores, and / or the abstract boundaries of the quantum circuit.
動作124で、判定した誤りに基づくシンドローム測定の訂正が行われる。
In
図3は、複数回のシンドローム測定を表現する3次元データ構造の一例を図示する。3次元データ構造は配列126の形式である。配列126は複数の線回路層128(図3において全ての層が標記されるわけではない)を備える。各層128は、量子アルゴリズムの実行中に行われるキュービットの局所パッチにおける一回のシンドローム測定を表す。
FIG. 3 illustrates an example of a three-dimensional data structure representing multiple syndrome measurements. The three-dimensional data structure is in the form of
配列126は階層表現における線回路層128から構築される。各層128は複数の点130(図3において全ての点が標記されるわけではない)および複数の線132(図3において全ての線が標記されるわけではない)を備える。配列における各点は、量子アルゴリズムの実行中のシンドロームキュービットにおける潜在的誤り検出事象に対応する。配列における各点130から1つまたは複数の線132が生じる。線132は、量子アルゴリズムの実行の既知の潜在的誤りから生じる検出事象に対応する配列における点の対を接続する。
The
量子アルゴリズムの実行中に、量子素子の局所パッチを表す配列126が古典処理コアにおいて構築される。配列126は階層表現から構築される。図示した実施形態などの一部の実施形態において、配列126はプロセッサコアのプロセッサキャッシュに循環的に書き込まれる。配列の切れ目は、現在の回の誤り検出測定を表現する層を示す。
During the execution of the quantum algorithm, an
測定データがプロセッサコアに流されるにつれて、検出事象134(図においてその一部だけが標記される)が識別され、そして配列に書き込まれる。プロセッサコアは、これらの検出事象134を、それらから生じる線132を使用して対にしようと試みる。発生する線132の高確率ほど低い重みを有するように線132が加重される実施形態において、検出事象134は、最小重み完全一致を使用して対にされる。
As the measurement data flows to the processor core, detection event 134 (only a portion of which is marked in the figure) is identified and written to the array. The processor core attempts to pair these
図4は、量子アルゴリズムの潜在的誤りの階層表現を生成するための方法の一例のフロー図を示す。量子アルゴリズムの実行前に、アルゴリズムのために必要とされるデータ構造が構築される。 FIG. 4 shows a flow diagram of an example of a method for generating a hierarchical representation of a potential error in a quantum algorithm. Before executing the quantum algorithm, the data structures required for the algorithm are constructed.
動作136で、量子アルゴリズムの実行のために使用される量子回路が入力される。量子誤り検出を実装するために使用される量子回路を記述した入力ファイルが古典コンピュータへ読み込まれるか、または最初に生成され次いで読み込まれる。入力ファイルには、各回のシンドローム測定データを生成するためおよび/または量子アルゴリズムを実行するために量子コンピュータにおけるキュービットによって行われるゲート動作を記述する。
In
動作138で、量子回路における潜在的誤り検出事象が判定される。回路におけるゲートごとに、1つまたは複数の起こり得る誤りプロセスがシミュレートされる。一部の実施形態において、ゲートにおけるあらゆる潜在的誤りがシミュレートされる。単一キュービットゲートに対して単一キュービット誤りがシミュレートされ、そして2キュービットゲートに対して2キュービット誤りがシミュレートされる。
In
シンドロームキュービットの1つまたは複数における結果的な検出事象が次いで判定される。検出事象は、シンドロームキュービットからの測定結果のストリームが値を変化させる空間および時間における点である。結果は全てのゲート誤りプロセスの一覧である。 The resulting detection event in one or more of the syndrome qubits is then determined. A detection event is a point in space and time in which a stream of measurement results from a syndrome qubit changes value. The result is a list of all gate error processes.
各潜在的誤りは、それから生じる検出事象の一覧と関連付けられる。一部の実施形態において、各誤りは、0と4との間の検出事象がそれと関連することになる。図5は、量子ゲート140において発生する潜在的誤りと関連する検出事象の一覧の一例を図示する。
Each potential error is associated with a list of detection events that arise from it. In some embodiments, each error will be associated with a detection event between 0 and 4. FIG. 5 illustrates an example of a list of detection events associated with potential errors occurring at
量子アルゴリズムの実行中に量子回路における量子ゲート140において幾つかの誤り142が発生し得る。これらの誤りは古典コンピュータによってシミュレートされ、そして誤りごとに量子回路におけるシンドロームキュービットにおける結果的な検出事象144が判定される。
Some errors 142 can occur at the
図4を再び参照すると、動作146で、誤り一覧がより短い誤り一覧へ分解される。3つ以上の関連する検出事象を伴う誤りごとに、これは、2つだけの検出事象が関連する他の誤りと関連する検出事象の他の一覧から検出事象一覧を構築することを含む。
With reference to FIG. 4 again, in
動作148で、誤りの各一覧と「事前線」が関連付けられる。2つの検出事象と関連する誤りごとに、2つの検出事象を接続する「事前線」が関連付けられる。1つの検出事象と関連する誤りごとに、時空の抽象的な境界に至る事前線が関連付けられる。
In
これらの種類の事前線の各々には、発生するその生成誤りの全確率が割り当てられる。3つ以上の検出事象と関連する誤りは、これらの検出事象を集合的に包含する事前線の一覧と関連付けられる。一部の実施形態において、事前線の複数の異なった一覧が検出事象の一覧を厳密に包含でき、全ての一覧が見つけられる。N個の一覧があれば、各一覧における各事前線には、その生成誤りの確率の1/Nが割り当てられる。 Each of these types of precursors is assigned the full probability of their generation error occurring. Errors associated with three or more detection events are associated with a list of precursors that collectively contain these detection events. In some embodiments, a plurality of different lists of precursors can strictly include a list of detected events and all lists can be found. If there are N lists, each precursor in each list is assigned 1 / N of the probability of its generation error.
動作150で、事前線が合体される。例えば、2つの事前線が時空における同じ位置において始まって終われば、事前線は、元々の2つの総確率を有する単一の事前線と置き換えられる。このプロセスは、合体できる事前線がなくなるまで続けられる。総確率に加えて、合体した事前線は、それらの端点において検出事象を生成する全ての誤りの一覧を保持する。
At
動作152で、事前線が線に変換される。抽象的な境界上で終わらないあらゆる事前線が潜在的に、それと関連する2つの線を有する。事前線は時空における2つの特定位置を接続する。対照的に、線はベクトルである。例えば、単一の時間軸平行事前線は、一方が未来へ向き、一方が過去へ向く、2つの線になることができる。しかしながら、抽象的な境界において終わる事前線は潜在的に、単一の線になるだけである。各線は事前線に至る全ての誤りの一覧を保つが、誤り位置が絶対的よりむしろ相対的にされる。各誤りは、それが関連付けられる回路の始まりに逆に伝搬されて、元々の誤りごとに回路から独立した誤りの一覧を形成する。
In
一部の実施形態において、事前線が線へ変換されるのは、新たな線が任意の以前の線と異なる方向に向くもしくは異なる長さを有する場合、新たな線が、以前の線と同じ方向に向きかつ同じ長さを有するにもかかわらず異なる総確率を有する場合、または新たな線が1つもしくは複数の既存の線と同じ方向に向き、同じ長さを有し、かつ同じ総確率を有するが、これらの線のいずれとも共通して誤り一覧を有しない場合である。時空における各点は、したがって、0以上のエントリを含む線の一覧と関連付けられる。各線が或る一覧に現れる総回数(線の「カウント」)が記録される。一部の線は他より非常に高い回数を有する。 In some embodiments, the pre-line is converted to a line so that the new line is the same as the previous line if the new line points in a different direction or has a different length than any previous line. If they are oriented and have the same length but have different total probabilities, or if the new line is oriented in the same direction as one or more existing lines, has the same length, and has the same total probability. However, there is no error list in common with any of these lines. Each point in space-time is therefore associated with a list of lines containing zero or more entries. The total number of times each line appears in a list (the "count" of the line) is recorded. Some lines have a much higher number of times than others.
動作154で、類似線が併合される。線は、それらが同じ方向に向き、同じ長さを有し、かつ/または1つもしくは複数の誤りを共有すれば、類似していると判定される。一部の実施形態において、線が類似していると判定するためには全ての3つの条件が必要とされる。両方の線に共通でない誤りは破棄される。併合線の確率plは以下であるように設定される:
In
式中p1は第1の線と関連する確率であり、p2は第2の線と関連する確率であり、N1は第1の線のカウントであり、そしてN2は第2の線のカウントである。 In the equation, p 1 is the probability associated with the first line, p 2 is the probability associated with the second line, N 1 is the count of the first line, and N 2 is the second line. Is the count of.
一部の実施形態において、類似していると判定される3つ以上の線がある場合、最小総カウント(N1+N2)を持つ対が併合のために選ばれる。これにより、情報損失併合の影響を最小化できる。 In some embodiments, if there are three or more lines that are determined to be similar, the pair with the minimum total count (N 1 + N 2 ) is chosen for merging. As a result, the effect of information loss consolidation can be minimized.
一部の実施形態において、256本未満の一意の線となるまで線は結合される。線を結合することによって、線の総数が削減できて、量子アルゴリズムの実行の誤りの識別を単純化できる。線の数を削減することは、量子誤り訂正に使用されるデータ構造のサイズも削減できる。一部の実施形態において、データ構造のサイズは、プロセッサコアのプロセッサキャッシュへ適合するように削減できる。これにより、使用されることになる外部メモリアクセスが少なくなるまたはなくなりさえするので、誤り訂正の実行を高速化できる。したがって、これにより、本明細書に記載されるシステムおよび方法を実装しないシステムにおいてより、必要とされる処理資源-メモリおよび処理サイクル-が少ないという点で量子誤り訂正の分野の技術改良に結びつく。 In some embodiments, the lines are joined until there are less than 256 unique lines. By combining the lines, the total number of lines can be reduced and the identification of errors in the execution of the quantum algorithm can be simplified. Reducing the number of lines can also reduce the size of the data structure used for quantum error correction. In some embodiments, the size of the data structure can be reduced to fit the processor cache of the processor core. This reduces or even eliminates external memory access that will be used, thus speeding up error correction execution. Therefore, this leads to technological improvements in the field of quantum error correction in that less processing resources-memory and processing cycles-are required in systems that do not implement the systems and methods described herein.
動作156で、一意の線から「ジグソーピース」が構築される。回路記述には「この一連の回路層をn回繰り返す」などの命令を含んでよく、したがって、あらゆるステップにおける真のデータ構造を、完結回路に対応するデータ構造を形成するように繰り返され得る便宜に構築可能な最少の数のジグソーピースから作ることができる。ピースの数はステップごとに変化し得る。回路の異なる部分の繰り返しの総数が大きくなり得、各ステップの非分解表現を構築および操作することが可能でないので、繰り返しピースへのこの分解が必要である。
In
動作158で、線回路層を構築するために結合線が使用される。一旦線の最終的な圧縮一覧が得られると、次いで完全なデータ構造を記述するために必要とされる最小数の線の一意の層が構築できる。線ごとの最短の誤り一覧だけが保たれる。
In
結果は、プロセッサコアのプロセッサキャッシュへ適合できる量子回路の誤り検出部を表現する高圧縮データ構造である。一部の実施形態において、データ構造は、プロセッサコアのL1キャッシュへ適合するのに十分に小さい。各層における各線は、線の端点における検出事象を観察する総確率の近似を表現する。量子回路における検出事象は線の端点で発生する。 The result is a highly compressed data structure that represents the error detector of a quantum circuit that is compatible with the processor cache of the processor core. In some embodiments, the data structure is small enough to fit into the L1 cache of the processor core. Each line in each layer represents an approximation of the total probability of observing the detection event at the end of the line. Detection events in quantum circuits occur at the end points of lines.
アルゴリズムの完全な実行には、量子コンピュータの動作中に潜在的に何百万回もの誤り検出を実行する局所パッチ当たり100程度のキュービットを考える。アルゴリズムは、量子コンピュータからのシンドローム測定のストリームを、より少数の検出事象へ変換する。検出事象は時空においてランダムに分散される。これらの検出事象を巨大な時空に記憶するよりむしろ、一部の実施形態において、32回分だけ、各々キュービットの16×16配列のための十分な空間を持って保たれる。一部の実施形態において、配列次元が全て2のべきであることが有利であり得る。 For complete execution of the algorithm, consider about 100 qubits per local patch that potentially perform millions of error detections while the quantum computer is running. The algorithm transforms a stream of syndrome measurements from a quantum computer into fewer detection events. Detected events are randomly distributed in space-time. Rather than storing these detection events in a huge space-time, in some embodiments only 32 doses are kept with sufficient space for each 16x16 array of qubits. In some embodiments, it may be advantageous that the array dimensions should all be 2.
明確には、32個の層が記憶される実施形態において、検出回路32、64等と関連する検出事象のように、検出回路0と関連する検出事象は時空層0に記憶されることになる。2のべきサイズを持つ小容量の時空の循環使用は、各線の方向および長さが単一の2バイト整数を使用して表現されることを許容する。各時空位置はボクセルと考えることができ、そして任意のボクセルの指標が与えられると、この2バイト整数を追加して任意の不必要な高位ビットを廃棄することによって、任意の他のボクセルの指標が計算できる。これにより、処理を非常に高速化できる。更には、データ構造がL1キャッシュへ適合するので、使用される計算的に高価なメインRAMアクセスが少なくなるまたはなくなりさえして、本方法も高速化できる。 Clearly, in an embodiment in which 32 layers are stored, detection events related to detection circuit 0, such as detection events related to detection circuits 32, 64, etc., will be stored in space-time layer 0. .. The circular use of small volumes of space-time with a power of 2 allows the direction and length of each line to be represented using a single 2-byte integer. Each spatiotemporal position can be thought of as a voxel, and given any voxel index, any other voxel index by adding this 2-byte integer and discarding any unnecessary high-order bits. Can be calculated. As a result, the processing can be made very fast. Furthermore, since the data structure fits into the L1 cache, this method can also be accelerated by reducing or even eliminating the computationally expensive main RAM access used.
アルゴリズムの実行中に、量子コンピュータにおけるシンドロームキュービットからの測定データが古典計算層におけるプロセッサコアへ流される(例えば、図1に関して記載したように)。一部の実施形態において、各プロセッサコアは約100個のキュービットの局所パッチを扱う。 During the execution of the algorithm, the measurement data from the syndrome qubits in the quantum computer is sent to the processor core in the classical computational layer (eg, as described for Figure 1). In some embodiments, each processor core handles a local patch of about 100 qubits.
アルゴリズムが実行されるにつれて、プロセッサコアによって現在考慮されている時空ボリュームを表現する循環配列を検出事象が占め始める。これらの検出事象は未知の誤りチェーンの端点であり、そしてシンドローム測定のストリームへの訂正のための基準として使用する妥当な一組の誤りを判定するために、他の検出事象または境界と一致されなければならない。検出事象は、それらを接続する線の経路に沿って一致される。上記したように、各線は、線が一致された経路の一部であれば誤りの訂正に使用できる誤りの一覧を有する。訂正は、測定値を移動させることによって誤り検出回路を通じて伝搬する。この伝搬は、それ自体潜在的に計算的に高価であり、量子コンピュータが実行を開始する前に安価なビットレジスタ操作の集合へ慎重にコンパイルされなければならない。 As the algorithm is executed, detection events begin to occupy a circular array that represents the space-time volume currently being considered by the processor core. These detection events are the endpoints of an unknown error chain and are matched with other detection events or boundaries to determine a reasonable set of errors to use as criteria for correction to the stream of syndrome measurements. There must be. Detection events are matched along the path of the line connecting them. As mentioned above, each line has a list of errors that can be used to correct the error if the lines are part of the matched path. The correction propagates through the error detection circuit by moving the measured value. This propagation is potentially computationally expensive in itself and must be carefully compiled into a set of inexpensive bit register operations before the quantum computer can start executing.
図6は、検出事象から量子アルゴリズムの実行の誤りを判定する方法の一例のフローチャートを図示する。発生している関連する誤りが高確率な線ほど線重みが低い実施形態において、検出事象を一致させるために最小重み完全一致が使用される。 FIG. 6 illustrates a flowchart of an example of a method of determining an error in executing a quantum algorithm from a detection event. In embodiments where the line weights are lower for lines with higher probability of associated errors occurring, minimum weight exact match is used to match the detected events.
動作160で、配列における未一致の検出事象が選ばれる。事象は、一部の実施形態において、配列からランダムに選ぶことができる。代替的に、検出事象は、例えば最古の未一致の検出事象を選ぶなど、規則を使用して選ばれてよい。
In
動作162で、選ばれた検出事象周辺の配列が探索される。選ばれた検出事象から生じる線は「送水管」のように扱われ、「水」は高確率の線に沿うほど速く進行する。所与の検出事象と関連する水を伴う時空の領域は、その検出事象の探索領域と呼ばれる。例えば、低加重線ほど細い管と考えることができる。探索中に、管の各々に同量の水を加えることができる。水は、太いもの(低確率事象対合と関連付けられる)より細い管の長さに沿うほど遠くに広がることになる。
In
動作164で、追加の測定データが必要とされるかどうかが判定される。シンドロームキュービット測定データがまだ利用可能でない時空層に向けて探索領域が流れ始めれば、より多くのデータが必要とされると判定される。
この判定が肯定的であれば、動作166で追加のシンドローム測定データが得られる。量子コンピュータは、別の回の誤り検出を行うことによってこのデータを提供する。
If this determination is affirmative,
この判定が否定的であれば、動作168で配列が検出事象周辺で探索され続ける。
If this decision is negative,
動作170で、探索領域において見つけられた検出事象が一致される。異なる検出事象の探索領域が重複するのは許されない。2つの検出事象が、それらの探索領域が任意の他の探索領域と重複することなく接触するように、ちょうど十分な水が各々に加えられ得るように、見つけることができれば、それらは一致させることができる。
In
より複雑な状況では、花が作成または破壊されるに至ってよい交代木が作成されることになり、これらの詳細は「タイミング解析」紙に記載される。 In more complex situations, alternate trees will be created that may lead to the creation or destruction of flowers, details of which will be given in the "Timing Analysis" paper.
動作172で、プロセッサコアが、配列にいくらかでも未一致の検出事象が残っているかどうかを判定する。未一致の検出事象が残っていれば、別の検出事象が選ばれて、プロセスが繰り返される。
At
更なる検出事象が残っていなければ、動作174で、プロセッサコアが量子コンピュータからの更なるシンドローム測定データを待つ。
If no further detection events remain, at
一部の実施形態において、検出事象周辺の近傍の探索が階層的に扱われる。一般のマッチングアルゴリズムを呼び出す前に1つまたは複数のより単純なケースを検査することによって、マッチングの効率が改善できる。 In some embodiments, the search for the vicinity around the detected event is treated hierarchically. Matching efficiency can be improved by inspecting one or more simpler cases before calling a general matching algorithm.
階層の初期ステップは、選択された検出事象周辺の配列を探索して未着手の検出事象を見つけ、そして選択された検出事象を未着手の検出事象と対にすることである。第1に、検出事象が最初に作成されるとき、任意の隣接する時空ボクセルはいかなる水も含むことが不可能である。そのような検出事象は未着手と呼ばれる。一対の隣接する未着手の検出事象を見つけることができれば、それらが最初にこれらの検出事象の両方に隣接するボクセルの全てにおける水の有無を検査することなく一致されることを可能にするのにちょうど十分な水を各々に加えることが可能である。これが事実であれば、これらの事象は一致され、次いで別の検出事象が選ばれる。隣接する未着手の検出事象の対を見つけることができなければ、次の特例が考慮される。 The initial step in the hierarchy is to search the array around the selected detection event to find the unlaunched detection event, and pair the selected detection event with the unlaunched detection event. First, when a detection event is first created, any adjacent spatiotemporal voxel cannot contain any water. Such detected events are called uninitiated. If a pair of adjacent uninitiated detection events can be found, they can be matched without first checking for the presence of water in all of the voxels adjacent to both of these detection events. It is possible to add just enough water to each. If this is the case, these events are matched and then another detection event is elected. If no pair of adjacent uninitiated detection events can be found, the following exceptions are considered.
階層の第2のステップは、選択された検出事象周辺の配列を探索して、異なる検出事象と関連する以前に探索した領域を見つけ、そして選択された検出事象を異なる検出事象と対にすることである。隣接する着手済みの検出事象(すなわち、それらの線に既に水が加えられた検出事象)が与えられると、隣接するボクセルの各々にどれくらいの水があるかを検査し、そしてこれをそのボクセルへの線の重みから減算することによって、各々に加えるのが可能な最大量の水が計算されなければならない。マッチングを許すのに十分な水を各々に加えることができれば(すなわち他の検出事象探索領域が重複されない)、これが行われ、そして別の検出事象が選ばれる。 The second step in the hierarchy is to search the array around the selected detection event to find the previously searched region associated with the different detection event, and pair the selected detection event with the different detection event. Is. Given adjacent initiated detection events (ie, detection events where water has already been added to those lines), check how much water is in each of the adjacent voxels, and then transfer this to that voxel. The maximum amount of water that can be added to each must be calculated by subtracting from the weights of the lines of. If sufficient water can be added to each to allow matching (ie, the other detection event search areas do not overlap), this is done and another detection event is elected.
上記のケースのいずれも当てはまらなければ、一般の最小重み完全一致アルゴリズムが呼び出される。 If none of the above cases apply, the general minimum weight exact match algorithm is called.
本明細書に記載される量子材料および量子演算の実装例が、本明細書に開示される構造およびそれらの構造等価物を含め、適切な量子回路網もしくは、より一般に、量子計算システムで、またはそれらの1つもしくは複数の組合せで実現されてよい。用語「量子計算システム」は、量子コンピュータ、量子情報処理システム、量子暗号システムまたは量子シミュレータを含んでよいが、これに限定されない。 Implementation examples of quantum materials and quantum operations described herein include the structures disclosed herein and their structural equivalents, in a suitable quantum network or, more generally, in a quantum computing system, or. It may be realized by one or a combination of them. The term "quantum computing system" may include, but is not limited to, a quantum computer, a quantum information processing system, a quantum cryptography system or a quantum simulator.
用語、量子情報および量子データは、最小の重要な系がキュービット、例えば、量子情報の単位を定義する系である、量子系によって伝達、保持または記憶される情報またはデータを指す。用語「キュービット」が対応する文脈で二準位系として適切に近似されてよい全ての量子系を包含することが理解される。そのような量子系には、例えば、二準位以上の多準位系を含んでよい。例として、そのような系には、原子、電子、光子、イオンまたは超伝導キュービットを含むことができる。多くの実装例では、計算基礎状態は基底および第1励起状態と識別されるが、しかしながら計算状態が高次励起状態と識別される他の構成が可能であることが理解される。量子メモリが、高忠実度および効率で長時間の間、量子データを記憶できる素子、例えば、伝送のために光が使用され、そして重ね合わせまたは量子コヒーレンスなどの量子データの量子特徴を記憶および保持するために物質が使用される光-物質インタフェースであることが理解される。 The terms, quantum information and quantum data refer to information or data transmitted, retained or stored by a quantum system, where the smallest important system is the qubit, eg, the system that defines the unit of quantum information. It is understood that the term "qubit" includes all quantum systems that may be reasonably approximated as two-level systems in the corresponding context. Such a quantum system may include, for example, a multi-level system having two or more levels. As an example, such a system can include atoms, electrons, photons, ions or superconducting qubits. In many implementations, the computational basis state is identified as the basal and first excited states, however it is understood that other configurations are possible in which the computational state is identified as a higher order excited state. Quantum memory is an element that can store quantum data for a long time with high fidelity and efficiency, for example, light is used for transmission, and it stores and retains quantum features of quantum data such as superposition or quantum coherence. It is understood that the material is a light-material interface that is used to do so.
量子回路素子は、量子処理動作を行うために使用されてよい。すなわち、量子回路素子は、重ね合わせおよびもつれなどの、量子力学的現象を使用して、非決定論的にデータに演算を行うように構成されてよい。キュービットなどの、或る量子回路素子は、同時に2つ以上の状態で情報を表現および演算するように構成されてよい。本明細書に開示されるプロセスで形成されてよい超伝導量子回路素子の例には、とりわけ、コプレーナ導波路、量子LC発振器、キュービット(例えば、磁束キュービットまたは電荷キュービット)、超伝導量子干渉素子(SQUID)(例えば、RF-SQUIDまたはDCSQUID)、インダクタ、コンデンサ、伝送線路、接地面などの回路素子を含む。 Quantum circuit elements may be used to perform quantum processing operations. That is, quantum circuit elements may be configured to perform non-deterministic operations on data using quantum mechanical phenomena such as superposition and entanglement. A quantum circuit element, such as a qubit, may be configured to represent and compute information in two or more states at the same time. Examples of superconducting quantum circuit elements that may be formed by the processes disclosed herein include, among others, coplanar waveguides, quantum LC oscillators, qubits (eg, flux qubits or charge qubits), superconducting quanta. Includes circuit elements such as interfering elements (SQUID) (eg RF-SQUID or DCSQUID), inductors, capacitors, transmission lines, ground planes, etc.
対照的に、古典回路素子は一般に決定論的にデータを処理する。古典回路素子は、データに基本算術、論理および/または入出力動作を行うことによってコンピュータプログラムの命令を集合的に実施するように構成されてよく、データはアナログまたはデジタル形式で表現される。一部の実装例では、古典回路素子は、電気または電磁接続を通じて量子回路素子にデータを送信および/またはそれからデータを受信するために使用されてよい。本明細書に開示されるプロセスで形成されてよい古典回路素子の例には、高速単一磁束量子(RSFQ)素子、30相互量子論理(RQL)素子、およびバイアス抵抗器を使用しないRSFQのエネルギー効率バージョンであるERSFQ素子を含む。他の古典回路素子は、同様に本明細書に開示されるプロセスで形成されてよい。 In contrast, classical circuit elements generally process data deterministically. Classical circuit elements may be configured to collectively execute the instructions of a computer program by performing basic arithmetic, logic and / or input / output operations on the data, and the data is represented in analog or digital form. In some implementations, classical circuit elements may be used to send and / or receive data from quantum circuit elements through electrical or electromagnetic connections. Examples of classical circuit devices that may be formed by the processes disclosed herein include fast single flux quantum (RSFQ) devices, 30 mutual quantum logic (RQL) devices, and RSFQ energies without bias resistors. Includes an efficient version of the ERSFQ element. Other classical circuit elements may also be formed by the processes disclosed herein.
本明細書に記載される回路素子などの、超伝導量子回路素子および/または超伝導古典回路素子を使用する量子計算システムの動作中に、超伝導回路素子は、超伝導体材料が超伝導特性を呈することを許容する温度にクライオスタット内で冷却される。 During the operation of a quantum computing system using superconducting quantum circuit elements and / or superconducting classical circuit elements, such as the circuit elements described herein, the superconducting circuit elements are made of superconductor material with superconducting properties. It is cooled in the cryostat to a temperature that allows it to exhibit.
本明細書が多くの具体的な実施詳細を含むが、これらは、特許請求され得るものの範囲への限定としてでなく、むしろ特定の実装例に固有であり得る特徴の記述として解釈されるべきである。別々の実装例の文脈で本明細書に記載される或る特徴が、組み合わせて単一の実装例でも実装できる。反対に、単一の実装例の文脈で記載される様々な特徴が、別々に複数の実装例でも、または任意の適切な下位組合せでも実装できる。その上、特徴が或る組合せで作用すると上記され、しかもそのように最初に特許請求され得るが、特許請求された組合せからの1つまたは複数の特徴が、一部の場合には、同組合せから削除でき、そして特許請求された組合せは、下位組合せまたは下位組合せの変形とされ得る。 Although the specification contains many specific implementation details, these should be construed as a description of features that may be specific to a particular implementation, rather than as a limitation to the claims. is there. Certain features described herein in the context of separate implementations can be combined and implemented in a single implementation. Conversely, various features described in the context of a single implementation can be implemented separately in multiple implementations or in any suitable subcombination. Moreover, although it is mentioned above that features work in a combination and can be claimed first as such, one or more features from the claimed combination may, in some cases, be the same combination. The combination that can be removed from and claimed can be a subcombination or a variant of the subcombination.
同様に、動作が特定の順に図面に描かれるが、これは、望ましい結果を達成するために、そのような動作が図示される特定の順にもしくは順番に行われること、または全ての例示された動作が行われることを必要とすると理解されるべきでない。例えば、特許請求の範囲に列挙される行為は異なる順に行え、それでも望ましい結果を達成できる。或る状況では、マルチタスキングおよび並列処理が有利であり得る。その上、上記した実装例における様々な部品の分離は、全ての実装例においてそのような分離を必要とするとして理解されるべきでない。 Similarly, the actions are drawn in the drawings in a particular order, which means that such actions are performed in the particular order or order shown, or all exemplified actions, in order to achieve the desired result. Should not be understood as requiring that to be done. For example, the actions listed in the claims can be performed in a different order and still achieve the desired result. In some situations, multitasking and parallelism can be advantageous. Moreover, the separation of the various components in the implementations described above should not be understood as requiring such separation in all implementations.
幾つかの実装例が記載された。にもかかわらず、本発明の趣旨および範囲から逸脱することなく様々な変更がなされ得ることが理解されるであろう。他の実装例は以下の特許請求の範囲内である。 Some implementation examples are described. Nevertheless, it will be understood that various modifications can be made without departing from the spirit and scope of the invention. Other implementation examples are within the scope of the following claims.
100 量子コンピュータ
102 量子計算層
104 制御層
106 古典処理層
108 キュービット(量子素子)
110 制御素子
112 処理コア
114 局所パッチ
126 配列
128 線回路層
130 点
132 線
134 検出事象
140 量子ゲート
142 誤り
144 検出事象
100 quantum computer
102 Quantum computing layer
104 Control layer
106 Classic processing layer
108 qubit (quantum element)
110 Control element
112 Processing core
114 local patch
126 array
128-wire circuit layer
130 points
132 line
134 Detection event
140 Quantum Gate
142 error
144 Detection event
Claims (21)
前記量子コンピュータにおける量子誤り検出回路を通じて誤り伝搬の階層表現を受け取るステップであり、前記階層表現が複数の線回路層を含み、各線回路層が、量子アルゴリズムの実行における1つまたは複数の潜在的誤りプロセスと関連する前記量子コンピュータにおける局所検出事象の確率を表現する、ステップ、ならびに
前記量子アルゴリズムの実行中に、
前記量子コンピュータにおける量子誤り検出回路から1つまたは複数のシンドローム測定を受け取るステップ、
前記シンドローム測定を配列に書き込まれる検出事象へ変換するステップであり、前記配列は前記量子アルゴリズムにおける一連のステップで量子誤り訂正回路のパッチを表現する、ステップ、
記憶した前記線回路層に依存して前記検出事象から前記量子アルゴリズムの前記実行の1つまたは複数の誤りを判定するステップ、および
判定した前記誤りに基づく前記シンドローム測定の訂正を与えるステップ
を含む、方法。 A method of correcting a stream of syndrome measurements generated by a quantum computer.
A step of receiving a hierarchical representation of error propagation through a quantum error detection circuit in a quantum computer, wherein the hierarchical representation contains multiple line circuit layers, each of which contains one or more potential errors in the execution of a quantum algorithm. Representing the probability of a local detection event in the quantum computer associated with the process, as well as during the execution of the quantum algorithm.
The step of receiving one or more syndrome measurements from the quantum error detection circuit in the quantum computer.
A step of transforming the syndrome measurement into a detection event written into an array, wherein the array represents a patch of a quantum error correction circuit in a series of steps in the quantum algorithm.
A step of determining one or more errors of the execution of the quantum algorithm from the detection event depending on the stored line circuit layer, and a step of giving a correction of the syndrome measurement based on the determined error. Method.
前記量子回路における1つまたは複数の量子ゲートに対して、前記量子ゲートにおいて発生する各潜在的誤りプロセスと関連する1つまたは複数の潜在的検出事象を判定するステップと、
各潜在的誤りプロセスと1つまたは複数の線を関連付けるステップであり、前記線は各々前記潜在的誤りプロセスと関連する潜在的検出事象を同じ潜在的誤りプロセスと関連する別の潜在的検出事象または前記量子回路の境界に接続する、ステップと、
類似線を併合して1つまたは複数の併合線を形成するステップと
を含み、
複数の一意の前記線回路層が複数の前記併合線から構築される、請求項2に記載の方法。 The step of constructing a hierarchical representation of error propagation through the quantum error detection circuit is
For one or more quantum gates in the quantum circuit, a step of determining one or more potential detection events associated with each potential error process occurring in the quantum gate.
The step of associating one or more lines with each potential error process, each of which is a potential detection event associated with the potential error process and another potential detection event associated with the same potential error process. Steps that connect to the boundaries of the quantum circuit
Including the step of merging similar lines to form one or more merging lines, including
The method of claim 2, wherein the plurality of unique line circuit layers are constructed from the plurality of merged lines.
同じ始点および同じ終点、
同じ方向および長さ、ならびに/または、
前記線の各々と関連する共通の潜在的誤り
の少なくとも1つを有する線を結合するステップを含む、請求項3から5のいずれか一項に記載の方法。 The step of merging similar lines is
Same start point and same end point,
Same direction and length, and / or
The method of any one of claims 3-5, comprising joining a line having at least one of the common potential errors associated with each of the lines.
選択された検出事象周辺の前記配列を探索して未着手の検出事象を見つけ、前記選択された検出事象を前記未着手の検出事象と対にするステップ、および/または、
選択された検出事象周辺の前記配列を探索して、異なる検出事象と関連する以前に探索した領域を見つけ、前記選択された検出事象を前記異なる検出事象と対にするステップ
の少なくとも1つを含む、請求項1から14のいずれか一項に記載の方法。 The step of determining the error in the execution of the quantum calculation algorithm is
A step of searching the sequence around the selected detection event to find an uninitiated detection event, pairing the selected detection event with the uninitiated detection event, and / or
Includes at least one of the steps of searching the sequence around the selected detection event to find previously searched regions associated with the different detection event and pairing the selected detection event with the different detection event. , The method according to any one of claims 1 to 14.
1つまたは複数の古典処理コアと
を備え、
一組の1つまたは複数の古典処理コアが、請求項1から17のいずれか一項に記載の方法を行うように構成される、
システム。 A quantum computer for executing quantum algorithms, which has multiple quantum error detection circuits,
With one or more classic processing cores,
A set of one or more classical processing cores is configured to perform the method according to any one of claims 1-17.
system.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2022035219A JP7372375B2 (en) | 2017-09-12 | 2022-03-08 | quantum error correction |
JP2023180600A JP2023174910A (en) | 2017-09-12 | 2023-10-19 | quantum error correction |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2017/051193 WO2019054990A1 (en) | 2017-09-12 | 2017-09-12 | Quantum error correction |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2022035219A Division JP7372375B2 (en) | 2017-09-12 | 2022-03-08 | quantum error correction |
Publications (2)
Publication Number | Publication Date |
---|---|
JP2020535690A true JP2020535690A (en) | 2020-12-03 |
JP7039689B2 JP7039689B2 (en) | 2022-03-22 |
Family
ID=59930809
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2020514733A Active JP7039689B2 (en) | 2017-09-12 | 2017-09-12 | Quantum error correction |
JP2022035219A Active JP7372375B2 (en) | 2017-09-12 | 2022-03-08 | quantum error correction |
JP2023180600A Pending JP2023174910A (en) | 2017-09-12 | 2023-10-19 | quantum error correction |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2022035219A Active JP7372375B2 (en) | 2017-09-12 | 2022-03-08 | quantum error correction |
JP2023180600A Pending JP2023174910A (en) | 2017-09-12 | 2023-10-19 | quantum error correction |
Country Status (7)
Country | Link |
---|---|
US (2) | US11422890B2 (en) |
EP (1) | EP3682381A1 (en) |
JP (3) | JP7039689B2 (en) |
CN (1) | CN111417966B (en) |
AU (2) | AU2017431764C1 (en) |
CA (1) | CA3075253C (en) |
WO (1) | WO2019054990A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2023089831A1 (en) | 2021-11-22 | 2023-05-25 | 富士通株式会社 | Simulation program, simulation method, and information processing device |
Families Citing this family (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
AU2017431764C1 (en) | 2017-09-12 | 2021-11-11 | Google Llc | Quantum error correction |
US11521103B1 (en) * | 2017-12-12 | 2022-12-06 | Rigetti & Co, Llc | Utilizing multiple quantum processor unit (QPU) instances |
US11295226B2 (en) * | 2018-08-30 | 2022-04-05 | Red Hat, Inc. | Optimization recommendation services for quantum computing |
US20210042650A1 (en) * | 2019-08-06 | 2021-02-11 | Microsoft Technology Licensing, Llc | Pipelined hardware decoder for quantum computing devices |
US11599817B2 (en) * | 2019-10-18 | 2023-03-07 | Microsoft Technology Licensing, Llc | Logical qubit encoding surface |
CN111178532B (en) * | 2019-12-11 | 2023-12-12 | 本源量子计算科技（合肥）股份有限公司 | Quantum circuit matching method and device, storage medium and electronic device |
WO2021251801A1 (en) * | 2020-06-12 | 2021-12-16 | 한국전기연구원 | Temperature discretization digital device |
US11831336B2 (en) * | 2021-08-12 | 2023-11-28 | Ucl Business Ltd | Quantum computing error correction method, code, and system |
US11907808B2 (en) * | 2021-09-01 | 2024-02-20 | Intel Corporation | Apparatus and method for quantum error correction without measurement or active feedback |
CN114745104B (en) * | 2022-03-08 | 2024-04-12 | 青岛理工大学 | Information transmission method for eliminating noise interference based on multidimensional quantum error correction |
US20230351240A1 (en) * | 2022-04-29 | 2023-11-02 | Red Hat, Inc. | Performing just-in-time (jit) error correction optimization for quantum services using quantum simulators |
US20240056101A1 (en) * | 2022-07-29 | 2024-02-15 | Microsoft Technology Licensing, Llc | Construction of lookup decoders for stabilizer codes |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2016521100A (en) * | 2013-06-07 | 2016-07-14 | アルカテル−ルーセント | Error correction for entangled quantum states |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2003058865A1 (en) * | 2001-12-21 | 2003-07-17 | Magiq Technologies, Inc. | Decoupling error correction from privacy amplification in quantum key distribution |
US7984012B2 (en) | 2006-11-02 | 2011-07-19 | D-Wave Systems Inc. | Graph embedding techniques |
AU2007200501B2 (en) * | 2007-02-06 | 2011-11-17 | Newsouth Innovations Pty Limited | Error Corrected Quantum Computer |
US7966549B2 (en) * | 2007-03-01 | 2011-06-21 | Qucor Pty. Ltd. | Error corrected quantum computer |
US9944520B2 (en) * | 2013-01-15 | 2018-04-17 | Alcatel Lucent | Syndrome of degraded quantum redundancy coded states |
KR101517361B1 (en) * | 2014-01-24 | 2015-05-06 | 고려대학교 산학협력단 | Method for correcting error of imperfect entangled qubit in receiver |
US9762262B2 (en) * | 2014-06-18 | 2017-09-12 | Alcatel Lucent | Hardware-efficient syndrome extraction for entangled quantum states |
US9748976B2 (en) * | 2015-05-22 | 2017-08-29 | Northrop Grumman Systems Corporation | Fault tolerant syndrome extraction and decoding in Bacon-Shor quantum error correction |
US10352717B2 (en) * | 2017-02-28 | 2019-07-16 | Google Llc | Navigation application programming interface |
AU2017431764C1 (en) | 2017-09-12 | 2021-11-11 | Google Llc | Quantum error correction |
-
2017
- 2017-09-12 AU AU2017431764A patent/AU2017431764C1/en active Active
- 2017-09-12 JP JP2020514733A patent/JP7039689B2/en active Active
- 2017-09-12 US US16/645,756 patent/US11422890B2/en active Active
- 2017-09-12 EP EP17771968.9A patent/EP3682381A1/en active Pending
- 2017-09-12 WO PCT/US2017/051193 patent/WO2019054990A1/en active Search and Examination
- 2017-09-12 CA CA3075253A patent/CA3075253C/en active Active
- 2017-09-12 CN CN201780094834.5A patent/CN111417966B/en active Active
-
2021
- 2021-08-31 AU AU2021225173A patent/AU2021225173B2/en active Active
-
2022
- 2022-03-08 JP JP2022035219A patent/JP7372375B2/en active Active
- 2022-07-28 US US17/875,985 patent/US11815937B2/en active Active
-
2023
- 2023-10-19 JP JP2023180600A patent/JP2023174910A/en active Pending
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2016521100A (en) * | 2013-06-07 | 2016-07-14 | アルカテル−ルーセント | Error correction for entangled quantum states |
Non-Patent Citations (1)
Title |
---|
AUSTIN G. FOWLER ET AL: "Towards practical classical processing for the surface code: timing analysis", ARXIV:1202.5602V2 [QUANT-PH], JPN6021026203, 15 October 2012 (2012-10-15), ISSN: 0004544905 * |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2023089831A1 (en) | 2021-11-22 | 2023-05-25 | 富士通株式会社 | Simulation program, simulation method, and information processing device |
Also Published As
Publication number | Publication date |
---|---|
JP7039689B2 (en) | 2022-03-22 |
JP2022069525A (en) | 2022-05-11 |
US11422890B2 (en) | 2022-08-23 |
AU2021225173B2 (en) | 2023-05-18 |
US11815937B2 (en) | 2023-11-14 |
WO2019054990A1 (en) | 2019-03-21 |
EP3682381A1 (en) | 2020-07-22 |
AU2017431764A1 (en) | 2020-03-19 |
CN111417966B (en) | 2024-04-02 |
JP2023174910A (en) | 2023-12-08 |
AU2021225173A1 (en) | 2021-09-30 |
CN111417966A (en) | 2020-07-14 |
JP7372375B2 (en) | 2023-10-31 |
CA3075253A1 (en) | 2019-03-21 |
AU2017431764C1 (en) | 2021-11-11 |
CA3075253C (en) | 2023-08-29 |
US20220382632A1 (en) | 2022-12-01 |
US20200285539A1 (en) | 2020-09-10 |
AU2017431764B2 (en) | 2021-07-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7039689B2 (en) | Quantum error correction | |
CN110738321B (en) | Quantum signal processing method and device | |
Tantivasadakarn et al. | Hierarchy of topological order from finite-depth unitaries, measurement, and feedforward | |
US11740962B2 (en) | Quantum error correction | |
Dupont et al. | Entanglement perspective on the quantum approximate optimization algorithm | |
JP2022068327A (en) | Node grouping method, apparatus therefor, and electronic device therefor | |
Rawson et al. | Directed graph networks for logical reasoning | |
Sreedhar et al. | The Quantum Approximate Optimization Algorithm performance with low entanglement and high circuit depth | |
RU2718409C1 (en) | System for recovery of rock sample three-dimensional structure | |
Wang et al. | Quantum algorithm for solving some discrete mathematical problems by probing their energy spectra | |
Kupper | Analysis of quantum hypergraph states in the ZH-calculus | |
WO2023221680A1 (en) | Quantum state preparation circuit generation and quantum state preparation methods and apparatuses, and quantum chip | |
Brunekreef | Topological Quantum Computation and Quantum Compilation | |
Kwon et al. | Bounded Quantum Regular Language Generator | |
WO2023287520A2 (en) | Determining matching data | |
Rawson et al. | irec ed Gra he wor s or ogical n ail en | |
Mulherkar et al. | Implementation of quantum hitting times of cubelike graphs on IBM’s Qiskit platform | |
LOMONACO | A Not So Impossible Machine Based on the GHZ Paradox | |
Biswal et al. | Implementation of neareast neighbor quantum circuit with low quantum cost | |
Dixit | Quantum computing (QC) | |
Ian et al. | A practicable guide to the quantum computation architectures | |
JP2023552254A (en) | Quantum computing task processing method, system and computer device | |
Mwaniki | A Method For Solving Np-complete Problems By Use Of Graph Embodiment On A Quantum Computation Paradigm Using A Relational Database Query |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20200501 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20200501 |
|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20210621 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20210705 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20210927 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20220207 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20220309 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 7039689Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
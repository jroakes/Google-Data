US20140317105A1 - Live recommendation generation - Google Patents
Live recommendation generation Download PDFInfo
- Publication number
- US20140317105A1 US20140317105A1 US13/868,341 US201313868341A US2014317105A1 US 20140317105 A1 US20140317105 A1 US 20140317105A1 US 201313868341 A US201313868341 A US 201313868341A US 2014317105 A1 US2014317105 A1 US 2014317105A1
- Authority
- US
- United States
- Prior art keywords
- user
- documents
- recommendation
- document
- query
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
- 238000000034 method Methods 0.000 claims abstract description 42
- 238000010586 diagram Methods 0.000 description 7
- 230000004044 response Effects 0.000 description 6
- 238000004590 computer program Methods 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 230000006399 behavior Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 238000006243 chemical reaction Methods 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 230000001419 dependent effect Effects 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000008569 process Effects 0.000 description 2
- 230000010365 information processing Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G06F17/30011—
Definitions
- a system and/or method is provided for using a scatter gather information retrieval system for live recommendation generation, substantially as shown in and/or described in connection with at least one of the figures, as set forth more completely in the claims.
- a method for using a scatter gather information retrieval system for live recommendation generation.
- the method may include retrieving user information classified in a plurality of categories.
- a document recommendation query may be generated based on the user information classified in a corresponding one of the plurality of categories.
- a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents.
- the corpus may classify a plurality of documents of a determined type available for consumption by the user.
- the retrieved plurality of documents may be ranked to generate a final list of recommendations for the user.
- a system for providing recommendations to a user may include a network device with at least one processor coupled to a memory.
- the at least one processor may be operable to retrieve user information classified in a plurality of categories.
- a document recommendation query may be generated based on the user information classified in a corresponding one of the plurality of categories.
- a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents.
- the corpus may classify a plurality of documents of a determined type available for consumption by the user.
- the retrieved plurality of documents may be ranked to generate a final list of recommendations for the user.
- a method for providing recommendations to a user may include retrieving user information classified in a plurality of categories, and information related to recent content consumed by the user. At least one document recommendation query may be generated based on the retrieved user information. For each of the at least one document recommendation query, a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents. The corpus may classify a plurality of documents of a determined type available for consumption by the user. Each retrieved plurality of documents may be ranked based on the recent content consumed by the user, to generate a final list of recommendations for the user.
- FIG. 1 is a block diagram illustrating an example architecture for generating live recommendations using a “scatter gather” information retrieval system, in accordance with an example embodiment of the disclosure.
- FIG. 2 is a block diagram illustrating an example database with user-related information, which may be used during the live recommendation generation illustrated in FIG. 1 , in accordance with an example embodiment of the disclosure.
- FIG. 3 is a block diagram illustrating a backend server architecture, which may be used during the live recommendation generation illustrated in FIG. 1 , in accordance with an example embodiment of the disclosure.
- FIG. 4 is a flow chart illustrating example steps of a method for providing recommendations to a user, in accordance with an example embodiment of the disclosure.
- FIG. 5 is a flow chart illustrating example steps of another method for providing recommendations to a user, in accordance with an example embodiment of the disclosure.
- FIG. 6 is a flow chart illustrating example steps of a method for providing recommendations to a user based on recent user behavior, in accordance with an example embodiment of the disclosure.
- circuits and circuitry refer to physical electronic components (i.e. hardware) and any software and/or firmware (“code”) which may configure the hardware, be executed by the hardware, and or otherwise be associated with the hardware.
- code software and/or firmware
- and/or means any one or more of the items in the list joined by “and/or”.
- x and/or y means any element of the three-element set ⁇ (x), (y), (x, y) ⁇ .
- x, y, and/or z means any element of the seven-element set ⁇ (x), (y), (z), (x, y), (x, z), (y, z), (x, y, z) ⁇ .
- processor may be used to refer to one or more of a central processing unit, a processor of a symmetric or asymmetric multiprocessor system, a digital signal processor, a micro-controller, a graphics/video processor, or another type of processor.
- the present disclosure relates to a method and system for using a “scatter gather” information retrieval system for live recommendation generation.
- Conventional recommendation engines categorize the users into different categories and then suggest recommendations based on these categories. Additionally, conventional recommendation systems store the generated (or “processed”) user recommendations periodically for subsequent use.
- a search engine architecture may be used to provide real time recommendations across different content verticals with low latencies.
- the real time recommendations may be provided by storing multiple kinds of documents in the index and serving corpus of the search engine (e.g., documents that are about users as well as documents that are about items and their relations to different properties, such as which other items they are popular with, related to, as well as which regions or age groups they are popular in).
- the retrieval and ranking of the recommendations may then be separated into two phases, and only searching portions of the corpus (e.g., the various corpora or content verticals) that need to be searched.
- a “scatter gather” system may be used to retrieve a plurality of documents (e.g., apps, books, songs, movies, etc.) that the user can potentially be interested in, and then rank these retrieved items to generate recommendations for presenting to the user.
- a “scatter gather” system may include a single server (or a “root”), which may be operable to generate and communicate at least one document recommendation request or query to a plurality of other backend servers (or “leaves”) associated with a corpora (e.g., corpus 1, . . . , corpus N) of documents. For example, each corpus (1, . . .
- each of the “leaves” may be operable to retrieve and score/rank documents in response to the request or query received from the “root”. After the scoring/ranking of retrieved documents, the top documents from each “leave” may be returned to the “root”. The “root” may then gather, merge, and sort the documents from all of the “leaves” and return a final list of top results to the user. In this way, by using a “scatter gather” system, storing of “processed” user recommendations, which is typical of the conventional recommendation engines, may be avoided and all recommendation processing and presentation to the user may be achieved in real time.
- FIG. 1 is a block diagram illustrating an example architecture for generating live recommendations using a “scatter gather” information retrieval system, in accordance with an example embodiment of the disclosure.
- the architecture 100 may comprise a frontend server 104 , a recommendation engine 106 , a user information database 114 , and a plurality of backend servers 108 a , . . . , 112 a.
- the frontend server 104 may comprise suitable circuitry, logic and/or code and may be operable to provide a media consumption environment to the user 102 .
- the frontend server 104 may provide online media store functionalities (e.g., sale of songs, apps, books, movies, etc.), personal media locker services (cloud-based media storage) and other media-related functions.
- the recommendation engine 106 may comprise memory/storage 116 , CPU 118 , as well as other suitable circuitry, logic and/or code, and may be operable to provide one or more recommendations to the frontend server 104 for presentation to the user 102 .
- the recommendation engine 106 may receive (e.g., via wired and/or wireless connection 120 a ) user credentials (for user 102 ) from the frontend server 104 (e.g., after the user 102 logs in to a media web store or a media search engine maintained by the frontend server 104 ).
- the recommendation engine 106 may then receive user-related information (for user 102 ) from the user information database 114 via the wired and/or wireless connection 120 c.
- the recommendation engine 106 may then generate one or more document recommendation requests or queries based on the received user-related information.
- the generated document recommendation queries may be communicated to the backend servers 108 a , . . . , 112 n (e.g., via wired and/or wireless connections 120 b ), which may search one or more search corpus (e.g., corpus 1, . . . , N) and return a plurality of documents matching the document recommendation queries.
- Each backend server (“leaf”) does a local scoring/ranking of retrieved documents and returns the top results to the recommendation engine (“root”) 106 .
- each of the root servers within the recommendation engine 106 may retrieve and score/rank documents in response to the document recommendation queries received from the backend servers 108 a . . . 112 n.
- the recommendation engine may generate a final list of recommendations to be returned to the frontend server 104 for presentation to the user 102 .
- the backend servers 108 a , . . . , 112 n may comprise suitable circuitry, logic and/or code and may be operable to provide, for example, searching and document retrieval functionalities.
- one or more of the backend servers 108 a , . . . , 112 n may be associated with a respective corpus (e.g., corpus 1, . . . , N) comprising documents of certain type.
- corpus 1 may be associated with backend servers 108 a , . . . , 108 n, and may comprise music-related items (e.g., music tracks, albums, etc.).
- Corpus 2 may be associated with backend servers 110 a , . . . , 110 n and may comprise applications (or apps) related documents.
- Corpus N may be associated with backend servers 112 a , . . . , 112 n and may comprise books related documents.
- the recommendation engine 106 is illustrated separate from the frontend server 104 and the backend servers 108 a , . . . 112 n, the present disclosure may not be limited in this regard. More specifically, the recommendation engine 106 may be implemented as part of the frontend server 104 or one of the backend servers 108 , . . . , 112 .
- the user 102 may provide user credentials (e.g., login information, password, etc.) to the frontend server 104 for logging in to a media-related service provided by the frontend server 104 .
- the frontend server 104 may communicate the user 102 credentials to the recommendation engine 106 via communication path 120 a.
- the recommendation engine 106 may then use the received user credentials (i.e., user identity information) as a first pass query to the user information database 114 (via the communication path 120 c ).
- the database 114 may return user-related information back to the recommendation engine 106 (e.g., information about user's friends, user's content consumptions, any information about the user that user 102 has previously provided to the frontend server 104 , or information that may be inferred from the available user data, user location, etc.). More specific examples of user-related information are provided herein below in reference to FIG. 2 .
- a “scatter gather” system may be implemented by using the recommendation engine 106 as the initiating single server (or a “root”), which may be operable to generate and communicate at least one document recommendation request or query to the plurality of backend servers (or “leaves”) 108 a , . . . , 112 n associated with a corpora (e.g., corpus 1, . . . , corpus N) of documents.
- the recommendation engine 106 may then generate one or more document recommendation queries based on the received user-related information, and may send the document recommendation queries to the backend servers 108 a , . . . , 112 n (i.e., a “scatter” step).
- the backend servers 108 a , . . . , 112 n may each perform a search and retrieve candidate content for user recommendations.
- the retrieved documents may be scored/ranked and a top list of documents may be returned back to the recommendation engine 106 , which may use the user-related data to further score and rank the received documents in order to generate a final list of recommendations for the user (i.e., the “gather” step).
- the final list may be further mixed so that recommendations from multiple document types (e.g., apps, music, videos, books, etc.) are present in the final list of recommendations.
- the recommendation engine 106 may then communicate the final list of recommendations to the frontend server 104 for presentation to the user 102 .
- the recommendation list generation functionalities described herein may be performed in real time (e.g., upon logging in of the user 102 into the media-related services provided by the frontend server 104 ) and may be updated periodically.
- FIG. 2 is a block diagram illustrating an example database with user-related information, which may be used during the live recommendation generation illustrated in FIG. 1 , in accordance with an example embodiment of the disclosure.
- the user information database may comprise user identification information 202 , information on user's viewing history 204 , information on user's purchase history 206 (e.g., purchase of apps, music, videos, movies, books, etc.), and information on user's listening history 208 (e.g., listening history of music stored in user's cloud-based media locker).
- the user information database 114 may also comprise user preferences information 210 (e.g., information provided by the user regarding preferred media genre, preferred media type, preferred artists/authors, etc.), user demographic data 212 , and user location information 218 .
- the user information database 114 may also comprise user social profile information 214 (e.g., information on user's friends in a social network) and 216 (e.g., information on the user's friends' viewing/purchase history).
- the user information database 114 may further include user search history 220 , user category/genre preferences 222 , user reading history 224 , user application usage history 226 , and real time feedback information 228 .
- the real time feedback information 228 may comprise recommendation dismissals, recommendation conversions (clicking on a recommendation or buying/installing the recommendation), recommendation approval information (+1, Like, etc.), and recommendation saving (e.g., via a wishlist feature).
- the recommendation engine 106 may then generate one or more document recommendation queries based on the received user-related information, and may send the document recommendation queries to the backend servers 108 a , . . . , 112 n.
- the user-related information comprises user viewing history 204 and/or purchase history 206 and/or listening history 208
- the document recommendation queries may comprise document similar to what was viewed and/or purchased and/or listened to by the user.
- the document recommendation queries may comprise document popular to the user demographic (e.g., documents popular by other users that are same age as the user 102 ) and/or documents popular in the specific geographic location of the user.
- FIG. 3 is a block diagram illustrating a backend server architecture, which may be used during the live recommendation generation illustrated in FIG. 1 , in accordance with an example embodiment of the disclosure.
- the example backend server architecture 300 may comprise a search engine 302 and a document database (or corpus) 304 .
- the document database 304 may comprise suitable circuitry, logic and/or code and may be operable to provide documents of a specific type (e.g., song tracks, videos, books, movies, apps, etc.).
- a specific type e.g., song tracks, videos, books, movies, apps, etc.
- the search engine 302 may comprise suitable circuitry, logic and/or code and may be operable to receive database documents (e.g., documents 312 , D1, . . . , Dn) in response to recommendation query 310 from the recommendation engine 106 , and rank the received documents 312 based on the document final scores 314 , . . . , 316 .
- the search engine 302 may comprise a CPU 303 , a memory 305 , a query independent score module 306 , and a search engine ranker 308 .
- the query independent score module 306 may comprise suitable circuitry, logic and/or code and may be operable to calculate a query-independent score (e.g., a popularity score) 307 for one or more documents received from the database 304 .
- a query-independent score e.g., a popularity score
- the query-independent score may comprise a popularity score based on the number of search queries previously received within the backend server architecture 300 about a specific document from the database 304 , as well as at least one of query-to-click ratio information and clickthrough ratio (CTR) information for at least one web page search result for the specific document.
- CTR clickthrough ratio
- the search engine ranker 308 may comprise suitable circuitry, logic and/or code and may be operable to receive one or more documents 312 (e.g., documents D1, . . . , Dn) in response to a document recommendation query 310 .
- the search engine ranker 308 may then rank the received documents 312 based on a final ranking score 314 , . . . , 316 calculated for each document using one or more query independent scores 307 (received from the query independent score module 306 ) and/or one or more query dependent scores.
- the search engine ranker may generate the final ranking score 314 , . . . , 316 for each document based on the query-dependent and/or query-independent scores.
- the recommendation engine 106 may communicate a document recommendation query 310 to the search engine 302 .
- the document recommendation query 310 may be based on the user-related information received by the recommendation engine 106 from the database 114 .
- the search engine 302 may obtain one or more documents 312 (D1, . . . , Dn) that satisfy the recommendation query 310 .
- a query-independent score 307 may be calculated for each of the documents, and the score may be used by the ranker 308 to calculate the final ranking scores 314 , . . . , 316 for the documents and output a ranked document search results list back to the recommendation engine 106 .
- the search engine 302 and the database 304 are all illustrated as separate blocks, the present disclosure may not be limited in this regard. More specifically, the database 304 may be part of, and implemented within, the search engine 302 with all processing functionalities being controlled by the CPU 303 .
- the CPU 303 may be operable to perform one or more of the processing functionalities associated with retrieving and/or ranking of documents, as disclosed herein.
- all ranking/scoring functionalities for documents retrieved in response to the document recommendation query 310 may be performed by the recommendation engine 106 .
- the backend server architecture 300 (which is representative of one or more of the backend servers 108 a , . . . , 112 n ) may perform the document retrieval functionalities, and ranking/scoring functionalities may be performed after the retrieved documents are communicated back to the recommendation engine 106 .
- FIG. 4 is a flow chart illustrating example steps of a method for providing recommendations to a user, in accordance with an example embodiment of the disclosure.
- the example method 400 may start at 402 , when a Step 1 Retrieval may be performed (e.g., by the recommendation engine 106 ) by gathering user-related information (e.g., from the database 114 ).
- Step 2 Retrieval may be performed by retrieving candidate content for the user based on the retrieved Step 1 user-related information (e.g., content retrieved by the backend servers 108 a , . . . , 112 n ).
- the retrieved content may be scored and ranked.
- the recommendation engine may generate explanations for the ranked content (e.g., what user information was used to generate the query, which document query was used, etc.).
- the recommendation engine 106 may mix the ranked results for diversity and may communicate the final document recommendations list to the frontend server 104 for display.
- FIG. 5 is a flow chart illustrating example steps of another method for providing recommendations to a user, in accordance with an example embodiment of the disclosure.
- the example method 500 may start at 502 , when user information classified in a plurality of categories (e.g., 202 , . . . , 218 ) may be retrieved from the database 114 (e.g., by the recommendation engine 106 ).
- the recommendation engine 106 may generate, for at least one of the plurality of categories, a document recommendation query based on the user information classified in a corresponding one of the plurality of categories.
- the backend servers 108 a , . . . , 112 n may retrieve, for each generated recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents (e.g., one or more of corpus 1, . . . , N).
- the corpus e.g., one or more of corpus 1, . . . , N
- the corpus may classify a plurality of documents of a determined type available for consumption by the user (e.g., each corpus 1, . . . , N may be associated with a given type of documents, such as music, apps, books, videos, movies, etc.).
- the recommendation engine 106 may rank, for each of the generated recommendation query, the retrieved plurality of documents based on at least one predetermined ranking criteria. The ranking may be based on the user information classified in the plurality of categories.
- the recommendation engine may generate the final list of recommendations for the user by selecting, for each of the generated recommendation query, a predetermined number of documents from the ranked plurality of documents. The final list of recommendations may then be communicated to the frontend server 102 for presentation to the user 102 .
- the recommendation engine 106 may user hyper-recent user behavior (i.e., content consumed in the recent past) to give higher weight to the content (e.g., documents retrieved by the backend servers 108 a , . . . , 112 n ) similar to the recent content that was consumed by the user.
- the personalization of the final recommendation list provided to the user 102 may be further improved by selecting a higher weight to retrieved content that is similar to recently consumed content.
- the recommendation engine 106 may also use information on how the user reached the current content to provide the recommendations. For example, relevant information may include what did the user watch/listen before the recent content, or what queries did the user use to reach the recent content. This information may be used to determine the current user intent and to rank the content received from the backend servers 108 a, . . . , 112 n.
- FIG. 6 is a flow chart illustrating example steps of a method for providing recommendations to a user based on recent user behavior, in accordance with an example embodiment of the disclosure.
- the example method 600 may start at 602 , when user information classified in a plurality of categories (e.g., 202 , . . . , 218 ) may be retrieved from the database 114 .
- user information classified in a plurality of categories e.g., 202 , . . . , 218
- information related to recent content consumed by the user 102 may be retrieved from the database 114 .
- At 606 at least one document recommendation query may be generated by the recommendation engine 106 based on the retrieved user information.
- the backend servers 108 a , . . . , 112 n may retrieve, for each of the at least one document recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents (e.g., one or more of corpus 1, . . . , N).
- the corpus e.g., one or more of corpus 1, . . . , N
- N may be associated with a given type of documents, such as music, apps, books, videos, movies, etc.).
- each retrieved plurality of documents may be ranked (e.g., by the recommendation engine 106 ) based on the recent content consumed by the user, to generate a final list of recommendations for the user 102 .
- implementations may provide a machine-readable storage device, having stored thereon, a machine code and/or a computer program having at least one code section executable by a machine and/or a computer, thereby causing the machine and/or computer to perform the steps as described herein for providing recommendations to a user.
- the present method and/or system may be realized in hardware, software, or a combination of hardware and software.
- the present method and/or system may be realized in a centralized fashion in at least one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other system adapted for carrying out the methods described herein is suited.
- a typical combination of hardware and software may be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.
- the present method and/or system may also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which when loaded in a computer system is able to carry out these methods.
- Computer program in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: a) conversion to another language, code or notation; b) reproduction in a different material form.
Abstract
A system and/or method is provided for using a scatter gather information retrieval system for live recommendation generation. The method may include retrieving user information classified in a plurality of categories. For at least one of the plurality of categories, a document recommendation query may be generated based on the user information classified in a corresponding one of the plurality of categories. For each generated recommendation query, a plurality of documents satisfying the recommendation query may be retrieved from a corpus of documents. The corpus may classify a plurality of documents of a determined type available for consumption by the user. Each retrieved plurality of documents may be ranked to generate a final list of recommendations for the user. Each of the plurality of documents may include identifying information for a book, a song, a video, a movie, a music album, an application, and/or a TV show.
Description
- Conventional recommendation engines are mainly based on a combination of offline processes, with sporadic lookups at query time. However, there are several drawbacks of such recommendation engines. For example, recommendations for all users have to be generated constantly, at regular time intervals, regardless of whether or not a user has returned to the recommendations destination. Additionally, since the recommendations are based on offline processes, the conventional recommendation engine does not take into account real-time feedback based on actions by the user.
- Further limitations and disadvantages of conventional and traditional approaches will become apparent to one of skill in the art, through comparison of such approaches with some aspects of the present method and apparatus set forth in the remainder of this disclosure with reference to the drawings.
- A system and/or method is provided for using a scatter gather information retrieval system for live recommendation generation, substantially as shown in and/or described in connection with at least one of the figures, as set forth more completely in the claims.
- These and other advantages, aspects and features of the present disclosure, as well as details of illustrated implementation(s) thereof, will be more fully understood from the following description and drawings.
- In accordance with an example embodiment of the disclosure, a method is provided for using a scatter gather information retrieval system for live recommendation generation. The method may include retrieving user information classified in a plurality of categories. For at least one of the plurality of categories, a document recommendation query may be generated based on the user information classified in a corresponding one of the plurality of categories. For each generated recommendation query, a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents. The corpus may classify a plurality of documents of a determined type available for consumption by the user. The retrieved plurality of documents may be ranked to generate a final list of recommendations for the user.
- In accordance with another example embodiment of the disclosure, a system for providing recommendations to a user may include a network device with at least one processor coupled to a memory. The at least one processor may be operable to retrieve user information classified in a plurality of categories. For at least one of the plurality of categories, a document recommendation query may be generated based on the user information classified in a corresponding one of the plurality of categories. For each generated recommendation query, a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents. The corpus may classify a plurality of documents of a determined type available for consumption by the user. The retrieved plurality of documents may be ranked to generate a final list of recommendations for the user.
- In accordance with yet another example embodiment of the disclosure, a method for providing recommendations to a user may include retrieving user information classified in a plurality of categories, and information related to recent content consumed by the user. At least one document recommendation query may be generated based on the retrieved user information. For each of the at least one document recommendation query, a plurality of documents satisfying the recommendation query may be retrieved from a corpus (or corpora) of documents. The corpus may classify a plurality of documents of a determined type available for consumption by the user. Each retrieved plurality of documents may be ranked based on the recent content consumed by the user, to generate a final list of recommendations for the user.
-
FIG. 1 is a block diagram illustrating an example architecture for generating live recommendations using a “scatter gather” information retrieval system, in accordance with an example embodiment of the disclosure. -
FIG. 2 is a block diagram illustrating an example database with user-related information, which may be used during the live recommendation generation illustrated inFIG. 1 , in accordance with an example embodiment of the disclosure. -
FIG. 3 is a block diagram illustrating a backend server architecture, which may be used during the live recommendation generation illustrated inFIG. 1 , in accordance with an example embodiment of the disclosure. -
FIG. 4 is a flow chart illustrating example steps of a method for providing recommendations to a user, in accordance with an example embodiment of the disclosure. -
FIG. 5 is a flow chart illustrating example steps of another method for providing recommendations to a user, in accordance with an example embodiment of the disclosure. -
FIG. 6 is a flow chart illustrating example steps of a method for providing recommendations to a user based on recent user behavior, in accordance with an example embodiment of the disclosure. - As utilized herein the terms “circuits” and “circuitry” refer to physical electronic components (i.e. hardware) and any software and/or firmware (“code”) which may configure the hardware, be executed by the hardware, and or otherwise be associated with the hardware. As utilized herein, “and/or” means any one or more of the items in the list joined by “and/or”. As an example, “x and/or y” means any element of the three-element set {(x), (y), (x, y)}. As another example, “x, y, and/or z” means any element of the seven-element set {(x), (y), (z), (x, y), (x, z), (y, z), (x, y, z)}. As utilized herein, the term “e.g.,” introduces a list of one or more non-limiting examples, instances, or illustrations. As utilized herein, the term “processor” may be used to refer to one or more of a central processing unit, a processor of a symmetric or asymmetric multiprocessor system, a digital signal processor, a micro-controller, a graphics/video processor, or another type of processor.
- The present disclosure relates to a method and system for using a “scatter gather” information retrieval system for live recommendation generation. Conventional recommendation engines categorize the users into different categories and then suggest recommendations based on these categories. Additionally, conventional recommendation systems store the generated (or “processed”) user recommendations periodically for subsequent use.
- In accordance with an example embodiment of the disclosure, a search engine architecture may be used to provide real time recommendations across different content verticals with low latencies. The real time recommendations may be provided by storing multiple kinds of documents in the index and serving corpus of the search engine (e.g., documents that are about users as well as documents that are about items and their relations to different properties, such as which other items they are popular with, related to, as well as which regions or age groups they are popular in). The retrieval and ranking of the recommendations may then be separated into two phases, and only searching portions of the corpus (e.g., the various corpora or content verticals) that need to be searched.
- More specifically, during a first phase, information about the user may be gathered. During a second phase, a “scatter gather” system may be used to retrieve a plurality of documents (e.g., apps, books, songs, movies, etc.) that the user can potentially be interested in, and then rank these retrieved items to generate recommendations for presenting to the user. A “scatter gather” system may include a single server (or a “root”), which may be operable to generate and communicate at least one document recommendation request or query to a plurality of other backend servers (or “leaves”) associated with a corpora (e.g., corpus 1, . . . , corpus N) of documents. For example, each corpus (1, . . . , N) may be associated with one or more of the “leaves”. Additionally, each of the “leaves” may be operable to retrieve and score/rank documents in response to the request or query received from the “root”. After the scoring/ranking of retrieved documents, the top documents from each “leave” may be returned to the “root”. The “root” may then gather, merge, and sort the documents from all of the “leaves” and return a final list of top results to the user. In this way, by using a “scatter gather” system, storing of “processed” user recommendations, which is typical of the conventional recommendation engines, may be avoided and all recommendation processing and presentation to the user may be achieved in real time.
-
FIG. 1 is a block diagram illustrating an example architecture for generating live recommendations using a “scatter gather” information retrieval system, in accordance with an example embodiment of the disclosure. Referring toFIG. 1 , thearchitecture 100 may comprise afrontend server 104, arecommendation engine 106, auser information database 114, and a plurality ofbackend servers 108 a, . . . , 112 a. - The
frontend server 104 may comprise suitable circuitry, logic and/or code and may be operable to provide a media consumption environment to theuser 102. For example, thefrontend server 104 may provide online media store functionalities (e.g., sale of songs, apps, books, movies, etc.), personal media locker services (cloud-based media storage) and other media-related functions. - The
recommendation engine 106 may comprise memory/storage 116,CPU 118, as well as other suitable circuitry, logic and/or code, and may be operable to provide one or more recommendations to thefrontend server 104 for presentation to theuser 102. For example, therecommendation engine 106 may receive (e.g., via wired and/orwireless connection 120 a) user credentials (for user 102) from the frontend server 104 (e.g., after theuser 102 logs in to a media web store or a media search engine maintained by the frontend server 104). Therecommendation engine 106 may then receive user-related information (for user 102) from theuser information database 114 via the wired and/orwireless connection 120 c. Therecommendation engine 106 may then generate one or more document recommendation requests or queries based on the received user-related information. - The generated document recommendation queries may be communicated to the
backend servers 108 a, . . . , 112 n (e.g., via wired and/orwireless connections 120 b), which may search one or more search corpus (e.g., corpus 1, . . . , N) and return a plurality of documents matching the document recommendation queries. Each backend server (“leaf”) does a local scoring/ranking of retrieved documents and returns the top results to the recommendation engine (“root”) 106. In some instances, each of the root servers within therecommendation engine 106 may retrieve and score/rank documents in response to the document recommendation queries received from thebackend servers 108 a . . . 112 n. The recommendation engine may generate a final list of recommendations to be returned to thefrontend server 104 for presentation to theuser 102. - The
backend servers 108 a, . . . , 112 n may comprise suitable circuitry, logic and/or code and may be operable to provide, for example, searching and document retrieval functionalities. In this regard, one or more of thebackend servers 108 a, . . . , 112 n may be associated with a respective corpus (e.g., corpus 1, . . . , N) comprising documents of certain type. For example, corpus 1 may be associated withbackend servers 108 a, . . . , 108 n, and may comprise music-related items (e.g., music tracks, albums, etc.). Corpus 2 may be associated withbackend servers 110 a, . . . , 110 n and may comprise applications (or apps) related documents. Corpus N may be associated withbackend servers 112 a, . . . , 112 n and may comprise books related documents. - Even though the
recommendation engine 106 is illustrated separate from thefrontend server 104 and thebackend servers 108 a, . . . 112 n, the present disclosure may not be limited in this regard. More specifically, therecommendation engine 106 may be implemented as part of thefrontend server 104 or one of the backend servers 108, . . . , 112. - In operation, the
user 102 may provide user credentials (e.g., login information, password, etc.) to thefrontend server 104 for logging in to a media-related service provided by thefrontend server 104. Thefrontend server 104 may communicate theuser 102 credentials to therecommendation engine 106 viacommunication path 120 a. Therecommendation engine 106 may then use the received user credentials (i.e., user identity information) as a first pass query to the user information database 114 (via thecommunication path 120 c). In response to the query, thedatabase 114 may return user-related information back to the recommendation engine 106 (e.g., information about user's friends, user's content consumptions, any information about the user thatuser 102 has previously provided to thefrontend server 104, or information that may be inferred from the available user data, user location, etc.). More specific examples of user-related information are provided herein below in reference toFIG. 2 . - In this regard, a “scatter gather” system may be implemented by using the
recommendation engine 106 as the initiating single server (or a “root”), which may be operable to generate and communicate at least one document recommendation request or query to the plurality of backend servers (or “leaves”) 108 a, . . . , 112 n associated with a corpora (e.g., corpus 1, . . . , corpus N) of documents. Therecommendation engine 106 may then generate one or more document recommendation queries based on the received user-related information, and may send the document recommendation queries to thebackend servers 108 a, . . . , 112 n (i.e., a “scatter” step). Thebackend servers 108 a, . . . , 112 n may each perform a search and retrieve candidate content for user recommendations. The retrieved documents may be scored/ranked and a top list of documents may be returned back to therecommendation engine 106, which may use the user-related data to further score and rank the received documents in order to generate a final list of recommendations for the user (i.e., the “gather” step). The final list may be further mixed so that recommendations from multiple document types (e.g., apps, music, videos, books, etc.) are present in the final list of recommendations. Therecommendation engine 106 may then communicate the final list of recommendations to thefrontend server 104 for presentation to theuser 102. The recommendation list generation functionalities described herein may be performed in real time (e.g., upon logging in of theuser 102 into the media-related services provided by the frontend server 104) and may be updated periodically. -
FIG. 2 is a block diagram illustrating an example database with user-related information, which may be used during the live recommendation generation illustrated inFIG. 1 , in accordance with an example embodiment of the disclosure. Referring toFIG. 2 , there is illustrated a more detailed diagram of theuser information database 114. More specifically, the user information database may comprise user identification information 202, information on user's viewing history 204, information on user's purchase history 206 (e.g., purchase of apps, music, videos, movies, books, etc.), and information on user's listening history 208 (e.g., listening history of music stored in user's cloud-based media locker). - The
user information database 114 may also comprise user preferences information 210 (e.g., information provided by the user regarding preferred media genre, preferred media type, preferred artists/authors, etc.), user demographic data 212, and user location information 218. Theuser information database 114 may also comprise user social profile information 214 (e.g., information on user's friends in a social network) and 216 (e.g., information on the user's friends' viewing/purchase history). - The
user information database 114 may further include user search history 220, user category/genre preferences 222, user reading history 224, user application usage history 226, and realtime feedback information 228. The realtime feedback information 228 may comprise recommendation dismissals, recommendation conversions (clicking on a recommendation or buying/installing the recommendation), recommendation approval information (+1, Like, etc.), and recommendation saving (e.g., via a wishlist feature). - Even though only fourteen types of information are illustrated in
FIG. 2 , the present disclosure may not be limited in this regard and other types of user-related information may also be provided by thedatabase 114. - Referring to
FIGS. 1-2 , after therecommendation engine 106 receives user-related information from thedatabase 114, it may then generate one or more document recommendation queries based on the received user-related information, and may send the document recommendation queries to thebackend servers 108 a, . . . , 112 n. For example, if the user-related information comprises user viewing history 204 and/or purchase history 206 and/or listening history 208, the document recommendation queries may comprise document similar to what was viewed and/or purchased and/or listened to by the user. If the user-related information comprises user demographic data 212 and/or user location data 218, the document recommendation queries may comprise document popular to the user demographic (e.g., documents popular by other users that are same age as the user 102) and/or documents popular in the specific geographic location of the user. -
FIG. 3 is a block diagram illustrating a backend server architecture, which may be used during the live recommendation generation illustrated inFIG. 1 , in accordance with an example embodiment of the disclosure. Referring toFIG. 3 , the examplebackend server architecture 300 may comprise asearch engine 302 and a document database (or corpus) 304. - The
document database 304 may comprise suitable circuitry, logic and/or code and may be operable to provide documents of a specific type (e.g., song tracks, videos, books, movies, apps, etc.). - The
search engine 302 may comprise suitable circuitry, logic and/or code and may be operable to receive database documents (e.g.,documents 312, D1, . . . , Dn) in response torecommendation query 310 from therecommendation engine 106, and rank the receiveddocuments 312 based on the documentfinal scores 314, . . . , 316. Thesearch engine 302 may comprise aCPU 303, amemory 305, a queryindependent score module 306, and asearch engine ranker 308. - The query
independent score module 306 may comprise suitable circuitry, logic and/or code and may be operable to calculate a query-independent score (e.g., a popularity score) 307 for one or more documents received from thedatabase 304. For example, the query-independent score may comprise a popularity score based on the number of search queries previously received within thebackend server architecture 300 about a specific document from thedatabase 304, as well as at least one of query-to-click ratio information and clickthrough ratio (CTR) information for at least one web page search result for the specific document. - The
search engine ranker 308 may comprise suitable circuitry, logic and/or code and may be operable to receive one or more documents 312 (e.g., documents D1, . . . , Dn) in response to adocument recommendation query 310. Thesearch engine ranker 308 may then rank the receiveddocuments 312 based on afinal ranking score 314, . . . , 316 calculated for each document using one or more query independent scores 307 (received from the query independent score module 306) and/or one or more query dependent scores. The search engine ranker may generate thefinal ranking score 314, . . . , 316 for each document based on the query-dependent and/or query-independent scores. - In operation, the
recommendation engine 106 may communicate adocument recommendation query 310 to thesearch engine 302. Thedocument recommendation query 310 may be based on the user-related information received by therecommendation engine 106 from thedatabase 114. After thesearch engine 302 receives therecommendation query 310, thesearch engine 302 may obtain one or more documents 312 (D1, . . . , Dn) that satisfy therecommendation query 310. - After the
search engine 302 receives thedocuments 312, a query-independent score 307 may be calculated for each of the documents, and the score may be used by theranker 308 to calculate the final ranking scores 314, . . . , 316 for the documents and output a ranked document search results list back to therecommendation engine 106. - Even though the
search engine 302 and thedatabase 304 are all illustrated as separate blocks, the present disclosure may not be limited in this regard. More specifically, thedatabase 304 may be part of, and implemented within, thesearch engine 302 with all processing functionalities being controlled by theCPU 303. TheCPU 303 may be operable to perform one or more of the processing functionalities associated with retrieving and/or ranking of documents, as disclosed herein. - In accordance with an example embodiment of the disclosure, all ranking/scoring functionalities for documents retrieved in response to the
document recommendation query 310 may be performed by therecommendation engine 106. In this regard, the backend server architecture 300 (which is representative of one or more of thebackend servers 108 a, . . . , 112 n) may perform the document retrieval functionalities, and ranking/scoring functionalities may be performed after the retrieved documents are communicated back to therecommendation engine 106. -
FIG. 4 is a flow chart illustrating example steps of a method for providing recommendations to a user, in accordance with an example embodiment of the disclosure. Referring toFIGS. 1-4 , theexample method 400 may start at 402, when a Step 1 Retrieval may be performed (e.g., by the recommendation engine 106) by gathering user-related information (e.g., from the database 114). At 404, Step 2 Retrieval may be performed by retrieving candidate content for the user based on the retrieved Step 1 user-related information (e.g., content retrieved by thebackend servers 108 a, . . . , 112 n). At 406, after the retrieved content is communicated back to therecommendation engine 106, the retrieved content may be scored and ranked. At 408, the recommendation engine may generate explanations for the ranked content (e.g., what user information was used to generate the query, which document query was used, etc.). At 410, therecommendation engine 106 may mix the ranked results for diversity and may communicate the final document recommendations list to thefrontend server 104 for display. -
FIG. 5 is a flow chart illustrating example steps of another method for providing recommendations to a user, in accordance with an example embodiment of the disclosure. Referring toFIGS. 1-3 and 5, theexample method 500 may start at 502, when user information classified in a plurality of categories (e.g., 202, . . . , 218) may be retrieved from the database 114 (e.g., by the recommendation engine 106). At 504, therecommendation engine 106 may generate, for at least one of the plurality of categories, a document recommendation query based on the user information classified in a corresponding one of the plurality of categories. - At 506, the
backend servers 108 a, . . . , 112 n may retrieve, for each generated recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents (e.g., one or more of corpus 1, . . . , N). The corpus (e.g., one or more of corpus 1, . . . , N) may classify a plurality of documents of a determined type available for consumption by the user (e.g., each corpus 1, . . . , N may be associated with a given type of documents, such as music, apps, books, videos, movies, etc.). At 508, therecommendation engine 106 may rank, for each of the generated recommendation query, the retrieved plurality of documents based on at least one predetermined ranking criteria. The ranking may be based on the user information classified in the plurality of categories. At 510, the recommendation engine may generate the final list of recommendations for the user by selecting, for each of the generated recommendation query, a predetermined number of documents from the ranked plurality of documents. The final list of recommendations may then be communicated to thefrontend server 102 for presentation to theuser 102. - In accordance with an example embodiment of the disclosure and in reference to the
architecture 100 inFIG. 1 , therecommendation engine 106 may user hyper-recent user behavior (i.e., content consumed in the recent past) to give higher weight to the content (e.g., documents retrieved by thebackend servers 108 a, . . . , 112 n) similar to the recent content that was consumed by the user. In this regard, the personalization of the final recommendation list provided to theuser 102 may be further improved by selecting a higher weight to retrieved content that is similar to recently consumed content. - In some instances, in addition to (or in lieu of) information on recent user consumption history, the
recommendation engine 106 may also use information on how the user reached the current content to provide the recommendations. For example, relevant information may include what did the user watch/listen before the recent content, or what queries did the user use to reach the recent content. This information may be used to determine the current user intent and to rank the content received from thebackend servers 108 a, . . . , 112 n. -
FIG. 6 is a flow chart illustrating example steps of a method for providing recommendations to a user based on recent user behavior, in accordance with an example embodiment of the disclosure. Referring toFIGS. 1-3 and 6, theexample method 600 may start at 602, when user information classified in a plurality of categories (e.g., 202, . . . , 218) may be retrieved from thedatabase 114. At 604, information related to recent content consumed by theuser 102 may be retrieved from thedatabase 114. - At 606, at least one document recommendation query may be generated by the
recommendation engine 106 based on the retrieved user information. At 608, thebackend servers 108 a, . . . , 112 n may retrieve, for each of the at least one document recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents (e.g., one or more of corpus 1, . . . , N). The corpus (e.g., one or more of corpus 1, . . . , N) may classify a plurality of documents of a determined type available for consumption by the user (e.g., each corpus 1, . . . , N may be associated with a given type of documents, such as music, apps, books, videos, movies, etc.). At 610, each retrieved plurality of documents may be ranked (e.g., by the recommendation engine 106) based on the recent content consumed by the user, to generate a final list of recommendations for theuser 102. - Other implementations may provide a machine-readable storage device, having stored thereon, a machine code and/or a computer program having at least one code section executable by a machine and/or a computer, thereby causing the machine and/or computer to perform the steps as described herein for providing recommendations to a user.
- Accordingly, the present method and/or system may be realized in hardware, software, or a combination of hardware and software. The present method and/or system may be realized in a centralized fashion in at least one computer system, or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other system adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general-purpose computer system with a computer program that, when being loaded and executed, controls the computer system such that it carries out the methods described herein.
- The present method and/or system may also be embedded in a computer program product, which comprises all the features enabling the implementation of the methods described herein, and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: a) conversion to another language, code or notation; b) reproduction in a different material form.
- While the present method and/or apparatus has been described with reference to certain implementations, it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the present method and/or apparatus. In addition, many modifications may be made to adapt a particular situation or material to the teachings of the present disclosure without departing from its scope. Therefore, it is intended that the present method and/or apparatus not be limited to the particular implementations disclosed, but that the present method and/or apparatus will include all implementations falling within the scope of the appended claims.
Claims (20)
1. A method for providing recommendations to a user, comprising:
retrieving user information classified in a plurality of categories;
generating, for at least one the plurality of categories, a document recommendation query based on the user information classified in a corresponding one of the plurality of categories;
retrieving, for each generated recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents, wherein the corpus classifies a plurality of documents of a determined type available for consumption by the user; and
ranking each retrieved plurality of documents to generate a final list of recommendations for the user, wherein the ranking is based on the user information classified in the plurality of categories.
2. The method according to claim 1 , wherein the plurality of categories comprise two or more of:
user identification information comprising user name and age;
user location and demographic;
previous user purchases of documents available for user consumption;
user viewing history;
user media consumption history;
user interests; and
user's friends.
3. The method according to claim 1 , wherein each of the plurality of documents comprises identifying information for at least one of a book, a song, a video, a movie, a music album, an application (app), and a TV show.
4. The method according to claim 1 , comprising:
ranking, for each of the generated recommendation query, the retrieved plurality of documents based on at least one predetermined ranking criteria.
5. The method according to claim 4 , comprising:
generating the final list of recommendations for the user by selecting, for each of the generated recommendation query, a predetermined number of documents from the ranked plurality of documents.
6. The method according to claim 1 , wherein, if the user information comprises the user's current location, then the document recommendation query comprises a query for at least one document popular at the user's current location.
7. The method according to claim 1 , wherein, if the user information comprises identifying information about the user's friends, then the document recommendation query comprises a query for at least one document similar to:
a document recently purchased by at least one of the user's friends;
a document recommended by at least one of the user's friends; or
a document viewed by at least one of the user's friends.
8. The method according to claim 1 , comprising:
for each recommendation in the final list of recommendations:
displaying the recommendation and an explanation for the recommendation, wherein the explanation is associated with a document recommendation query used for retrieving the recommendation.
9. A system for providing recommendations to a user, comprising:
a network device comprising at least one processor coupled to a memory, the at least one processor operable to:
retrieve user information classified in a plurality of categories;
generate, for at least one of the plurality of categories, a document recommendation query based on the user information classified in a corresponding one of the plurality of categories;
retrieve, for each generated recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents, wherein the corpus classifies a plurality of documents of a determined type available for consumption by the user; and
rank each retrieved plurality of documents to generate a final list of recommendations for the user, wherein the ranking is based on the user information classified in the plurality of categories.
10. The system according to claim 1 , wherein the plurality of categories comprise two or more of:
user identification information comprising user name and age;
user location and demographic;
previous user purchases of documents available for user consumption;
user viewing history;
user media consumption history;
user interests; and
user's friends.
11. The system according to claim 1 , wherein each of the plurality of documents comprises identifying information for at least one of a book, a song, a video, a movie, a music album, an application (app), and a TV show.
12. The system according to claim 1 , wherein the at least one processor is operable to:
rank, for each of the generated recommendation query, the retrieved plurality of documents based on at least one predetermined ranking criteria.
13. The system according to claim 4 , wherein the at least one processor is operable to:
generate the final list of recommendations for the user by selecting, for each of the generated recommendation query, a predetermined number of documents from the ranked plurality of documents.
14. The system according to claim 1 , wherein, if the user information comprises the user's current location, then the document recommendation query comprises a query for at least one document popular at the user's current location.
15. The system according to claim 1 , wherein, if the user information comprises identifying information about the user's friends, then the document recommendation query comprises a query for at least one document similar to:
a document recently purchased by at least one of the user's friends;
a document recommended by at least one of the user's friends; or
a document viewed by at least one of the user's friends.
16. The system according to claim 1 , wherein the at least one processor is operable to:
for each recommendation in the final list of recommendations:
display the recommendation and an explanation for the recommendation, wherein the explanation is associated with a document recommendation query used for retrieving the recommendation.
17. A method for providing recommendations to a user, comprising:
retrieving user information classified in a plurality of categories;
retrieving information related to recent content consumed by the user;
generating at least one document recommendation query based on the retrieved user information;
retrieving, for each of the at least one document recommendation query, a plurality of documents satisfying the recommendation query, from a corpus of documents, wherein the corpus classifies a plurality of documents of a determined type available for consumption by the user; and
ranking each retrieved plurality of documents based on the recent content consumed by the user, to generate a final list of recommendations for the user, wherein the ranking is based on the user information classified in the plurality of categories.
18. The method according to claim 17 , comprising:
assigning a weight to each of the retrieved plurality of documents based on similarity to the recent content consumed by the user.
19. The method according to claim 18 , wherein each of the retrieved plurality of documents is ranked based on the assigned weight.
20. The method according to claim 17 , comprising:
for each recommendation in the final list of recommendations:
displaying the recommendation and an explanation for the recommendation, wherein the explanation is associated with a document recommendation query used for retrieving the recommendation.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/868,341 US20140317105A1 (en) | 2013-04-23 | 2013-04-23 | Live recommendation generation |
PCT/US2014/034871 WO2014176192A2 (en) | 2013-04-23 | 2014-04-22 | Live recommendation generation |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/868,341 US20140317105A1 (en) | 2013-04-23 | 2013-04-23 | Live recommendation generation |
Publications (1)
Publication Number | Publication Date |
---|---|
US20140317105A1 true US20140317105A1 (en) | 2014-10-23 |
Family
ID=50884493
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/868,341 Abandoned US20140317105A1 (en) | 2013-04-23 | 2013-04-23 | Live recommendation generation |
Country Status (2)
Country | Link |
---|---|
US (1) | US20140317105A1 (en) |
WO (1) | WO2014176192A2 (en) |
Cited By (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150120715A1 (en) * | 2013-10-30 | 2015-04-30 | Fuji Xerox Co., Ltd. | Non-transitory computer readable medium, document recommending apparatus, and document recommending method |
CN105488233A (en) * | 2016-01-25 | 2016-04-13 | 广东顺德中山大学卡内基梅隆大学国际联合研究院 | Reading information recommendation method and system |
CN108829470A (en) * | 2017-05-05 | 2018-11-16 | 微软技术许可有限责任公司 | For increasing the dedicated user interface and process that interact with position bulletin/preferably position user in social networks |
WO2019090741A1 (en) * | 2017-11-10 | 2019-05-16 | 深圳市华阅文化传媒有限公司 | Method and apparatus for recommending books for user to read |
US10387513B2 (en) | 2015-08-28 | 2019-08-20 | Yandex Europe Ag | Method and apparatus for generating a recommended content list |
US10387115B2 (en) * | 2015-09-28 | 2019-08-20 | Yandex Europe Ag | Method and apparatus for generating a recommended set of items |
US10394420B2 (en) | 2016-05-12 | 2019-08-27 | Yandex Europe Ag | Computer-implemented method of generating a content recommendation interface |
US10430481B2 (en) | 2016-07-07 | 2019-10-01 | Yandex Europe Ag | Method and apparatus for generating a content recommendation in a recommendation system |
US10452731B2 (en) | 2015-09-28 | 2019-10-22 | Yandex Europe Ag | Method and apparatus for generating a recommended set of items for a user |
US10467261B1 (en) * | 2017-04-27 | 2019-11-05 | Intuit Inc. | Methods, systems, and computer program product for implementing real-time classification and recommendations |
US10467122B1 (en) | 2017-04-27 | 2019-11-05 | Intuit Inc. | Methods, systems, and computer program product for capturing and classification of real-time data and performing post-classification tasks |
US10528329B1 (en) | 2017-04-27 | 2020-01-07 | Intuit Inc. | Methods, systems, and computer program product for automatic generation of software application code |
USD882600S1 (en) | 2017-01-13 | 2020-04-28 | Yandex Europe Ag | Display screen with graphical user interface |
US10674215B2 (en) | 2018-09-14 | 2020-06-02 | Yandex Europe Ag | Method and system for determining a relevancy parameter for content item |
US10705796B1 (en) | 2017-04-27 | 2020-07-07 | Intuit Inc. | Methods, systems, and computer program product for implementing real-time or near real-time classification of digital data |
US10706325B2 (en) | 2016-07-07 | 2020-07-07 | Yandex Europe Ag | Method and apparatus for selecting a network resource as a source of content for a recommendation system |
US11086888B2 (en) | 2018-10-09 | 2021-08-10 | Yandex Europe Ag | Method and system for generating digital content recommendation |
US11263217B2 (en) | 2018-09-14 | 2022-03-01 | Yandex Europe Ag | Method of and system for determining user-specific proportions of content for recommendation |
US11276079B2 (en) | 2019-09-09 | 2022-03-15 | Yandex Europe Ag | Method and system for meeting service level of content item promotion |
US11276076B2 (en) | 2018-09-14 | 2022-03-15 | Yandex Europe Ag | Method and system for generating a digital content recommendation |
US11288333B2 (en) | 2018-10-08 | 2022-03-29 | Yandex Europe Ag | Method and system for estimating user-item interaction data based on stored interaction data by using multiple models |
US11509721B2 (en) | 2021-01-31 | 2022-11-22 | Salesforce.Com, Inc. | Cookie-based network location of storage nodes in cloud |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN105872762A (en) * | 2015-12-09 | 2016-08-17 | 乐视致新电子科技（天津）有限公司 | Method and device for installing smart cloud TV application |
Citations (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040133571A1 (en) * | 2002-12-20 | 2004-07-08 | Martin Horne | Adaptive item search and user ranking system and method |
US20070186243A1 (en) * | 2006-02-08 | 2007-08-09 | Sbc Knowledge Ventures, Lp | System and method of providing television program recommendations |
US7424486B2 (en) * | 1999-12-10 | 2008-09-09 | A9.Com, Inc. | Selection of search phrases to suggest to users in view of actions performed by prior users |
US7424469B2 (en) * | 2004-01-07 | 2008-09-09 | Microsoft Corporation | System and method for blending the results of a classifier and a search engine |
US20090077052A1 (en) * | 2006-06-21 | 2009-03-19 | Concert Technology Corporation | Historical media recommendation service |
US7657523B2 (en) * | 2006-03-09 | 2010-02-02 | Customerforce.Com | Ranking search results presented to on-line users as a function of perspectives of relationships trusted by the users |
US20100153357A1 (en) * | 2003-06-27 | 2010-06-17 | At&T Intellectual Property I, L.P. | Rank-based estimate of relevance values |
US8050998B2 (en) * | 2007-04-26 | 2011-11-01 | Ebay Inc. | Flexible asset and search recommendation engines |
US8060525B2 (en) * | 2007-12-21 | 2011-11-15 | Napo Enterprises, Llc | Method and system for generating media recommendations in a distributed environment based on tagging play history information with location information |
US20110282821A1 (en) * | 2009-04-20 | 2011-11-17 | 4-Tell, Inc | Further Improvements in Recommendation Systems |
US8095432B1 (en) * | 2009-01-30 | 2012-01-10 | Intuit Inc. | Recommendation engine for social networks |
US8112720B2 (en) * | 2007-04-05 | 2012-02-07 | Napo Enterprises, Llc | System and method for automatically and graphically associating programmatically-generated media item recommendations related to a user's socially recommended media items |
US20120036523A1 (en) * | 2009-01-01 | 2012-02-09 | Orca Interactive Ltd. | Adaptive Blending of Recommendation Engines |
US8117216B1 (en) * | 2008-08-26 | 2012-02-14 | Amazon Technologies, Inc. | Automated selection of item categories for presenting item recommendations |
US8170971B1 (en) * | 2011-09-28 | 2012-05-01 | Ava, Inc. | Systems and methods for providing recommendations based on collaborative and/or content-based nodal interrelationships |
US8180768B2 (en) * | 2009-08-13 | 2012-05-15 | Politecnico Di Milano | Method for extracting, merging and ranking search engine results |
US20120166432A1 (en) * | 2010-12-22 | 2012-06-28 | Erick Tseng | Providing Context Relevant Search for a User Based on Location and Social Information |
US8285595B2 (en) * | 2006-03-29 | 2012-10-09 | Napo Enterprises, Llc | System and method for refining media recommendations |
US8429691B2 (en) * | 2008-10-02 | 2013-04-23 | Microsoft Corporation | Computational recommendation engine |
US20130218803A1 (en) * | 2012-02-18 | 2013-08-22 | CoolHotNot Corporation | Consolidated Ranked Lists Based on Lists of Individual Contributors |
US8577753B1 (en) * | 2008-10-22 | 2013-11-05 | Amazon Technologies, Inc. | Community-based shopping profiles |
US8712868B2 (en) * | 2002-10-21 | 2014-04-29 | Ebay Inc. | Listing recommendation using generation of a user-specific query in a network-based commerce system |
US20140136554A1 (en) * | 2012-11-14 | 2014-05-15 | National Public Radio, Inc. | System and method for recommending timely digital content |
US8732101B1 (en) * | 2013-03-15 | 2014-05-20 | Nara Logics, Inc. | Apparatus and method for providing harmonized recommendations based on an integrated user profile |
US20140215506A1 (en) * | 2013-01-25 | 2014-07-31 | Mobitv, Inc. | Time context weighted content recommendation |
US20140223480A1 (en) * | 2012-02-02 | 2014-08-07 | Digitalsmiths, Inc. | Ranking User Search and Recommendation Results for Multimedia Assets Using Metadata Analysis |
US20140280214A1 (en) * | 2013-03-15 | 2014-09-18 | Yahoo! Inc. | Method and system for multi-phase ranking for content personalization |
US8856833B2 (en) * | 2007-11-21 | 2014-10-07 | United Video Properties, Inc. | Maintaining a user profile based on dynamic data |
US20150169585A1 (en) * | 2012-07-06 | 2015-06-18 | Funke Digital Tv Guide Gmbh | Device and method for automatic filter adjustment |
US9224427B2 (en) * | 2007-04-02 | 2015-12-29 | Napo Enterprises LLC | Rating media item recommendations using recommendation paths and/or media item usage |
-
2013
- 2013-04-23 US US13/868,341 patent/US20140317105A1/en not_active Abandoned
-
2014
- 2014-04-22 WO PCT/US2014/034871 patent/WO2014176192A2/en active Application Filing
Patent Citations (31)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7424486B2 (en) * | 1999-12-10 | 2008-09-09 | A9.Com, Inc. | Selection of search phrases to suggest to users in view of actions performed by prior users |
US8712868B2 (en) * | 2002-10-21 | 2014-04-29 | Ebay Inc. | Listing recommendation using generation of a user-specific query in a network-based commerce system |
US20040133571A1 (en) * | 2002-12-20 | 2004-07-08 | Martin Horne | Adaptive item search and user ranking system and method |
US20100153357A1 (en) * | 2003-06-27 | 2010-06-17 | At&T Intellectual Property I, L.P. | Rank-based estimate of relevance values |
US7424469B2 (en) * | 2004-01-07 | 2008-09-09 | Microsoft Corporation | System and method for blending the results of a classifier and a search engine |
US20070186243A1 (en) * | 2006-02-08 | 2007-08-09 | Sbc Knowledge Ventures, Lp | System and method of providing television program recommendations |
US7657523B2 (en) * | 2006-03-09 | 2010-02-02 | Customerforce.Com | Ranking search results presented to on-line users as a function of perspectives of relationships trusted by the users |
US8285595B2 (en) * | 2006-03-29 | 2012-10-09 | Napo Enterprises, Llc | System and method for refining media recommendations |
US20090077052A1 (en) * | 2006-06-21 | 2009-03-19 | Concert Technology Corporation | Historical media recommendation service |
US9224427B2 (en) * | 2007-04-02 | 2015-12-29 | Napo Enterprises LLC | Rating media item recommendations using recommendation paths and/or media item usage |
US8112720B2 (en) * | 2007-04-05 | 2012-02-07 | Napo Enterprises, Llc | System and method for automatically and graphically associating programmatically-generated media item recommendations related to a user's socially recommended media items |
US8050998B2 (en) * | 2007-04-26 | 2011-11-01 | Ebay Inc. | Flexible asset and search recommendation engines |
US8856833B2 (en) * | 2007-11-21 | 2014-10-07 | United Video Properties, Inc. | Maintaining a user profile based on dynamic data |
US8060525B2 (en) * | 2007-12-21 | 2011-11-15 | Napo Enterprises, Llc | Method and system for generating media recommendations in a distributed environment based on tagging play history information with location information |
US8117216B1 (en) * | 2008-08-26 | 2012-02-14 | Amazon Technologies, Inc. | Automated selection of item categories for presenting item recommendations |
US8429691B2 (en) * | 2008-10-02 | 2013-04-23 | Microsoft Corporation | Computational recommendation engine |
US8577753B1 (en) * | 2008-10-22 | 2013-11-05 | Amazon Technologies, Inc. | Community-based shopping profiles |
US20120036523A1 (en) * | 2009-01-01 | 2012-02-09 | Orca Interactive Ltd. | Adaptive Blending of Recommendation Engines |
US8095432B1 (en) * | 2009-01-30 | 2012-01-10 | Intuit Inc. | Recommendation engine for social networks |
US20110282821A1 (en) * | 2009-04-20 | 2011-11-17 | 4-Tell, Inc | Further Improvements in Recommendation Systems |
US8180768B2 (en) * | 2009-08-13 | 2012-05-15 | Politecnico Di Milano | Method for extracting, merging and ranking search engine results |
US20120166432A1 (en) * | 2010-12-22 | 2012-06-28 | Erick Tseng | Providing Context Relevant Search for a User Based on Location and Social Information |
US20130080364A1 (en) * | 2011-09-28 | 2013-03-28 | Ava, Inc. | Systems and methods for providing recommendations based on collaborative and/or content-based nodal interrelationships |
US8170971B1 (en) * | 2011-09-28 | 2012-05-01 | Ava, Inc. | Systems and methods for providing recommendations based on collaborative and/or content-based nodal interrelationships |
US20140223480A1 (en) * | 2012-02-02 | 2014-08-07 | Digitalsmiths, Inc. | Ranking User Search and Recommendation Results for Multimedia Assets Using Metadata Analysis |
US20130218803A1 (en) * | 2012-02-18 | 2013-08-22 | CoolHotNot Corporation | Consolidated Ranked Lists Based on Lists of Individual Contributors |
US20150169585A1 (en) * | 2012-07-06 | 2015-06-18 | Funke Digital Tv Guide Gmbh | Device and method for automatic filter adjustment |
US20140136554A1 (en) * | 2012-11-14 | 2014-05-15 | National Public Radio, Inc. | System and method for recommending timely digital content |
US20140215506A1 (en) * | 2013-01-25 | 2014-07-31 | Mobitv, Inc. | Time context weighted content recommendation |
US20140280214A1 (en) * | 2013-03-15 | 2014-09-18 | Yahoo! Inc. | Method and system for multi-phase ranking for content personalization |
US8732101B1 (en) * | 2013-03-15 | 2014-05-20 | Nara Logics, Inc. | Apparatus and method for providing harmonized recommendations based on an integrated user profile |
Cited By (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150120715A1 (en) * | 2013-10-30 | 2015-04-30 | Fuji Xerox Co., Ltd. | Non-transitory computer readable medium, document recommending apparatus, and document recommending method |
US10387513B2 (en) | 2015-08-28 | 2019-08-20 | Yandex Europe Ag | Method and apparatus for generating a recommended content list |
US10452731B2 (en) | 2015-09-28 | 2019-10-22 | Yandex Europe Ag | Method and apparatus for generating a recommended set of items for a user |
US10387115B2 (en) * | 2015-09-28 | 2019-08-20 | Yandex Europe Ag | Method and apparatus for generating a recommended set of items |
CN105488233A (en) * | 2016-01-25 | 2016-04-13 | 广东顺德中山大学卡内基梅隆大学国际联合研究院 | Reading information recommendation method and system |
US10394420B2 (en) | 2016-05-12 | 2019-08-27 | Yandex Europe Ag | Computer-implemented method of generating a content recommendation interface |
US10706325B2 (en) | 2016-07-07 | 2020-07-07 | Yandex Europe Ag | Method and apparatus for selecting a network resource as a source of content for a recommendation system |
US10430481B2 (en) | 2016-07-07 | 2019-10-01 | Yandex Europe Ag | Method and apparatus for generating a content recommendation in a recommendation system |
USD892846S1 (en) | 2017-01-13 | 2020-08-11 | Yandex Europe Ag | Display screen with graphical user interface |
USD892847S1 (en) | 2017-01-13 | 2020-08-11 | Yandex Europe Ag | Display screen with graphical user interface |
USD890802S1 (en) | 2017-01-13 | 2020-07-21 | Yandex Europe Ag | Display screen with graphical user interface |
USD980246S1 (en) | 2017-01-13 | 2023-03-07 | Yandex Europe Ag | Display screen with graphical user interface |
USD882600S1 (en) | 2017-01-13 | 2020-04-28 | Yandex Europe Ag | Display screen with graphical user interface |
US10705796B1 (en) | 2017-04-27 | 2020-07-07 | Intuit Inc. | Methods, systems, and computer program product for implementing real-time or near real-time classification of digital data |
US10528329B1 (en) | 2017-04-27 | 2020-01-07 | Intuit Inc. | Methods, systems, and computer program product for automatic generation of software application code |
US10467122B1 (en) | 2017-04-27 | 2019-11-05 | Intuit Inc. | Methods, systems, and computer program product for capturing and classification of real-time data and performing post-classification tasks |
US10467261B1 (en) * | 2017-04-27 | 2019-11-05 | Intuit Inc. | Methods, systems, and computer program product for implementing real-time classification and recommendations |
US11086601B2 (en) | 2017-04-27 | 2021-08-10 | Intuit Inc. | Methods, systems, and computer program product for automatic generation of software application code |
US11250033B2 (en) * | 2017-04-27 | 2022-02-15 | Intuit Inc. | Methods, systems, and computer program product for implementing real-time classification and recommendations |
CN108829470A (en) * | 2017-05-05 | 2018-11-16 | 微软技术许可有限责任公司 | For increasing the dedicated user interface and process that interact with position bulletin/preferably position user in social networks |
US11651333B2 (en) * | 2017-05-05 | 2023-05-16 | Microsoft Technology Licensing, Llc | Specialized user interfaces and processes for increasing user interactions with job postings in a social network/top jobs |
WO2019090741A1 (en) * | 2017-11-10 | 2019-05-16 | 深圳市华阅文化传媒有限公司 | Method and apparatus for recommending books for user to read |
US10674215B2 (en) | 2018-09-14 | 2020-06-02 | Yandex Europe Ag | Method and system for determining a relevancy parameter for content item |
US11263217B2 (en) | 2018-09-14 | 2022-03-01 | Yandex Europe Ag | Method of and system for determining user-specific proportions of content for recommendation |
US11276076B2 (en) | 2018-09-14 | 2022-03-15 | Yandex Europe Ag | Method and system for generating a digital content recommendation |
US11288333B2 (en) | 2018-10-08 | 2022-03-29 | Yandex Europe Ag | Method and system for estimating user-item interaction data based on stored interaction data by using multiple models |
US11086888B2 (en) | 2018-10-09 | 2021-08-10 | Yandex Europe Ag | Method and system for generating digital content recommendation |
US11276079B2 (en) | 2019-09-09 | 2022-03-15 | Yandex Europe Ag | Method and system for meeting service level of content item promotion |
US11509721B2 (en) | 2021-01-31 | 2022-11-22 | Salesforce.Com, Inc. | Cookie-based network location of storage nodes in cloud |
Also Published As
Publication number | Publication date |
---|---|
WO2014176192A3 (en) | 2014-12-31 |
WO2014176192A2 (en) | 2014-10-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20140317105A1 (en) | Live recommendation generation | |
US20170161818A1 (en) | Explanations for personalized recommendations | |
US10102307B2 (en) | Method and system for multi-phase ranking for content personalization | |
US11194872B2 (en) | Dynamic inference graph | |
KR101994987B1 (en) | Related entities | |
US9706008B2 (en) | Method and system for efficient matching of user profiles with audience segments | |
US20230281664A1 (en) | Serving advertisements based on partial queries | |
US10726083B2 (en) | Search query transformations | |
US10007705B2 (en) | Display of boosted slashtag results | |
US20150242750A1 (en) | Asymmetric Rankers for Vector-Based Recommendation | |
KR102111082B1 (en) | Contextualizing knowledge panels | |
US20140122465A1 (en) | Ranking Music Search Results | |
US20060294071A1 (en) | Facet extraction and user feedback for ranking improvement and personalization | |
US9547698B2 (en) | Determining media consumption preferences | |
US20080228587A1 (en) | Sponsored listing recommendation engine | |
US9405803B2 (en) | Ranking signals in mixed corpora environments | |
US20130238588A1 (en) | Dynamic Inference Graph | |
WO2013184957A1 (en) | Systems and methods of classifying content items | |
US10789287B2 (en) | Method and system for multi-dimensional image matching with content in response to a search query | |
US20140317099A1 (en) | Personalized digital content search | |
JP2014505945A (en) | Providing search information | |
US9251262B1 (en) | Identifying media queries | |
US20130332462A1 (en) | Generating content recommendations | |
US11341141B2 (en) | Search system using multiple search streams | |
US9779140B2 (en) | Ranking signals for sparse corpora |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JAIN, ANKIT;KHANDELWAL, ABHINAV;REEL/FRAME:032718/0932Effective date: 20130305 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044144/0001Effective date: 20170929 |
US10412383B2 - Compressing groups of video frames using reversed ordering - Google Patents
Compressing groups of video frames using reversed ordering Download PDFInfo
- Publication number
- US10412383B2 US10412383B2 US15/677,305 US201715677305A US10412383B2 US 10412383 B2 US10412383 B2 US 10412383B2 US 201715677305 A US201715677305 A US 201715677305A US 10412383 B2 US10412383 B2 US 10412383B2
- Authority
- US
- United States
- Prior art keywords
- frames
- frame
- group
- order
- display order
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/105—Selection of the reference unit for prediction within a chosen coding or prediction mode, e.g. adaptive choice of position and number of pixels used for prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/114—Adapting the group of pictures [GOP] structure, e.g. number of B-frames between two anchor frames
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/124—Quantisation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/137—Motion inside a coding unit, e.g. average field, frame or block difference
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
- H04N19/159—Prediction type, e.g. intra-frame, inter-frame or bidirectional frame prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/177—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a group of pictures [GOP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/30—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using hierarchical techniques, e.g. scalability
- H04N19/36—Scalability techniques involving formatting the layers as a function of picture distortion after decoding, e.g. signal-to-noise [SNR] scalability
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
- H04N19/517—Processing of motion vectors by encoding
- H04N19/52—Processing of motion vectors by encoding by predictive encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/80—Details of filtering operations specially adapted for video compression, e.g. for pixel interpolation
- H04N19/82—Details of filtering operations specially adapted for video compression, e.g. for pixel interpolation involving filtering within a prediction loop
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/13—Adaptive entropy coding, e.g. adaptive variable length coding [AVLC] or context adaptive binary arithmetic coding [CABAC]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/90—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using coding techniques not provided for in groups H04N19/10-H04N19/85, e.g. fractals
- H04N19/91—Entropy coding, e.g. variable length coding [VLC] or arithmetic coding
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including compression and other encoding techniques.
- This disclosure relates generally to encoding and decoding video data and more particularly relates to compressing groups of video frames using reversed ordering for encoding and decoding the video data.
- a method includes, before a prediction process of an encoder for a group of frames, determining whether to arrange the group of frames in a reversed display order.
- the group of frames is formed of a proper subset of frames of a video sequence having a display order.
- the method also includes, responsive to a determination to arrange the group of frames in the reversed display order, arranging the group of frames in the reversed display order before the prediction process for the group of frames, and performing the prediction process for the group of frames.
- Performing the prediction process can include receiving the group of frames as input to the prediction process in an input order, the input order comprising one of the display order or the reversed display order, arranging the group of frames, received in the input order, in a coding order using a group coding structure that defines at least one backward reference frame for inclusion within a set of candidate reference frames, and predicting the group of frames in the coding order using the set of candidate reference frames.
- a method includes determining, from an encoded bitstream, whether a prediction process of an encoder received a group of frames as input in one of a display order or a reversed display order, and performing a prediction process of a decoder for the group of frames.
- the group of frames is formed of a proper subset of frames of a video sequence having the display order, and performing the prediction process includes receiving, from the encoded bitstream, the group of frames as input to the prediction process of the decoder in a coding order arranged using a group coding structure that defines at least one backward reference frame for inclusion within a set of candidate reference frames, and predicting the group of frames in the coding order using the set of candidate reference frames.
- the method also includes generating a decoded group of frames using prediction results of the prediction process, and, responsive to a determination that the prediction process of the encoder received the group of frames as input in the reversed display order, buffering the decoded group of frames, and outputting the buffered decoded frames in the display order.
- An apparatus comprises a non-transitory storage medium or memory and a processor.
- the medium includes instructions executable by the processor to carry out a method including determining, from an indication in an encoded bitstream, whether a prediction process of an encoder received a group of frames in an input order, the input order comprises one of a display order or a reversed display order, and the group of frames formed of a proper subset of frames of a video sequence having the display order.
- the method also includes performing a prediction process of a decoder for the group of frames by receiving, from the encoded bitstream, the group of frames as input to the prediction process of the decoder in a coding order arranged using a group coding structure that modifies the input order such that an individual frame of the group of frames input to the prediction process before an adjacent, preceding frame only if the individual frame is used as a backward prediction frame within a set of candidate reference frames, and predicting the group of frames in the coding order using the set of candidate reference frames.
- the method also includes generating a decoded group of frames using prediction results of the prediction process, and, responsive to the input order being the reversed display order, buffering each of the decoded group of frames until all of the frames of the decoded group of frames are generated, and outputting the buffered decoded frames in the display order only after all of the frames of the decoded group of frames are buffered.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a typical video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a block diagram of an example of a reference frame buffer.
- FIG. 7 is a diagram of a group of frames in a display order of the video sequence.
- FIG. 8 is a diagram of a first example of a coding order for the group of frames of FIG. 7 .
- FIG. 9A is a diagram of a hierarchical multi-layer structure illustrating the available reference frames in a second example of a coding order for the group of frames of FIG. 7 .
- FIG. 9B is a diagram of the second example of the coding order for the group of frames of FIG. 7 according to the layers of FIG. 9A .
- FIG. 10 is a diagram of the group of frames of FIG. 7 in a reversed display order of the video sequence.
- FIG. 11 is a diagram of a first example of a coding order for the group of frames of FIG. 10 .
- FIG. 12A is a diagram of the hierarchical multi-layer structure illustrating the available reference frames in the second example of a coding order for the group of frames of FIG. 10 .
- FIG. 12B is a diagram of the second example of the coding order for the group of frames of FIG. 10 according to the layers of FIG. 12A .
- FIG. 13 is a flowchart diagram of a process for encoding video frames using reversed ordering.
- FIG. 14 is a flowchart diagram of a process for decoding video frames using reversed ordering.
- a video stream can be compressed by a variety of techniques to reduce bandwidth required transmit or store the video stream.
- a video stream can be encoded into a bitstream, which involves compression, which is then transmitted to a decoder that can decode or decompress the video stream to prepare it for viewing or further processing. Compression of the video stream often exploits spatial and temporal correlation of video signals through spatial and/or motion compensated prediction. Inter-prediction, for example, uses one or more motion vectors to generate a block (also called a prediction block) that resembles a current block to be encoded using previously encoded and decoded pixels. By encoding the motion vector(s), and the difference between the two blocks, a decoder receiving the encoded signal can re-create the current block.
- Each motion vector used to generate a prediction block in the inter-prediction process refers to a frame other than a current frame, i.e., a reference frame.
- Reference frames can be located before or after the current frame in the sequence of the video stream. In some cases, there may be three reference frames used to encode or decode blocks of the current frame of the video sequence. One is a frame that may be referred to as a golden frame. Another is a most recently encoded or decoded frame. The last is an alternative reference frame that is encoded or decoded before one or more frames in a sequence, but which is displayed after those frames in an output display order. In this way, the alternative reference frame is a reference frame usable for backwards prediction.
- the efficacy of a reference frame when used to encode or decode a block within a current frame can be measured based on a resulting signal-to-noise ratio or other measures of rate-distortion.
- the video frames may be coded in groups of frames, sometimes called groups of pictures or golden-frame groups. Each group contains a series of successive video frames, such as 4 to 16 frames. Successive groups are coded in the display order, while a video frame within a group may be coded out of the display order only if it is to be available as a backward reference frame during the inter-prediction process.
- Implementations of this disclosure include coding whereby the video frames within a group may be input to the inter-prediction process in one of two different orders—either in the display order or in a reversed display order.
- a bit is signaled at the start of a group that informs a decoder as to which order is used for the group. The bit may be included in a header for the group of frames in some implementations. If the bit is set to indicate the frames within the group are coded in the reversed display order, the decoder can buffer all of the coded frames and reorder them when the group is entirely decoded and ready to output to display.
- Coding efficiency can be improved for groups of frames.
- FIG. 1 is a schematic of a video encoding and decoding system 100 .
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG. 2 .
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102 and the encoded video stream can be decoded in the receiving station 106 .
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106 .
- LAN local area network
- WAN wide area network
- VPN virtual private network
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2 . However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- an implementation can omit the network 104 .
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having a non-transitory storage medium or memory.
- the receiving station 106 receives (e.g., via the network 104 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol is used for transmission of the encoded video over the network 104 .
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol.
- HTTP Hypertext Transfer Protocol
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102 ) to decode and view and further encodes and transmits its own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1 .
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a CPU 202 in the computing device 200 can be a central processing unit.
- the CPU 202 can be any other type of device, or multiple devices, capable of manipulating or processing information now-existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown, e.g., the CPU 202 , advantages in speed and efficiency can be achieved using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. Any other suitable type of storage device or non-transitory storage medium can be used as the memory 204 .
- the memory 204 can include code and data 206 that is accessed by the CPU 202 using a bus 212 .
- the memory 204 can further include an operating system 208 and application programs 210 , the application programs 210 including at least one program that permits the CPU 202 to perform the methods described here.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the methods described here.
- Computing device 200 can also include a secondary storage 214 , which can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- a secondary storage 214 can, for example, be a memory card used with a mobile computing device. Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218 .
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the CPU 202 via the bus 212 .
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218 .
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display or light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220 , for example a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200 .
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200 .
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound-sensing device 222 , for example a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200 .
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200 .
- FIG. 2 depicts the CPU 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the CPU 202 can be distributed across multiple machines (wherein individual machines can have one or more of processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200 .
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302 .
- the video sequence 302 includes a number of adjacent frames 304 . While three frames are depicted as the adjacent frames 304 , the video sequence 302 can include any number of adjacent frames 304 .
- the adjacent frames 304 can then be further subdivided into individual frames, e.g., a frame 306 .
- the frame 306 can be divided into a series of planes or segments 308 .
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310 , which can contain data corresponding to, for example, 16 ⁇ 16 pixels in the frame 306 .
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4 ⁇ 4 pixels, 8 ⁇ 8 pixels, 16 ⁇ 8 pixels, 8 ⁇ 16 pixels, 16 ⁇ 16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102 such as by providing a computer software program stored in memory, for example, the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the transmitting station 102 to encode video data in the manner described in FIG. 4 .
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102 .
- the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402 , a transform stage 404 , a quantization stage 406 , and an entropy encoding stage 408 .
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410 , an inverse transform stage 412 , a reconstruction stage 414 , and a loop filtering stage 416 .
- Other structural variations of the encoder 400 can be used to encode the video stream 300 .
- respective frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra-prediction) or inter-frame prediction (also called inter-prediction).
- intra-frame prediction also called intra-prediction
- inter-frame prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames. The designation of reference frames for groups of blocks is discussed in further detail below.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408 .
- the entropy-encoded coefficients, together with other information used to decode the block, which may include for example the type of prediction used, transform type, motion vectors and quantizer value, are then output to the compressed bitstream 420 .
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path in FIG. 4 can be used to ensure that the encoder 400 and a decoder 500 (described below) use the same reference frames to decode the compressed bitstream 420 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 400 can be used to encode the compressed bitstream 420 .
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106 , for example, by providing a computer software program stored in the memory 204 .
- the computer software program can include machine instructions that, when executed by a processor such as the CPU 202 , cause the receiving station 106 to decode video data in the manner described in FIG. 5 .
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106 .
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 : an entropy decoding stage 502 , a dequantization stage 504 , an inverse transform stage 506 , an intra/inter prediction stage 508 , a reconstruction stage 510 , a loop filtering stage 512 and a deblocking filtering stage 514 .
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400 .
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 , e.g., at the intra/inter prediction stage 402 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516 .
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420 .
- the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514 .
- FIG. 6 is a block diagram of an example of a reference frame buffer 600 .
- the reference frame buffer 600 stores reference frames used to encode or decode blocks of frames of a video sequence.
- the reference frame buffer 600 includes reference frames identified as a last frame LAST_FRAME 602 , a golden frame GOLDEN_FRAME 604 , and an alternative reference frame ALTREF_FRAME 606 .
- the frame header of a reference frame includes a virtual index 608 to a location within the reference frame buffer 600 at which the reference frame is stored.
- a reference frame mapping 612 maps the virtual index 608 of a reference frame to a physical index 614 of memory at which the reference frame is stored.
- One or more refresh flags 610 can be used to remove one or more of the stored reference frames from the reference frame buffer 600 , for example, to clear space in the reference frame buffer 600 for new reference frames, where there are no further blocks to encode or decode using the stored reference frames, or where a new frame is encoded or decoded and identified as a reference frame.
- the number of reference positions within the reference frame buffer 600 , the types, and the names used are examples only.
- the reference frames stored in the reference frame buffer 600 can be used to identify motion vectors for predicting blocks of frames to be encoded or decoded. Different reference frames may be used depending on the type of prediction used to predict a current block of a current frame. For example, in bi-prediction, blocks of the current frame can be forward predicted using either frames stored as the LAST_FRAME 602 or the GOLDEN_FRAME 604 , and backward predicted using a frame stored as the ALTREF_FRAME 606 .
- the reference frame buffer 600 can store up to eight reference frames, wherein each stored reference frame may be associated with a different virtual index 602 of the reference frame buffer. Although three of the eight spaces in the reference frame buffer 600 are used by frames designated as the LAST_FRAME 602 , the GOLDEN_FRAME 604 , and the ALTREF_FRAME 606 , five spaces remain available to store other reference frames. For example, one or more available spaces in the reference frame buffer 600 may be used to store further alternative reference frames.
- the alternative reference frame designated as the ALTREF_FRAME 606 may be a frame of a video sequence that is distant from a current frame in a display order, but is encoded or decoded earlier than it is displayed.
- the alternative reference frame may be ten, twelve, or more (or fewer) frames after the current frame in a display order.
- Further alternative reference frames can be frames located nearer to the current frame in the display order. Being closer to the current frame in display order increases the likelihood of the features of a reference frame being more similar to those of the current frame.
- one or more alternative reference frames can be stored in the reference frame buffer 600 as additional option(s) usable for backward prediction.
- An alternative reference frame may not correspond directly to a frame in the sequence. Instead, the alternative reference frame may be generated using one or more of the frames having filtering applied, being combined together, or being both combined together and filtered.
- An alternative reference frame may not be displayed. Instead, it can be a frame or portion of a frame generated and transmitted for use only for prediction (i.e., it is omitted when the decoded sequence is displayed).
- the reference frame buffer 600 is shown as being able to store up to eight reference frames, other implementations of the reference frame buffer 600 may be able to store additional or fewer reference frames.
- the available spaces in the reference frame buffer 600 may be used to store frames other than alternative reference frames.
- the available spaces may store a second last frame (i.e., the first frame before the last frame) and/or a third last frame (i.e., a frame two frame before the last frame) as additional forward prediction reference frames.
- a backward frame may be stored as an additional backward prediction reference frame.
- FIG. 7 is a diagram of a group of frames in a display order of the video sequence.
- the group of frames is preceded by a frame 700 , which can be referred to as a key frame or an overlay frame in some cases, and comprises eight frames 702 - 716 .
- No block within the frame 700 is inter predicted using reference frames of the group of frames.
- the frame 700 is a key (also referred to as intra-predicted frame) in this example, which refers to its status that predicted blocks within the frame are only predicted using intra prediction.
- the frame 700 can be an overlay frame, which is an inter-predicted frame that can be a reconstructed frame of a previous group of frames. In an inter-predicted frame, at least some of the predicted blocks are predicted using inter prediction.
- the number of frames forming each group of frames can vary according to the video spatial/temporal characteristics and other encoded configurations, such as the key frame interval selected for random access or error resilience, for example.
- the number of frames forming each group may be determined by a first pass of a two-pass encoder, such as the encoder 400 .
- the statistics can include the level of motion across frames of the video sequence, the frame rate, the frame resolution, etc. For example, the less motion across a sequence, the larger the number of frames within a group of frames may exist.
- the number (e.g., 1-8) on the frames 702 - 716 indicates the position of the frame in the video sequence.
- the frame 700 is numbered 0 to reflect that it precedes the group of frames.
- the frame 700 may, in some cases, be referred to as part of the group of frames for convenience, but the position of the frame 700 does not change in reversed ordering regardless of whether or not it is described as a frame of the group of frames.
- the coding order for each group of frames can differ from the display order. As mentioned briefly above, this allows a frame located after a current frame in the video sequence to be used as a reference frame for encoding the current frame.
- a decoder such as the decoder 500 , may share a common group coding structure with an encoder, such as the encoder 400 .
- the group coding structure assigns different roles that respective frames within the group may play in the reference buff (e.g., a last frame, an alternative reference frame, etc.) and defines or indicates the coding order for the frames within a group.
- FIG. 8 is a diagram of a first example of a coding order for the group of frames of FIG. 7 .
- the coding order of FIG. 8 is associated with a first group coding structure whereby a single backward reference frame is available for each frame of the group. Because the encoding and decoding order is the same, the order shown in FIG. 8 is generally referred to herein as a coding order.
- the key or overlay frame 700 is designated the golden frame in a reference frame buffer, such as the GOLDEN_FRAME 604 in the reference frame buffer 600 .
- the frame 700 is intra-predicted in this example, so it does not require a reference frame, but an overlay frame as the frame 700 , being a reconstructed frame from a previous group, also does not use a reference frame of the current group of frames.
- the final frame 716 in the group is designated an alternative reference frame in a reference frame buffer, such as the ALTREF_FRAME 606 in the reference frame buffer 600 .
- the frame 716 is coded out of the display order after the frame 700 so as to provide a backward reference frame for each of the remaining frames 702 - 714 .
- the frame 700 serves as an available reference frame for blocks of the frame 716 .
- the frame 700 (as the golden frame) is available as a forward prediction frame and the frame 716 (as the alternative reference frame) is available as a backward reference frame.
- the reference frame buffer such as the reference frame buffer 600 , is updated after encoding each frame so as to update the identification of the reference frame, also called a last frame, which is available as a forward prediction frame in a similar manner as the frame 700 .
- the frame 716 (or, in some cases, the frame 700 ) is also designated the last frame, such as the LAST_FRAME 602 in the reference frame buffer 600 .
- the frame 702 When blocks of the frame 704 are being predicted, the frame 702 is designated the last frame, replacing the frame 716 or 700 as the last frame in the reference frame buffer. Similarly, when blocks of the frame 706 are being predicted, the frame 704 is designated the last frame, replacing the frame 702 as the last frame in the reference frame buffer. This process continues for the prediction of the remaining frames 708 - 714 of the group in the encoding order. In this way, a single backward reference frame is available for inter-prediction of blocks of the frames 702 - 714 .
- FIG. 9A is a diagram of a hierarchical multi-layer structure illustrating the available reference frames in a second example of a coding order for the group of frames of FIG. 7
- FIG. 9B is a diagram of the second example of the coding order for the group of frames of FIG. 7 according to the layers of FIG. 9A
- the layers of FIG. 9A show the frames 700 - 716 in the display order of the video sequence.
- the frames shown in FIG. 7A represent a subset or group of frames preceded by a frame 700 in the display order that corresponds to a key frame or previous overlay frame (e.g., the GOLDEN_FRAME 604 ) for the group, and a last frame 716 in the display order corresponds to an alternative reference frame (e.g., the ALTREF_FRAME 606 ).
- the frame 716 is far enough away from the frame 700 in the display order to have different features but not so different that the two cannot both be used as reference frames for another frame of the group.
- the group comprises eight frames (excluding the frame 700 ), but a group can have a cardinality of 4 to 16 in some implementations.
- Selecting the frame farthest from the frame 700 as the alternative reference frame for the group increases the difficulty in identifying similarities between features between those frames unless the video sequence has relatively static motion.
- selecting a frame that is closer than to the frame 700 limits the number of frames for which the frame 716 can be a reference frame.
- additional reference frames can be used to increase coding efficiency.
- One example to obtain additional reference frames is to designate a frame closer to the golden frame, e.g., the frame 700 , as an alternative reference frame.
- Providing additional reference frames can be achieved by organizing the frames within a group to be encoded or decoded into layers in a display order.
- the layers of FIG. 9A represent a group coding structure having multiple backward reference frames in contrast to the group coding structure illustrated by FIG. 8 .
- the first layer includes the frame 700 (designated the golden frame) and the frame 716 (designated an alternative reference frame).
- the second layer includes the frame 708
- the third layer includes the frames 704 and 712 .
- the fourth, and final, layer includes the frames 702 , 706 , 710 , and 714 .
- the frame 708 is selected as the frame that is evenly (or approximately evenly) spaced apart between the frame 700 and the frame 716 in the display order.
- the frame 704 and the frame 712 can be selected as frames evenly (or approximately evenly) spaced apart between the frame 700 and the frame 704 , and between the frame 704 and the frame 716 , respectively, in the display order.
- the frame 708 is spaced apart from each by three frames
- the frame 704 is spaced apart from each of the frame 700 and the frame 708 by one frame
- the frame 712 is spaced apart from each of the frame 708 and the frame 716 by one frame.
- the frame 700 is the first frame encoded or decoded, followed by the first alternative reference frame, frame 716 , and then another alternative reference frame, frame 708 .
- the encoding or decoding order of the frames follows the hierarchy of layers shown in FIG. 9A .
- the first two frames 700 , 716 correspond to the first layer.
- the third frame in the coding order, the frame 708 corresponds to the second layer.
- the fourth frame in the coding order, the frame 704 corresponds to the first frame in the display order in the third layer, which is followed by the fifth and sixth frames corresponding to the fourth layer, here the frames 702 , 706 .
- the seventh frame in the coding order corresponds to the second frame in the display order in the third layer, the frame 712 , which is followed by the final two frames 710 , 714 corresponding to the fourth layer as the eighth and ninth frames.
- the group coding structure of FIG. 9A results in a frame being encoded out of order only when it can be used as a backward reference frame.
- the arrows in FIG. 9A show, in part, the roles assigned to frames within a reference frame buffer such as the reference frame buffer 600 .
- the frame 700 is designated a golden or key reference that is available as a forward prediction frame for blocks of the frames 702 - 716
- the frame 716 is designated as a first alternative reference frame available as a backward prediction frame for the blocks of each of the frames 702 - 714 .
- the frame 708 is designated as a second alternative reference frame available as a backward prediction frame for the blocks of at least frames 704 , 712 .
- the frames 704 and 712 can be designated as additional backward or alternative reference frames for prediction of the blocks of at least frames 702 , 706 and frames 710 , 714 , respectively.
- the frame 712 can replace the frame 704 in the reference frame buffer as a backward or alternative reference frame in some implementations as the frames are encoded and decoded.
- the last reference frame within a reference frame buffer is updated as the video frames are encoded and decoded to serve as another forward prediction frame for blocks of the following frame in the coding order.
- the key or golden frame 700 is designated the last reference frame available as a forward reference frame for the frame 716
- the frame 716 is designated the last reference frame available as a forward reference frame for the frame 708
- the frame 708 is designated the last reference frame available as a forward reference frame for the frame 704
- the frame 704 is designated the last reference frame available as a forward reference frame for the frame 702
- the frame 702 is designated the last reference frame available as a forward reference frame for the frame 706
- the frame 706 is designated the last reference frame available as a forward reference frame for the frame 712
- the frame 712 is designated the last reference frame available as a forward reference frame for the frame 710
- the frame 710 is designated the last reference frame available as a forward reference frame for the frame 714 .
- the frames 702 , 706 , 710 , and 714 are not used as backward reference frames. Accordingly, and like the first group coding structure, the second group structure results in a frame of a group of frames being coded out of order only when it is available for use as a backward reference frame.
- a frame may be said to be coded out of order when its position in the coding order of a group of frame is before its preceding, adjacent frame in the display or reversed display order, whichever is applicable.
- FIG. 10 is a diagram of the group of frames of FIG. 7 in a reversed display order of the video sequence.
- the group of frames is preceded by the frame 700 , and comprises the frames 702 - 716 .
- the position of the frame 700 does not change in reversed ordering, i.e., the reversed display order.
- the frames of the group are arranged in reversed display order so that the final frame 716 in the display order is the first frame following the frame 700 in the reversed display order and the first frame 702 in the display order is the final frame following the frame 700 in the reversed display order.
- FIG. 11 is a diagram of a first example of a coding order for the group of frames of FIG. 10 .
- the coding (e.g., encoding or decoding) order of FIG. 11 is associated with the first group coding structure described with regard to FIG. 8 , whereby a single backward reference frame is available for each frame of the group. 14.
- the group of frames comprises, in the display order, a first frame preceded by a key (e.g., intra-predicted) or overlay frame, a last frame, and at least two intervening frames between the first frame and the last frame
- the coding order with a single backward reference frame can include the first frame preceded by the key or overlay frame, followed by the last frame, and the at least two intervening frames following the last frame in the reversed display order.
- the key or overlay frame 700 is designated the golden frame in a reference frame buffer, such as the GOLDEN_FRAME 604 in the reference frame buffer 600 .
- the final frame 702 in the group is designated an alternative reference frame in a reference frame buffer, such as the ALTREF_FRAME 606 in the reference frame buffer 600 .
- the frame 702 is coded out of the reversed display order after the frame 700 so as to provide a backward reference frame for each of the remaining frames 716 - 704 .
- the frame 700 serves as an available reference frame for blocks of the frame 702 .
- the frame 700 (as the golden frame) is available as a forward prediction frame and the frame 702 (as the alternative reference frame) is available as a backward reference frame.
- the reference frame buffer such as the reference frame buffer 600 , is updated after encoding and subsequently decoding each frame so as to update the identification of the reference frame, also called a last frame or last reference frame, which is available as a forward prediction frame in a similar manner as the frame 700 .
- the frame 702 (or, in some cases, the frame 700 ) is also designated the last frame, such as the LAST_FRAME 602 in the reference frame buffer 600 .
- the frame 716 is designated the last frame, replacing the frame 702 or 700 as the last frame in the reference frame buffer.
- the frame 714 is designated the last frame, replacing the frame 716 as the last frame in the reference frame buffer. This process continues for the prediction of the remaining frames 710 - 704 of the group in the encoding order. In this way, a single backward reference frame is available for inter-prediction of blocks of the frames 716 - 704 .
- FIG. 12A is a diagram of the hierarchical multi-layer structure illustrating the available reference frames in the second example of a coding order for the group of frames of FIG. 10 .
- FIG. 12B is a diagram of the second example of the coding order for the group of frames of FIG. 10 according to the layers of FIG. 12A .
- the layers of FIG. 12A show the frames 700 - 716 in the reversed display order of the video sequence.
- a group coding structure that provides multiple backward reference frames applied to a group of frames in a reversed display order where the group includes, in the display order, a first frame preceded by a key or overlay frame, a last frame, and at least two intervening frames (i.e., at least a first intervening frame and a second intervening frame) between the first frame and the last frame, can result in a coding order where the first frame is preceded by the key or overlay frame, which is followed by the second intervening frame of the at least two intervening frames, the last frame, and the first intervening frame of the at least two intervening frames. This results in at least two frames encoded out of order for use as candidate reference frames for backward inter prediction.
- the layers of FIG. 12A represent the group coding structure described in FIG. 9A applied to the group of frames shown in FIG. 10 .
- This group coding structure provides multiple backward reference frames, and is only one example of the possible implementations of layers.
- the first layer includes the frame 700 (designated the golden frame) and the frame 702 (designated an alternative reference frame).
- the second layer includes the frame 710
- the third layer includes the frames 714 and 706 .
- the fourth, and final, layer includes the frames 716 , 712 , 708 , and 704 .
- the frame 710 is selected as the frame that is evenly (or approximately evenly) spaced apart between the frame 700 and the frame 702 in the reversed display order.
- the frame 714 and the frame 706 can be selected as frames evenly (or approximately evenly) spaced apart between the frame 700 and the frame 710 , and between the frame 710 and the frame 702 , respectively, in the reversed display order.
- the frame 710 is spaced apart from each by three frames
- the frame 714 is spaced apart from each of the frame 700 and the frame 710 by one frame
- the frame 706 is spaced apart from each of the frame 710 and the frame 702 by one frame.
- the frame 700 is the first frame encoded or decoded, followed by the first alternative reference frame, frame 702 , and then another alternative reference frame, frame 710 .
- the encoding or decoding order of the frames follows the hierarchy of layers shown in FIG. 12A .
- the first two frames 700 , 702 correspond to the first layer.
- the third frame in the coding order, the frame 710 corresponds to the second layer.
- the fourth frame in the coding order, the frame 714 corresponds to the first frame in the reversed display order in the third layer, which is followed by the fifth and sixth frames corresponding to the fourth layer, here the frames 716 , 712 .
- the seventh frame in the coding order corresponds to the second frame in the reversed display order in the third layer, the frame 706 , which is followed by the final two frames 708 , 704 corresponding to the fourth layer as the eighth and ninth frames.
- the arrows in FIG. 12A show, in part, the roles assigned to frames within a reference frame buffer such as the reference frame buffer 600 .
- the frame 700 is designated a golden or key reference that is available as a forward prediction frame for blocks of the frames 716 - 702
- the frame 702 is designated as a first alternative reference frame available as a backward prediction frame for the blocks of each of the frames 716 - 704
- the frame 710 is designated as a second alternative reference frame available as a backward prediction frame for the blocks of at least frames 714 , 706 .
- the frames 714 and 706 can be designated as additional backward or alternative reference frames for prediction of the blocks of at least frames 716 , 712 and frames 708 , 704 , respectively.
- the frame 706 can replace the frame 714 in the reference frame buffer as a backward or alternative reference frame in some implementations as the frames are encoded and decoded.
- the frames 716 , 712 , 708 , and 704 are not used as backward reference frames.
- the last reference frame within a reference frame buffer is updated as the video frames are encoded and decoded to serve as another forward prediction frame for blocks of the following frame in the coding order.
- the key or golden frame 700 is designated the last reference frame available as a forward reference frame for the frame 702
- the frame 702 is designated the last reference frame available as a forward reference frame for the frame 710
- the frame 710 is designated the last reference frame available as a forward reference frame for the frame 714
- the frame 714 is designated the last reference frame available as a forward reference frame for the frame 716
- the frame 716 is designated the last reference frame available as a forward reference frame for the frame 712
- the frame 712 is designated the last reference frame available as a forward reference frame for the frame 706
- the frame 706 is designated the last reference frame available as a forward reference frame for the frame 708
- the frame 708 is designated the last reference frame available as a forward reference frame for the frame 704 .
- the set of reference frames available to predict for encoding or decoding frames of a group of frames differs when the frames are arranged in the display order as compared to the reversed display order.
- a video sequence can be divided into successive groups of frames.
- the groups are formed so that the member frames contain relatively consistent characteristics different from those of adjacent groups. For example, one group may exhibit stillness across its successive frames, while another exhibits a panning motion. Other examples are possible.
- candidate reference frames selected from a group of frames arranged in the reversed display order using a group coding structure can result in improved coding performance (e.g., a reduced rate-distortion error) as compared to candidate reference frames selected from the group of frames arranged in the display order using the same group coding structure (or a different coding structure).
- Each of the groups may be supplied to a prediction process of an encoder in either the display order or the reversed display order, where the prediction process performed of the encoder, such as at the intra/inter prediction stage 402 of the encoder 400 , arranges the group in a coding order and predicts the frames.
- FIG. 13 is a flowchart diagram of a method or process 1300 for encoding video frames using reversed ordering, also referred to as reversed display order.
- the process 1300 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1300 .
- the process 1300 can be implemented using specialized hardware or firmware. Some computing devices may have multiple memories or processors, and the operations described in the process 1300 can be distributed using multiple processors, memories, or both.
- whether to arrange a group of frames in a reversed display order is determined. This determination may be made before a prediction process of an encoder for the group of frames.
- the group of frames is formed of a proper subset of frames of a video sequence having a display order.
- the encoder may employ different schemes to determine whether the group should use the display order or the reversed display order to obtain a good tradeoff between the encoding performance and the encoder complexity.
- the encoder may conduct a rate-distortion analysis to compare the rate-distortion performance between the use of the normal display order and the reversed display order.
- a rate-distortion analysis can calculate the rate (e.g., the number of bits) used to encode frames of the group as compared to the distortion resulting from the encoding.
- the distortion may be calculated as the differences between pixel values of the frame before encoding and after decoding.
- the differences can be a sum of absolute differences or some other measure that captures the accumulated error for blocks of the frames.
- determining whether to arrange the group of frames in the reversed display order may include performing a first rate-distortion analysis of encoding the group of frames arranged in the display order, performing a second rate-distortion analysis of encoding the group of frames arranged in the reversed display order, and making a determination to arrange the group of frames in the reversed display order responsive to an error of the second rate-distortion analysis being lower than an error of the first rate-distortion analysis.
- the error may be the ratio of the rate to the distortion, or another error value.
- the first rate-distortion analysis and the second rate-distortion analysis do not have to be performed with optimization. That is, not all possible prediction modes, transform modes, group coding structures, etc., need be included in the analysis for the group of frames in each of the display order and the reversed display order. Desirably, the same encoding parameters and modes are used to make the comparison.
- Another scheme to determine whether the group should use the display order or the reversed display order may extract spatial and/or temporal features from the group of frames through a simpler coding procedure compared to a rate-distortion analysis. For example, where a two-pass encoder is used to encode frames, video features of the frames of the group, such as motion information obtained through a motion analysis, may be collected during a first pass that may then be used in making the determination.
- the motion analysis may be performed by inter-predicting at least some of the frames of the group arranged in the display order using a single forward reference frame, and making the determination to arrange the group of frames in the reversed display order responsive to the motion analysis indicating a defined motion across the group of frames.
- the single reference frame may be the golden frame (i.e., the frame preceding the group of frames).
- the defined motion may be, for example, a zoom in or a zoom out. That is, detection of a zoom in or a zoom out across the group of frames may result in arranging the group of frames in the reversed display order.
- the video features may be used in schemes such as lookup tables that map certain features to whichever of the display order or the reversed display order is likely to produce a better set of reference frames for the group.
- the group of frames is arranged in the reversed display order, as applicable, before the prediction process. For example, arranging the group of frames in the reversed display order may occur responsive to a determination to arrange the group of frames in the reversed display order before the prediction process for the group of frames. For example, where the group of frames comprises eight frames in the display order, such as shown in FIG. 7 , the reversed display order is as shown in FIG. 10 .
- the process 1300 advances to perform a prediction process for the group of frames in a coding order at 1306 .
- the display order or the reversed display order may be referred to as an input order to the prediction process.
- performing the prediction process can include receiving the group of frames to the prediction process in the input order.
- the group of frames may be received at the intra/inter prediction stage 402 to perform the prediction process during the second pass of a two-pass encoding process, for example.
- Performing the prediction process at 1306 can also include arranging the group of frames, received in the input order, in a coding order using a group coding structure that defines at least one backward reference frame for inclusion within a set of candidate reference frames.
- the group coding structure may correspond to the first group coding structure described with regard to FIGS. 8 and 11 , or to another group coding structure that produces one backward reference frame.
- the group coding structure may correspond to the second group coding structure described with regard to FIGS. 9A, 9B, 12A, and 12B , or to another group coding structure that produces more than one backward reference frame for frames of the group.
- the set of candidate reference frames can include available reference frames for a respective frame in the group of frames stored within a reference frame buffer, such as the reference frame buffer 600 .
- the set of candidate reference frames for the prediction process of the frame 710 comprises the golden frame (i.e., frame 700 ), the last frame (i.e., frame 712 ), and the alternative reference frame (i.e., frame 702 ).
- the set of candidate reference frames for the prediction process of the frame 716 comprises the golden frame (i.e., frame 700 ), the last frame (i.e., frame 702 ), and the alternative reference frame (i.e., frame 702 ).
- the group coding structure may be selected by performing a rate-distortion analysis that compares encoding the group of frames in a coding order defined by each of a set of available group coding structures, and selects the group coding structure that results in the coding order having most efficient coding (e.g., the lowest rate-distortion error).
- the encoder can transmit information within the encoded bitstream that indicates the selected group coding structure to the decoder.
- the process 1300 may use a group coding structure that is agreed to between the encoder and a decoder a priori.
- the group coding structure assigns roles to the frames within the reference frame buffer for the prediction process. That is, the set of candidate reference frames is determined by the group coding structure.
- Performing the prediction process at 1306 can also include predicting the group of frames in the coding order using the set of candidate reference frames. Predicting the group of frames can include predicting blocks of each frame. Predicting the group of frames can include selecting at least one reference frame of the set of candidate reference frames to use for predicting a current block of a current frame within the group of frames, and generating a prediction block using the selected reference frame. The current block is encodable using the prediction block.
- each reference frame of the set of candidate reference frames may be used to generate a prediction block for the current block.
- one or more combinations of forward and backward prediction frames may also be used to generate respective prediction blocks.
- One or more intra-prediction modes may also be used to generate respective prediction blocks for the current block.
- the prediction block that is the best predictor for the current block determines the prediction mode for the block.
- the best predictor may be selected by determining which of the prediction blocks has pixel values most similar to the current block being predicted. This may be calculated using a sum of absolute differences or other measure of the differences between the pixel values of the prediction block and the current block.
- the prediction block can encode the current block by compressing the residual, for example using the compression described with regard to the encoder 400 (e.g., the transform stage 404 , the quantization stage 406 , and the entropy encoding stage 408 .
- the process 1300 may include the further encoding steps for the group of frames.
- the process 1300 may include transmitting a bit with the group of frames in the bitstream, such as the compressed bitstream 420 , indicating whether the input order for the group supplied to the prediction process is the reversed display order. For example, a bit having a value of 1 may indicate the input order is the reversed display order, while a bit having a value of 0 may indicate the input order is the display order.
- the video sequence may be formed of multiple groups of frames, where each of the multiple groups of frames is formed of a disjoint set of the frames of the video sequence.
- the process 1300 may be repeated for each of the multiple groups of frames.
- the multiple groups of frames may be encoded sequentially in the display order, while the frames within each group are encoded in their respective coding orders.
- the frames of at least one of the multiple groups of frames are supplied to the prediction process in the reversed display order.
- the process 1300 can then further include transmitting, within an encoded bitstream including the multiple groups of frames, a bit with each group of the multiple groups of frames indicating respectively whether the input order for the group is the reversed display order.
- the process 1300 may be repeated in its entirety only for some of the multiple groups of frames.
- the process 1300 may be performed for a group depending on the number of frames in the group. For example, before prediction of a group of the multiple groups of frames, whether to arrange the frames of the group in the reversed display order may be determined only when a cardinality of the group is no more than eight. This may reduce the amount of computing time required to encode the multiple groups of the video sequence.
- the process 1300 may be performed for a group depending on latency of an encoder implementing the process 1300 . For example, before prediction of a group of the multiple groups of frames, whether to arrange the frames of the group in the reversed display order may be determined only when latency of the encoder is less than a defined value.
- Latency may be measured in a variety of ways, such as the amount of time between arrival of a frame at the intra/inter prediction stage 402 and its inclusion in the compressed bitstream 420 . Latency may also be measured by a count of frames. Thus, the defined value may be a measure of time or frames. An example of a defined value that may be used is one-half second. In this example, determining whether to arrange frames of a group in the reversed display order occurs only when latency of the encoder is less than one-half second. In this case, the process 1300 omits the determination at 1302 and the arranging at 1304 , and proceeds directly to performing the prediction process at 1306 with the group in the display order.
- FIG. 14 is a flowchart diagram of a method or process 1400 for decoding video frames using reversed ordering, also referred to as reversed display order.
- the process 1400 can be implemented, for example, as a software program that may be executed by computing devices such as transmitting station 102 or receiving station 106 .
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214 , and that, when executed by a processor, such as CPU 202 , may cause the computing device to perform the process 1300 .
- the process 1300 can be implemented using specialized hardware or firmware. As described above, multiple processors, memories, or both, may be used.
- the process 1400 includes determining whether a prediction process of an encoder received a group of frames as input in one of a display order or a reversed display order.
- the group of frames is formed of a proper subset of frames of a video sequence having the display order.
- the determination may be made using information from an encoded bitstream.
- determining whether the prediction process of the encoder received the group of frames as input in one of the display order or the reversed display order includes reading a bit encoded into the encoded bitstream with the encoded group of frames. For example, a determination that the prediction process of the encoder received the group of frames as input in the reversed display order may result responsive to the bit having a value of 1.
- the bit may be located in the header for the group of frames or in the header for the frame indicating the start of the group of frames.
- a prediction process of a decoder for the group of frames is performed.
- the group of frames is an encoded group of frames (e.g., residuals of blocks of the frames with information needed to decode the blocks) received from the encoded bitstream that is input to the prediction process.
- the frames in the group are received in a coding order.
- the coding order may be arranged using a group coding structure that defines at least one backward reference frame for inclusion within a set of candidate reference frames.
- the set of candidate reference frames are those associated with a reference frame buffer for a respective frame.
- the prediction process can also include predicting the group of frames in the coding order using the set of candidate reference frames.
- Predicting the group of frames can include predicting each frame using a respective set of candidate frames, such as in an intra/inter prediction stage 508 .
- Each frame can be predicted in units of blocks, where some blocks are inter predicted and other blocks are intra predicted. In some cases, a block may be predicted using a combination of inter prediction and intra prediction.
- the prediction results of predicting the group of frames prediction process can be used to generate a decoded group of frames at 1406 .
- the prediction results can include predictors for respective blocks as described with regard to the intra/inter prediction stage 508 .
- the predictors can then be combined with decoded residuals of the blocks to decode the group of blocks as described with regards to the dequantization stage 504 , inverse transform stage 506 , and reconstruction stage 510 of decoder 500 . Additional filtering may also be performed.
- some or all of the decoded group of frames may be buffered at 1408 .
- the decoded group of frames is buffered and then the buffered decoded frames are output in the display order.
- Buffering the decoded group of frames can include buffering each of the decoded group of frames until all of the frames of the decoded group of frames are generated so that the buffered decoded frames are output in the display order only after all of the frames of the decoded group of frames are buffered.
- the frame 704 In the reversed display order, the frame 704 is the next to last frame, but the frame 704 is the second frame after the frame 700 in the display order.
- the frame 704 is decoded late in the sequence.
- the frame 704 is decoded last. The frames decoded before the frame 704 are buffered until they can be output after the frame 704 is decoded in these examples.
- the frames of the group were encoded in the coding order, they are also decoded in the coding order.
- the decoder knows the coding order through its knowledge of the group coding structure. Accordingly, the decoder can successfully identify the frames so as to output them in the display order.
- the decoder When there is a determination that the prediction process of the encoder received the group of frames as input in the display order, the decoder outputs the decoded group of frames in the display order by either outputting the most recently decoded frame, or outputting a previous decoded frame stored in the reference frame buffer, depending upon the coding order.
- the process ends after the group of frames is decoded.
- the video sequence comprises multiple groups of blocks, and each can be decoded according to the process 1400 .
- each of the processes 1300 and 1400 is depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used. Furthermore, not all illustrated steps or operations may be required to implement a method in accordance with the disclosed subject matter.
- encoding and decoding illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application-specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit.
- IP intellectual property
- ASICs application-specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors or any other suitable circuit.
- signal processors should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- signals and “data” are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
- the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized that contains other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system.
- the transmitting station 102 can be implemented on a server and the receiving station 106 can be implemented on a device separate from the server, such as a hand-held communications device.
- the transmitting station 102 can encode content using an encoder 400 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 500 .
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102 .
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 400 may also include a decoder 500 .
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
Description
Claims (15)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/677,305 US10412383B2 (en) | 2017-08-15 | 2017-08-15 | Compressing groups of video frames using reversed ordering |
PCT/US2018/031582 WO2019036078A1 (en) | 2017-08-15 | 2018-05-08 | Compressing groups of video frames using reversed ordering |
CN201880036785.4A CN110731082B (en) | 2017-08-15 | 2018-05-08 | Compression of groups of video frames using reverse ordering |
EP18727532.6A EP3669540A1 (en) | 2017-08-15 | 2018-05-08 | Compressing groups of video frames using reversed ordering |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/677,305 US10412383B2 (en) | 2017-08-15 | 2017-08-15 | Compressing groups of video frames using reversed ordering |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190058880A1 US20190058880A1 (en) | 2019-02-21 |
US10412383B2 true US10412383B2 (en) | 2019-09-10 |
Family
ID=62245457
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/677,305 Active 2037-09-30 US10412383B2 (en) | 2017-08-15 | 2017-08-15 | Compressing groups of video frames using reversed ordering |
Country Status (4)
Country | Link |
---|---|
US (1) | US10412383B2 (en) |
EP (1) | EP3669540A1 (en) |
CN (1) | CN110731082B (en) |
WO (1) | WO2019036078A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2021061501A (en) * | 2019-10-04 | 2021-04-15 | シャープ株式会社 | Moving image conversion device and method |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5590122A (en) | 1994-12-22 | 1996-12-31 | Emc Corporation | Method and apparatus for reordering frames |
US5745181A (en) * | 1995-06-06 | 1998-04-28 | Sony Corporation | Motion compensated video processing |
US6141447A (en) | 1996-11-21 | 2000-10-31 | C-Cube Microsystems, Inc. | Compressed video transcoder |
US6473558B1 (en) * | 1998-06-26 | 2002-10-29 | Lsi Logic Corporation | System and method for MPEG reverse play through dynamic assignment of anchor frames |
US6580829B1 (en) * | 1998-09-25 | 2003-06-17 | Sarnoff Corporation | Detecting and coding flash frames in video data |
US20030202580A1 (en) * | 2002-04-18 | 2003-10-30 | Samsung Electronics Co., Ltd. | Apparatus and method for controlling variable bit rate in real time |
US20040066847A1 (en) * | 2002-10-03 | 2004-04-08 | Ntt Docomo, Inc. | Video encoding method, video decoding method, video encoding apparatus, video decoding apparatus, video encoding program, and video decoding program |
US6731684B1 (en) | 1998-09-29 | 2004-05-04 | General Instrument Corporation | Method and apparatus for detecting scene changes and adjusting picture coding type in a high definition television encoder |
US20080219393A1 (en) * | 2004-04-28 | 2008-09-11 | Tadamasa Toma | Moving Picture Stream Generation Apparatus, Moving Picture Coding Apparatus, Moving Picture Multiplexing Apparatus and Moving Picture Decoding Apparatus |
US20080273858A1 (en) * | 2005-08-15 | 2008-11-06 | Nds Limited | Video Trick Mode System |
US20090304080A1 (en) * | 2004-01-07 | 2009-12-10 | Edouard Francois | Method for coding an image sequence |
US20110109721A1 (en) | 2009-11-06 | 2011-05-12 | Sony Corporation | Dynamic reference frame reordering for frame sequential stereoscopic video encoding |
US8634467B2 (en) | 2008-05-06 | 2014-01-21 | Choy Sai Foundation L.L.C. | Flexible Wyner-Ziv video frame coding |
US20170094316A1 (en) | 2011-06-30 | 2017-03-30 | Microsoft Technology Licensing, Llc | Reducing latency in video encoding and decoding |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7266150B2 (en) * | 2001-07-11 | 2007-09-04 | Dolby Laboratories, Inc. | Interpolation of video compression frames |
US20130272409A1 (en) * | 2012-04-12 | 2013-10-17 | Qualcomm Incorporated | Bandwidth reduction in video coding through applying the same reference index |
WO2017131908A1 (en) * | 2016-01-29 | 2017-08-03 | Google Inc. | Dynamic reference motion vector coding mode |
-
2017
- 2017-08-15 US US15/677,305 patent/US10412383B2/en active Active
-
2018
- 2018-05-08 CN CN201880036785.4A patent/CN110731082B/en active Active
- 2018-05-08 EP EP18727532.6A patent/EP3669540A1/en active Pending
- 2018-05-08 WO PCT/US2018/031582 patent/WO2019036078A1/en unknown
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5590122A (en) | 1994-12-22 | 1996-12-31 | Emc Corporation | Method and apparatus for reordering frames |
US5745181A (en) * | 1995-06-06 | 1998-04-28 | Sony Corporation | Motion compensated video processing |
US6141447A (en) | 1996-11-21 | 2000-10-31 | C-Cube Microsystems, Inc. | Compressed video transcoder |
US6473558B1 (en) * | 1998-06-26 | 2002-10-29 | Lsi Logic Corporation | System and method for MPEG reverse play through dynamic assignment of anchor frames |
US6580829B1 (en) * | 1998-09-25 | 2003-06-17 | Sarnoff Corporation | Detecting and coding flash frames in video data |
US6731684B1 (en) | 1998-09-29 | 2004-05-04 | General Instrument Corporation | Method and apparatus for detecting scene changes and adjusting picture coding type in a high definition television encoder |
US20030202580A1 (en) * | 2002-04-18 | 2003-10-30 | Samsung Electronics Co., Ltd. | Apparatus and method for controlling variable bit rate in real time |
US20040066847A1 (en) * | 2002-10-03 | 2004-04-08 | Ntt Docomo, Inc. | Video encoding method, video decoding method, video encoding apparatus, video decoding apparatus, video encoding program, and video decoding program |
US20090304080A1 (en) * | 2004-01-07 | 2009-12-10 | Edouard Francois | Method for coding an image sequence |
US7983339B2 (en) * | 2004-01-07 | 2011-07-19 | Thomson Licensing | Method for coding an image sequence |
US20080219393A1 (en) * | 2004-04-28 | 2008-09-11 | Tadamasa Toma | Moving Picture Stream Generation Apparatus, Moving Picture Coding Apparatus, Moving Picture Multiplexing Apparatus and Moving Picture Decoding Apparatus |
US20080273858A1 (en) * | 2005-08-15 | 2008-11-06 | Nds Limited | Video Trick Mode System |
US8634467B2 (en) | 2008-05-06 | 2014-01-21 | Choy Sai Foundation L.L.C. | Flexible Wyner-Ziv video frame coding |
US20110109721A1 (en) | 2009-11-06 | 2011-05-12 | Sony Corporation | Dynamic reference frame reordering for frame sequential stereoscopic video encoding |
US20170094316A1 (en) | 2011-06-30 | 2017-03-30 | Microsoft Technology Licensing, Llc | Reducing latency in video encoding and decoding |
Non-Patent Citations (25)
Title |
---|
"Introduction to Video Coding Part 1: Transform Coding", Mozilla, Mar. 2012, 171 pp. |
"Overview VP7 Data Format and Decoder", Version 1.5, On2 Technologies, Inc., Mar. 28, 2005, 65 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.02, On2 Technologies, Inc., Aug. 17, 2006, 88 pp. |
"VP6 Bitstream and Decoder Specification", Version 1.03, On2 Technologies, Inc., Oct. 29, 2007, 95 pp. |
"VP8 Data Format and Decoding Guide, WebM Project", Google On2, Dec. 1, 2010, 103 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide draft-bankoski-vp8-bitstream-02", Network Working Group, Internet-Draft, May 18, 2011, 288 pp. |
Bankoski et al., "VP8 Data Format and Decoding Guide", Independent Submission RFC 6389, Nov. 2011, 305 pp. |
Bankoski, et al., "Technical Overview of VP8, An Open Source Video Codec for the Web", Jul. 11, 2011, 6 pp. |
H. Schwarz et al., "Overview of the Scalable Video Coding Extension of the H.264/AVC Standard", IEEE Transactions on Circuits and Systems for Video Technology, vol. 17, No. 9, Sep. 1, 2007, pp. 1103-1120. |
International Search Report and Written Opinion in PCT/US2018/031582, dated Jul. 5, 2018, 13 pgs. |
Series H: Audiovisual and Multimedia Systems, Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services, International Telecommunication Union, Jul. 30, 2010, 15 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile, International Telecommunication Union, Jun. 2006, 16 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 11, Mar. 2009. 670 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, International Telecommunication Union, Version 12, Mar. 2010, 676 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 1, International Telecommunication Union, May 2003, 282 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 3, International Telecommunication Union, Mar. 2005, 343 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Advanced video coding for generic audiovisual services, Version 8, International Telecommunication Union, Nov. 1, 2007, 564 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services-Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Series H: Audiovisual and Multimedia Systems, Infrastructure of audiovisual services—Coding of moving video, Amendment 2: New profiles for professional applications, International Telecommunication Union, Apr. 2007, 75 pp. |
Also Published As
Publication number | Publication date |
---|---|
EP3669540A1 (en) | 2020-06-24 |
CN110731082A (en) | 2020-01-24 |
WO2019036078A1 (en) | 2019-02-21 |
US20190058880A1 (en) | 2019-02-21 |
CN110731082B (en) | 2023-10-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20220353534A1 (en) | Transform Kernel Selection and Entropy Coding | |
US9210432B2 (en) | Lossless inter-frame video coding | |
AU2016398050B2 (en) | Motion vector reference selection through reference frame buffer tracking | |
US20210021859A1 (en) | Same frame motion estimation and compensation | |
US10271062B2 (en) | Motion vector prediction through scaling | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
US10448013B2 (en) | Multi-layer-multi-reference prediction using adaptive temporal filtering | |
US10412383B2 (en) | Compressing groups of video frames using reversed ordering | |
US10462482B2 (en) | Multi-reference compound prediction of a block using a mask mode | |
US10820014B2 (en) | Compound motion-compensated prediction | |
EP4352958A1 (en) | Reference motion vector candidate bank | |
WO2023107577A1 (en) | Ranked reference framework for video coding | |
WO2024072438A1 (en) | Motion vector candidate signaling |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LIU, YUXIN;XU, YAOWU;CHEN, DI;SIGNING DATES FROM 20170814 TO 20170815;REEL/FRAME:043295/0550 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: AWAITING TC RESP, ISSUE FEE PAYMENT VERIFIED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
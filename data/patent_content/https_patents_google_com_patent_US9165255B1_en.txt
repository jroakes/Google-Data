US9165255B1 - Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions - Google Patents
Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions Download PDFInfo
- Publication number
- US9165255B1 US9165255B1 US13/559,429 US201213559429A US9165255B1 US 9165255 B1 US9165255 B1 US 9165255B1 US 201213559429 A US201213559429 A US 201213559429A US 9165255 B1 US9165255 B1 US 9165255B1
- Authority
- US
- United States
- Prior art keywords
- video
- videos
- playlist
- transition matrix
- playlists
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G06N7/005—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/73—Querying
- G06F16/738—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G06K9/6256—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N7/00—Computing arrangements based on specific mathematical models
- G06N7/01—Probabilistic graphical models, e.g. probabilistic networks
-
- G06N99/005—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/02—Editing, e.g. varying the order of information signals recorded on, or reproduced from, record carriers
- G11B27/031—Electronic editing of digitised analogue information signals, e.g. audio or video signals
-
- G—PHYSICS
- G11—INFORMATION STORAGE
- G11B—INFORMATION STORAGE BASED ON RELATIVE MOVEMENT BETWEEN RECORD CARRIER AND TRANSDUCER
- G11B27/00—Editing; Indexing; Addressing; Timing or synchronising; Monitoring; Measuring tape travel
- G11B27/10—Indexing; Addressing; Timing or synchronising; Measuring tape travel
- G11B27/102—Programmed access in sequence to addressed parts of tracks of operating record carriers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/233—Processing of audio elementary streams
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/251—Learning process for intelligent management, e.g. learning user preferences for recommending movies
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/25—Management operations performed by the server for facilitating the content distribution or administrating data related to end-users or client devices, e.g. end-user or client device authentication, learning user preferences for recommending movies
- H04N21/262—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists
- H04N21/26258—Content or additional data distribution scheduling, e.g. sending additional data at off-peak times, updating software modules, calculating the carousel transmission frequency, delaying a video stream transmission, generating play-lists for generating a list of items to be played back in a given order, e.g. playlist, or scheduling item distribution according to such list
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/45—Management operations performed by the client for facilitating the reception of or the interaction with the content or administrating data related to the end-user or to the client device itself, e.g. learning user preferences for recommending movies, resolving scheduling conflicts
- H04N21/466—Learning process for intelligent management, e.g. learning user preferences for recommending movies
- H04N21/4662—Learning process for intelligent management, e.g. learning user preferences for recommending movies characterized by learning algorithms
- H04N21/4665—Learning process for intelligent management, e.g. learning user preferences for recommending movies characterized by learning algorithms involving classification methods, e.g. Decision trees
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/482—End-user interface for program selection
- H04N21/4825—End-user interface for program selection using a list of items to be played back in a given order, e.g. playlists
Definitions
- This disclosure relates generally to sequencing videos or videos in a playlist.
- the Internet is an increasingly popular medium for users to consume audio/video content.
- users often use programs executing on computing devices to select videos they want to listen to and to organize their playlist according to their preferences.
- audio/video playback programs hereinafter ‘media players’
- media players often provide a way for users to organize their playlist according to individual preferences.
- such programs often do not provide a method of sequencing audio/video content in an aesthetically pleasing way such that the sequence of files in a playlist provide a compelling user experience.
- Video playlist Media players typically try to generate an audio/video playlist (hereinafter ‘video playlist’) for a user by trying to identify videos a user may like to consume.
- a video playback program may try to identify videos that a user may be interested in by identifying videos listed in the user's social networking system feed, by identifying videos in previous playlists created by the user, or by identifying the user's video playback history in one or more media players.
- these recommendations often result in video playlists that are ordered either chronologically or by random shuffle. Therefore, such programs fail to sequence playlists in an aesthetically pleasing way.
- Some media players and information retrieval systems try to improve a chronological search result by promoting diversity within search results.
- Such programs produce a new ordering of a given set of items by presenting relevant results while simultaneously promoting diverse results to the top.
- the reordering is done independent of themes presented in the retrieved documents.
- Thematic diversity in retrieved videos, such as metal, soft rock, pop, hip-hop may be arranged in an aesthetically pleasing way; however, such systems provide no emphasis on the order in which these themes are presented.
- Some information retrieval programs try to sequence a playlist by stringing subsequences of videos together. For example, a program may analyze radio playlists to learn models of good subsequences of videos and assemble a playlist by stringing together subsequences from a library of video.
- Such programs fail to generate a sequence of videos from a fixed set of videos which may or may not include videos used in a radio playlist subsequence.
- Some systems use permutation modeling to generate a sequence of videos in a playlist. However, such systems are typically complex and it is difficult to implement such modeling to sequence a large quantity of videos on a regular basis.
- Embodiments of the present disclosure provide methods and systems for sequencing videos in a playlist.
- the method comprises extracting mood descriptors from adjectives associated with curated and uncurated playlists in a video repository.
- the mood descriptors generally provide a summary of musical attributes of most videos each playlist.
- the method provides for identifying curated playlists among the playlists in the video repository, wherein the curated playlists are ordered by a user.
- a classifier is trained from the extracted mood descriptors to generate dimensional mood features for each video in the curated playlists.
- the musical mood features are clustered and videos in curated playlists are mapped to each cluster. Thereafter, a transition matrix describing a frequency of transitions between the clusters for each curated playlist is generated. Sequencing a given playlist occurs by using the generated transition matrix and additionally using at least one of digraph routing, sampling and random walk sequencing methods.
- a computer program product comprises computer data signal physically embodied in a carrier wave, wherein the computer data signal comprises extracting mood descriptors from adjectives associated with curated and uncurated playlists in a video repository.
- the mood descriptors generally provide a summary of musical attributes of most videos each playlist.
- the computer program product comprises data signal that provides for identifying curated playlists among the playlists in the video repository, wherein the curated playlists are ordered by a user.
- the computer program product comprises data signals that provide a classifier is trained from the extracted mood descriptors to generate dimensional mood features for each video in the curated playlists.
- the musical mood features are clustered and videos in curated playlists are mapped to each cluster.
- a transition matrix describing a frequency of transitions between the clusters for each curated playlist is generated by the signals in the computer program product. Sequencing a given playlist occurs by using the generated transition matrix and additionally using at least one of digraph routing, sampling and random walk sequencing methods.
- FIG. 1 is block diagram of a system architecture for sequencing a playlist, in accordance with an embodiment.
- FIG. 2 is a block diagram of a sequencing engine, in accordance with an embodiment.
- FIG. 3 is a process diagram for sequencing a playlist, in accordance with an embodiment.
- FIG. 1 illustrates a system architecture of a video hosting service 100 in accordance with one embodiment of the present invention.
- a video hosting service 100 comprises a front end interface 102 , a video serving module 104 , a video search module 106 , an upload server 108 , a video sequencer 120 and a video repository 116 comprising videos 117 and playlists 118 , wherein each playlist 118 includes associated metadata 119 .
- the video hosting service 100 represents a system such as that of YOUTUBETM that stores and provides videos to users via a client device 135 .
- the video hosting service 100 communicates with a plurality of content providers 130 and client devices 135 via a network 140 to facilitate sharing of video content between users.
- the video hosting service 100 can additionally obtain data from various external web sites 125 .
- a user of the content provider device 130 provides video content to the video hosting service 100 and a (usually different) user uses a client device 135 (also referred to simply as “client”) to view that content.
- client device 135 also referred to simply as “client”
- content provider devices 130 may also be used to view content.
- a particular content provider device 130 may be operated by the same entity that operates the video hosting service 100 .
- Content provider functions may include, for example, uploading a video to the video hosting service 100 , editing a video stored by the video hosting service 100 , editing metadata information about a video, or editing content provider preferences associated with a video.
- a user may use a client device 135 (also referred to simply as “client”) to view the video.
- the video hosting service 100 may also provide additional functionality to its users to improve the user's viewing experience.
- the video hosting service 100 may enable users to create video playlists containing two or more videos.
- the users are enabled to curate the video playlists.
- the users are enabled arrange the videos within a playlist in an order that is aesthetically pleasing to the user.
- the users are also enabled to label or tag their playlists such that the playlists can be saved by the video hosting service 100 and retrieved by the users.
- the curated playlists and their associated labels serve as input data for classifier training performed by the video sequencer 120 and to sequence uncurated playlists stored with the video hosting service 100 .
- a client device 135 is a computing device that executes client software, e.g., a web browser or built-in client application, to connect to the video hosting service 100 via a network 140 and to display videos.
- client software e.g., a web browser or built-in client application
- the client device 135 might be, for example, a personal computer, a personal digital assistant, a cellular, mobile, or smart phone, a television “set-top box,” or a laptop computer.
- the client 135 includes an embedded video player such as, for example, the FLASH player from Adobe Systems, Inc. or any other player adapted for the video file formats used in the video hosting service 100 .
- client and content provider may refer to software providing client and content providing functionality, to hardware devices on which the software executes, or to the entities operating the software and/or hardware, as is apparent from the context in which the terms are used.
- the website 125 comprises one or more web pages accessible to the video hosting service 100 via the network 140 .
- the web pages comprise, for example, textual content such as HTML.
- the website may make available additional types of media content, such as general textual documents, presentations, audio files, image files, and the like.
- the video hosting service 100 uses curated playlists when training video classifiers.
- the video hosting service includes a front end interface 102 , a video serving module 104 , a video search module 106 , an upload server 108 , a video repository 116 and a video sequencer 120 .
- Other conventional features, such as firewalls, load balancers, authentication servers, application servers, failover servers, site management tools, and so forth are not shown so as to more clearly illustrate the features of the video hosting service 100 .
- One example of a suitable service 100 is the YOUTUBETM website, found at www.youtube.com.
- Other video hosting sites are known, as well, and can be adapted to operate according to the teachings disclosed herein.
- module refers to computational logic for providing the specified functionality.
- a module can be implemented in hardware, firmware, and/or software. It will be understood that the named modules described herein represent one embodiment of the present disclosure, and other embodiments may include other modules. In addition, other embodiments may lack modules described herein and/or distribute the described functionality among the modules in a different manner. Additionally, the functionalities attributed to more than one module can be incorporated into a single module. Where the modules described herein are implemented as software, the module can be implemented as a standalone program, but can also be implemented through other means, for example as part of a larger program, as a plurality of separate programs, or as one or more statically or dynamically linked libraries.
- the modules are stored on the computer readable persistent storage devices of the service 100 , loaded into memory, and executed by the one or more processors of the service's computers.
- the foregoing further applies to components described herein as “servers.”
- the various data processing operations described herein are sufficiently complex and time consuming as to require the operation of a computer system such as the system 100 in order to practice embodiments of the disclosure.
- the upload server 108 of the video hosting service 100 receives video content from a content provider 130 . Received content is stored in the video repository 116 .
- a video serving module 104 provides video data from the video repository 116 to the clients. Clients 135 may also search for videos of interest stored in the video repository 116 using a video search module 106 , such as by entering textual queries containing keywords of interest.
- the front end interface 102 provides the interface between client 135 and the various components of the video hosting service 100 .
- the video repository 116 contains a set of videos 117 submitted by content providers 130 .
- the video repository 116 can contain any number of videos 117 , such as tens of thousands or hundreds of millions.
- the video repository 116 is implemented using a database or file system, and indexing system for indexing and retrieving videos.
- Each of the videos 117 has a unique video identifier that distinguishes it from each of the other videos, such as a textual name (e.g., the string “a91qrx8”), an integer, or any other way of uniquely naming a video.
- the videos 117 can be packaged in various containers such as AVI, MP4, or MOV, and can be encoded using video codecs such as MPEG-2, MPEG-4, H.264, and the like.
- the video hosting service 100 further comprises a playlist sequencer 120 that trains a classifier to sequence videos in a playlist.
- the playlist sequencer 120 trains a classifier by identifying a curated playlist, extracting moods associated with the curated playlists, training mood classifiers. Additionally, the video sequencer 120 sequences a playlist based on the trained classifier and a sequencing method.
- the playlist sequencer 120 is described in greater detail in FIG. 2 .
- a user client 135 executes the browser 137 to access a website 125 , such as YOUTUBETM, to play videos in a playlist.
- a website 125 such as YOUTUBETM
- users sequence the playlist manually or shuffle the videos to play the videos in a random sequence.
- a playlist sequencer 120 of a video hosting service 100 may sequence the videos in an aesthetically pleasing manner for the user.
- the playlist sequencer 120 comprises a classifier training module 210 comprising a curated playlist identifier 212 , a mood extractor 214 , mood classifier trainer 216 , clustering module 217 and a transition matrix 218 .
- the playlist sequencer 120 also comprises a playlist sequencing module 220 comprising a digraph routing sequencer 222 , a sampling sequencer 224 and a random walk sequencer 226 .
- the curated playlist identifier 212 of the playlist sequencer 120 identifies curated playlists.
- a curated playlist comprises any list or ordering of a plurality of videos in a playlist that has been ordered by a user.
- the curated playlist identifier 212 examines, for example, public, music video playlists created on a video hosting server 100 such as YOUTUBETM to identify curated playlists.
- a video hosting server 100 tags each video in a playlist with a timestamp that indicates the date and time the video was added to the playlist, and its position on the playlist. It is assumed that most users add videos to a playlist without considering the order in which they are to be played.
- the curated playlist identifier 212 compares the chronological ordering of videos based on their timestamps to their final ordering in the user's playlist.
- the curated playlist identifier 212 identifies playlists as curated if their chronological ordering is different from their final ordering.
- playlists are identified as being curated if based on distances between a chronological ordering of videos in a playlists to their final ordering in the user's playlist.
- distances between two orderings of items There are several possible ways to define distances between two orderings of items. These include distances based on longest common subsequence, number of items or pairs that are out of order, number consecutive items that are out of order, etc.
- the curated playlist identifier 212 measures distance between sequences by penalizing a reordering if two consecutive elements are out of place, by counting the number of consecutive elements that are out of chronological order, and dividing that count by the total number of consecutive pairs in the sequence (which is always N ⁇ 1 for N elements).
- a playlist of 8 videos and 3 errors will have a distance of 0.43 as (3 errors divided by 7). It is noted, however, that a reordered sequence with 3 errors may be created by moving one video: for example, the sequence ⁇ A, B, C, D> if reordered to ⁇ A, C, B, D> has 3 errors, and a distance of 1 since there are 3 consecutive pairs.
- a typical video hosting server 100 will have about 75,000 curated playlists per one million music video playlists, with an average length of the playlists being between 26 and 30 videos, with approximately five million unique music videos in these playlists.
- the mood extractor 214 extracts moods or semantics associated with each curated playlists to enable training a classifier.
- Each video in a video hosting server 100 repository has an associated set of audio-video features. These features capture a variety of distinctive video and audio attributes. However, this representation is sparse, high-dimensional (10,000 features) and often redundant. It is beneficial therefore to also determine a video genre or mood (e.g., rap, rock, country, pop, fast, slow, happy, sad, etc) associated with each playlist.
- Many curated playlists in a video hosting server repository have informative descriptors, either through tags or titles associated with each playlist. The adjectives in the tags and titles are often effective summaries of the musical attributes of most videos in the playlists.
- the mood extractor 214 identifies the most frequently occurring adjectives associated with the curated playlists.
- the mood extractor 214 can obtain a high confidence list of between 100 and 150 music mood attributes from the curated playlist identified from the video hosting server 100 .
- the mood attribute can be obtained from a standard taxonomy of music genres and moods.
- the mood classifier 216 classifies videos to the musical moods extracted by the mood extractor 214 . For example, given the unique videos identified in curated playlists, the mood classifier 216 classifies each video to the music mood attributes.
- the mood classifier 216 may classify the videos using a variety of classifiers, including but not limited to training a corresponding number of one vs. all Adaboost to classify the videos, with one classifier assigned to each mood attribute.
- An Adaboost classifier is described in “Experiments with a new boosting algorithm” Y. Freund and R. E. Schapire, In Proceedings of the 13 th International Conference on Machine Learning, pages 148-156, 1996, and incorporated in its entirety herein.
- Each video is given a mood score by each of the mood classifiers, to create a vector representation (‘mood vector’) using the mood scores as vector components.
- the clustering module 217 clusters the videos in a music mood feature space, using any clustering method, including, but not limited to K-means clustering on the mood vectors to obtain a vector quantization of the feature space. For example, 500 clusters have been found sufficient for a collection of about 5 million unique videos identified from the curated playlists. A reduction in errors for additional clusters is generally insignificant compared to the increase in model complexity.
- the transition matrix module 218 identifies a probability of transitions between the clusters of videos in the mood space. Once the unique videos identified from curated playlists are mapped into one of the K clusters based on their mood features, the transition matrix module 218 learns a first order Markov chain model by counting transitions between clusters of video features. The transition matrix module 218 generates a transition matrix to describe the probability of transitions of a Markov chain, wherein the probability P i,j of a transition from a first cluster C i to second cluster C j is calculated by taking the number of transitions T i,j from the first cluster to a second cluster, divided by the total number of transitions T i from the first cluster to all other clusters.
- the transition matrix module 218 calculates a probability S i that a cluster C i will start a sequence or a playlist by identifying a number of playlists starting at a particular cluster C i and dividing it by the total number of playlists. Similarly, the transition matrix module 218 calculates a probability E i that a cluster C i will end a playlist by identifying a number of playlists ending at a particular cluster C i and dividing it by the total number of playlists.
- the Markov chain model learned by the transition matrix module 218 including transitions from one cluster to another and probabilities of a cluster starting or ending a playlist are utilized by all three sequencing algorithms described below.
- the playlists sequencing module sequences a set of videos using one of three different approaches.
- the playlist sequencing module 220 comprises a digraph routing sequencer 222 , a sampling sequencer 224 and a random walk sequencer 226 .
- Each sequencer illustrated in the playlist sequencing module 220 implements a sequencing technique that produces results that are a reasonable improvement over random shuffle.
- the digraph routing sequencer 222 sequences a set of videos by constructing a digraph using the Markov model learned by the transition matrix module 218 and ordering the videos by identifying a shortest path through the digraph such that each video is visited once. Given an unordered set of videos, the digraph routing sequencer 222 constructs a directed graph with videos as nodes and appends two special nodes to the graph, a start node and a stop node. The end node has a single outgoing edge to the start node and the start node has no other incoming edges. The digraph routing sequencer 222 obtains a semantic feature representation for each video in the graph and maps it to its nearest cluster center.
- Semantic features of a video and clusters are described in greater detail in reference to the mood extractor module 214 , the mood classifier 216 and the clustering module 217 .
- the start node is connected to every video node by an outgoing edge. Since the digraph routing sequencer 222 wants to encourage paths through the digraph that start at nodes with high probability of starting a sequence, the edges outgoing from the start nodes are weighted by an inverse of the start probability value calculated by the transition matrix 218 . Similarly, the end node has incoming edges from each video. The weight of each of these edges is an inverse of their probability to end a playlists as identified by the transition matrix.
- some videos in a given set of videos may belong to the same cluster. Therefore, they are interchangeable in a sequence or a playlist. For example, if two videos in a set of three videos belong to a same cluster, the third video has an equal probability to transition to either one of the videos in the same cluster. However, it is more natural for it to transition to a video that is nearest to it. Thus, it is useful to encourage not only transitions that are frequently observed in the model generated by the transition matrix module 218 , but also transitions between similar videos.
- the digraph routing sequencer 222 encourages such transitions by generating a transition matrix based on the similarities between videos in a set.
- the digraph routing sequencer 222 calculates a Euclidean distance between features of videos, wherein the scale to measure distance is variable and based on distances between a video and 10 of its nearest neighbors. Scale invariant similarity measure is described in “Self-tuning Spectral Clustering.” By L. Zelnik-Manor and P. Perona in Advances in Neural Information Processing Systems 17, pages 1601-1608, 2004 and incorporated in its entirety herein. The similarities are converted to random walk transition probabilities and a similarities based transition matrix is generated by the digraph routing sequencer 222 .
- the digraph routing sequencer 222 connects individual video nodes using a weight that in inversely proportional to a convex sum of transition probabilities based on the similarity based transition matrix calculated by the digraph routing sequencer 222 and the transition matrix calculated by the transition matrix module 218 .
- the digraph routing sequencer 222 sequences videos in a playlist by finding the shortest path through the digraph, starting at a start video node and ending at an end video node, such that each node in the digraph is visited only once.
- the digraph routing sequencer 222 uses an approximate solution to the traveling salesman problem to find the shortest path.
- An implementation of the digraph routing sequencer 222 typically takes less than 30 ms to sequence a set of 50 videos.
- the sampling sequencer 224 sequences a set of videos by generating several candidate sequences by sampling the Markov model learned by the transition matrix module 218 and selecting the most probable sequence.
- the sampling sequencer 224 uses videos in an uncurated video playlists as inputs, the Markov chain model generated by the classifier training module 210 as an algorithm and a budget to select a sampled sequence.
- the budget can either be the number of samples that the sampling sequencer 224 will generate before declaring a winner or a time limit after which the sampling sequencer 224 will generate a winner.
- the sampling sequencer 224 can be configured to generate 100 samples and pick a sample with the highest probability given the Markov model provided by the classifier training module 210 .
- the sampling sequencer 224 generates a probability based transition matrix similar to the transition matrix generated by the transition matrix module 218 .
- the probability based transition matrix is constructed as follows:
- M k ⁇ ( i , j ) T ⁇ ( l i , l j ) # ⁇ ⁇ of ⁇ ⁇ videos ⁇ ⁇ in ⁇ ⁇ the ⁇ ⁇ bag ⁇ l j ( 1 )
- T m k ⁇ ( i , j ) M k ⁇ ( i , j ) ⁇ j ⁇ ⁇ M k ⁇ ( i , j ) ( 2 )
- the sampling sequencer 224 starts with the probability based transition matrix and identifies a video to start the sequence, based on p start wherein the selected video has the highest probability of starting in a particular state. For index 2 to N ⁇ 1, the sampling sequencer 224 samples the next video in the sequence and updates the model since the number of videos belonging to a cluster in the bag may change. Note that the M k (i, j) value is set to zero if there are no videos in the bag belonging to the cluster l j . Similarly, the transition probability matrix based on similarities is also updated as each sample is generated.
- the sampling sequencer 224 samples each video from 2 to N ⁇ 1, it appends the last video to the end of the sequence, wherein the last video has the highest probability of ending the sequence as identified by its p end value.
- the sampling sequencer 224 scores the sequence using the original Markov model calculated by the classifier training module 210 . If the score for the sampled playlist is better than the other scores, the sequence is retained. If the score is lower, the playlist is discarded. As such, over several samples, the best scoring playlist is identified.
- the random walk sequencer 226 sequences a set of videos by reordering a set of videos by performing a diversity enhancing random walk on a graph wherein videos in the set represent nodes and using the Markov chain model learned by the playlist sequencing module 220 to define weights of connections between the nodes in the graph.
- the random walk sequencer 226 constructs a random walk matrix as a weighted sum of a similarity matrix generated by the digraph routing sequencer 222 and a prior matrix.
- the prior matrix is generated by utilizing play counts of individual videos to promote popular videos over unpopular ones.
- the prior value for each video is as follows:
- T grasshopper ⁇ T s +(1 ⁇ )1 p T (5)
- the random walk matrix is described in greater detail in “Improving diversity in ranking using absorbing random walks,” by X. Zhu, A. Goldberg, J. V. Gael and D. Andrzejewski in HLT-NAACL, pages 97-104 ; The Association for Computation Linguistics, 2007 and incorporated in its entirety herein.
- FIG. 3 illustrates the relationship between the various modules describe above, and data processing involved in the process of sequencing playlists according to one embodiment.
- the process begins with accessing 402 the video playlists.
- the video playlists may be created on a video hosting service described in FIG. 1 .
- the playlists may be curated or uncurated playlists. Curated playlists include playlists that have been arranged in a particular order by a user, whereas uncurated playlists are arranged simply in the chronological order in which the videos are added.
- the process identifies 404 curated video playlists amongst the received 402 video playlists.
- the process identifies 404 playlists as curated if its videos have a final ordering that is different than the order of when the videos were added to the playlists, that is if the final ordering is different from the chronological ordering.
- the process extracts 406 mood descriptors from informative descriptions associated with the curated playlists, using the most frequently occurring adjectives in the informative descriptions of playlists to identify moods associated with each playlist.
- the process computes 408 a set of mood classifiers, using videos associated with each mood as positive training examples for a corresponding mood classifier.
- each video in the curated playlists can be scored with each mood classifier, to generate 410 a mood vector for each video, where the components of the mood vector are the scores from the mood classifiers.
- the process generates 412 mood clusters by clustering the videos in a music mood feature space using their mood vectors.
- a transition matrix identifies a probability of transitions between the clusters of videos in the mood space, based on the number of transitions between clusters.
- the transition matrix stores for each pair of clusters (C i , C j ), a transition probability P i,j .
- transition matrix is generated 414 , the training portion is concluded and the process is enabled to sequence any given input playlists containing a given set videos based on the generated transition matrix.
- sequencing by digraph routing 418 sequencing by sampling 420 and sequencing by random walk analysis 422 .
- sequencing by sampling 420 sequencing by random walk analysis 422 .
- Each of the sequencing methods is described in greater detail below in reference to FIG. 3 .
- Each sequencing method produces results that are a reasonable improvement over random shuffle.
- the process sequences a playlist by digraph routing 418 by constructing a digraph using the Markov model learned during the training process and identifying a shortest path through the digraph such that each video is visited once.
- a transition matrix based on similarities between videos in a set is generated by calculating a Euclidean distance between features of videos, wherein the scale to measure distances is variable and based on distances between a video and its nearest neighbors.
- a random walk based on the Euclidean distances is more likely to go to videos that are close to it. Based on the random walk, the process generates a similarities based transition matrix.
- the process sequences 418 an unordered playlist by finding the shortest path through the digraph, starting at a start video node and ending at an end video node, with each video being visited once.
- An approximate solution to the traveling salesman problem is used to find the shortest path.
- An implementation of the process 418 typically takes less than 30 ms to sequence a set of 50 videos.
- An unordered playlist can also be sequenced by the sampling method 420 , wherein the sequence is selected from several candidate sequences generated from sampling the Markov model learned in the training phase of the process.
- the process uses videos of an unordered playlist as inputs to the Markov chain model learned during the training phase of the process and picks a sample with a highest probability. To identify probabilities of a sample, a probability based transition matrix is generated. If the probability score for the sampled playlist is better than the other scores, the sequence is retained. If the score is lower, the playlist is discarded. As such, over several samples, the best scoring playlist is identified by the sequencing by sampling 420 method.
- An unordered playlist can also be sequenced via a random walk 422 method.
- the process generates a graph using the Markov chain model learned during the training phase of the process, wherein the graph includes weights of connections between the nodes. Additionally, the process generates a random walk matrix as a weighted sum of a similarity matrix and a prior matrix, wherein the prior matrix is generated by utilizing play counts of individual videos.
- the videos in unordered sequences are sequenced based on the result of a random walk on the graph based on the generated random walk matrix.
- a software module is implemented with a computer program product comprising a computer-readable medium containing computer program code, which can be executed by a computer processor for performing any or all of the steps, operations, or processes described.
- Embodiments of the disclosure may also relate to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, and/or it may comprise a general-purpose computing device selectively activated or reconfigured by a computer program stored in the computer.
- a computer program may be stored in a tangible computer readable storage medium or any type of media suitable for storing electronic instructions, and coupled to a computer system bus.
- any computing systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- Embodiments of the disclosure may also relate to a computer data signal embodied in a carrier wave, where the computer data signal includes any embodiment of a computer program product or other data combination described herein.
- the computer data signal is a product that is presented in a tangible medium or carrier wave and modulated or otherwise encoded in the carrier wave, which is tangible, and transmitted according to any suitable transmission method.
Abstract
Description
T sample(i,j) k =λT m k+(1−λ)T s k (3)
T grasshopper =λT s+(1−λ)1p T (5)
Claims (16)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/559,429 US9165255B1 (en) | 2012-07-26 | 2012-07-26 | Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/559,429 US9165255B1 (en) | 2012-07-26 | 2012-07-26 | Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions |
Publications (1)
Publication Number | Publication Date |
---|---|
US9165255B1 true US9165255B1 (en) | 2015-10-20 |
Family
ID=54290386
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/559,429 Active 2033-12-26 US9165255B1 (en) | 2012-07-26 | 2012-07-26 | Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions |
Country Status (1)
Country | Link |
---|---|
US (1) | US9165255B1 (en) |
Cited By (33)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150220633A1 (en) * | 2013-03-14 | 2015-08-06 | Aperture Investments, Llc | Music selection and organization using rhythm, texture and pitch |
US20150324552A1 (en) * | 2014-05-12 | 2015-11-12 | Sonos, Inc. | Share Restriction for Media Items |
US20160196374A1 (en) * | 2015-01-01 | 2016-07-07 | Deutsche Telekom Ag | Synthetic data generation method |
US9659218B1 (en) * | 2015-04-29 | 2017-05-23 | Google Inc. | Predicting video start times for maximizing user engagement |
US20170263225A1 (en) * | 2015-09-29 | 2017-09-14 | Amper Music, Inc. | Toy instruments and music learning systems employing automated music composition engines driven by graphical icon based musical experience descriptors |
CN107391646A (en) * | 2017-07-13 | 2017-11-24 | 清华大学 | A kind of Semantic features extraction method and device of video image |
US10061476B2 (en) | 2013-03-14 | 2018-08-28 | Aperture Investments, Llc | Systems and methods for identifying, searching, organizing, selecting and distributing content based on mood |
US10097893B2 (en) | 2013-01-23 | 2018-10-09 | Sonos, Inc. | Media experience social interface |
US10126916B2 (en) | 2014-08-08 | 2018-11-13 | Sonos, Inc. | Social playback queues |
US10225328B2 (en) | 2013-03-14 | 2019-03-05 | Aperture Investments, Llc | Music selection and organization using audio fingerprints |
US10255358B2 (en) * | 2014-12-30 | 2019-04-09 | Facebook, Inc. | Systems and methods for clustering items associated with interactions |
CN109614904A (en) * | 2018-12-03 | 2019-04-12 | 东北大学 | A kind of activity recognition method of the Multi-sensor Fusion based on Shapelet |
US10360290B2 (en) | 2014-02-05 | 2019-07-23 | Sonos, Inc. | Remote creation of a playback queue for a future event |
US20190253760A1 (en) * | 2018-02-12 | 2019-08-15 | Beijing Baidu Netcom Science And Technology Co., Ltd. | Method and apparatus for recommending video |
US10623480B2 (en) | 2013-03-14 | 2020-04-14 | Aperture Investments, Llc | Music categorization using rhythm, texture and pitch |
US10645130B2 (en) | 2014-09-24 | 2020-05-05 | Sonos, Inc. | Playback updates |
CN111444388A (en) * | 2020-03-30 | 2020-07-24 | 杭州趣维科技有限公司 | Video tag sorting method based on random walk |
US10762129B2 (en) | 2014-03-05 | 2020-09-01 | Sonos, Inc. | Webpage media playback |
US10846046B2 (en) | 2014-09-24 | 2020-11-24 | Sonos, Inc. | Media item context in social media posts |
US10854180B2 (en) | 2015-09-29 | 2020-12-01 | Amper Music, Inc. | Method of and system for controlling the qualities of musical energy embodied in and expressed by digital music to be automatically composed and generated by an automated music composition and generation engine |
US10873612B2 (en) | 2014-09-24 | 2020-12-22 | Sonos, Inc. | Indicating an association between a social-media account and a media playback system |
US10964299B1 (en) | 2019-10-15 | 2021-03-30 | Shutterstock, Inc. | Method of and system for automatically generating digital performances of music compositions using notes selected from virtual musical instruments based on the music-theoretic states of the music compositions |
US11024275B2 (en) | 2019-10-15 | 2021-06-01 | Shutterstock, Inc. | Method of digitally performing a music composition using virtual musical instruments having performance logic executing within a virtual musical instrument (VMI) library management system |
US11037538B2 (en) | 2019-10-15 | 2021-06-15 | Shutterstock, Inc. | Method of and system for automated musical arrangement and musical instrument performance style transformation supported within an automated music performance system |
US11134291B2 (en) | 2014-09-24 | 2021-09-28 | Sonos, Inc. | Social media queue |
US20210312318A1 (en) * | 2020-04-02 | 2021-10-07 | Rovi Guides, Inc. | Systems and methods for automated content curation using signature analysis |
US11190564B2 (en) | 2014-06-05 | 2021-11-30 | Sonos, Inc. | Multimedia content distribution system and method |
US11205103B2 (en) | 2016-12-09 | 2021-12-21 | The Research Foundation for the State University | Semisupervised autoencoder for sentiment analysis |
US11223661B2 (en) | 2014-09-24 | 2022-01-11 | Sonos, Inc. | Social media connection recommendations based on playback information |
US11238287B2 (en) * | 2020-04-02 | 2022-02-01 | Rovi Guides, Inc. | Systems and methods for automated content curation using signature analysis |
US11271993B2 (en) | 2013-03-14 | 2022-03-08 | Aperture Investments, Llc | Streaming music categorization using rhythm, texture and pitch |
US11609948B2 (en) | 2014-03-27 | 2023-03-21 | Aperture Investments, Llc | Music streaming, playlist creation and streaming architecture |
US20230412885A1 (en) * | 2022-05-18 | 2023-12-21 | Lemon Inc. | Automatic identification of video series |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6446080B1 (en) * | 1998-05-08 | 2002-09-03 | Sony Corporation | Method for creating, modifying, and playing a custom playlist, saved as a virtual CD, to be played by a digital audio/visual actuator device |
US20030093790A1 (en) * | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20080115173A1 (en) * | 2006-11-10 | 2008-05-15 | Guideworks Llc | Systems and methods for using playlists |
-
2012
- 2012-07-26 US US13/559,429 patent/US9165255B1/en active Active
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6446080B1 (en) * | 1998-05-08 | 2002-09-03 | Sony Corporation | Method for creating, modifying, and playing a custom playlist, saved as a virtual CD, to be played by a digital audio/visual actuator device |
US20030093790A1 (en) * | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20080115173A1 (en) * | 2006-11-10 | 2008-05-15 | Guideworks Llc | Systems and methods for using playlists |
Non-Patent Citations (8)
Title |
---|
Freund, Y., et al., "Experiments with a new boosting algorithm," In Proceedings of the 13th International Conference on Machine Learning, 1996, pp. 148-156. |
Jain, A. K., et al., "Algorithms for clustering data," Prentice-Hall, Inc., Upper Saddle River, NJ, USA, 1988, Title page, Cover page and Table of Contents. |
Kamie et al. Effective Web Video Clustering using Playlist Information. SAC'12, pp. 949-956, Mar. 25-29, 2012. * |
Maillet, F. G. D., et al., "Steerable playlist generation by learning song similarity from radio station playlists," In Proceedings of the 10th International Conference on Music Information Retrieval, 2009, pp. 148-156. |
Ragno et al. Inferring Similarity Between Music Objects with Application to Playlist Generation. Proc. ACM Workshop on Multimedia Information Retrieval, pp. 8, 2005. * |
Zelnik-Manor, L., et al., "Self-tuning spectral clustering," In Advances in Neural Information Processing Systems 17, 2004, pp. 1601-1608. |
Zhai, C., et al., "Beyond independent relevance: Methods and evaluation metrics for subtopic retrieval," In Proceedings of SIGIR, 2003, pp. 10-17. |
Zhu, X., et al., "Improving diversity in ranking using absorbing random walks," In HLT-NAACL, 2007, pp. 97-104. The Association for Computational Linguistics. |
Cited By (77)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10097893B2 (en) | 2013-01-23 | 2018-10-09 | Sonos, Inc. | Media experience social interface |
US11032617B2 (en) | 2013-01-23 | 2021-06-08 | Sonos, Inc. | Multiple household management |
US11445261B2 (en) | 2013-01-23 | 2022-09-13 | Sonos, Inc. | Multiple household management |
US10587928B2 (en) | 2013-01-23 | 2020-03-10 | Sonos, Inc. | Multiple household management |
US10341736B2 (en) | 2013-01-23 | 2019-07-02 | Sonos, Inc. | Multiple household management interface |
US11889160B2 (en) | 2013-01-23 | 2024-01-30 | Sonos, Inc. | Multiple household management |
US10242097B2 (en) * | 2013-03-14 | 2019-03-26 | Aperture Investments, Llc | Music selection and organization using rhythm, texture and pitch |
US20150220633A1 (en) * | 2013-03-14 | 2015-08-06 | Aperture Investments, Llc | Music selection and organization using rhythm, texture and pitch |
US11271993B2 (en) | 2013-03-14 | 2022-03-08 | Aperture Investments, Llc | Streaming music categorization using rhythm, texture and pitch |
US10225328B2 (en) | 2013-03-14 | 2019-03-05 | Aperture Investments, Llc | Music selection and organization using audio fingerprints |
US10061476B2 (en) | 2013-03-14 | 2018-08-28 | Aperture Investments, Llc | Systems and methods for identifying, searching, organizing, selecting and distributing content based on mood |
US10623480B2 (en) | 2013-03-14 | 2020-04-14 | Aperture Investments, Llc | Music categorization using rhythm, texture and pitch |
US10872194B2 (en) | 2014-02-05 | 2020-12-22 | Sonos, Inc. | Remote creation of a playback queue for a future event |
US10360290B2 (en) | 2014-02-05 | 2019-07-23 | Sonos, Inc. | Remote creation of a playback queue for a future event |
US11734494B2 (en) | 2014-02-05 | 2023-08-22 | Sonos, Inc. | Remote creation of a playback queue for an event |
US11182534B2 (en) | 2014-02-05 | 2021-11-23 | Sonos, Inc. | Remote creation of a playback queue for an event |
US11782977B2 (en) | 2014-03-05 | 2023-10-10 | Sonos, Inc. | Webpage media playback |
US10762129B2 (en) | 2014-03-05 | 2020-09-01 | Sonos, Inc. | Webpage media playback |
US11609948B2 (en) | 2014-03-27 | 2023-03-21 | Aperture Investments, Llc | Music streaming, playlist creation and streaming architecture |
US11899713B2 (en) | 2014-03-27 | 2024-02-13 | Aperture Investments, Llc | Music streaming, playlist creation and streaming architecture |
US11188621B2 (en) * | 2014-05-12 | 2021-11-30 | Sonos, Inc. | Share restriction for curated playlists |
US20150324552A1 (en) * | 2014-05-12 | 2015-11-12 | Sonos, Inc. | Share Restriction for Media Items |
US10621310B2 (en) * | 2014-05-12 | 2020-04-14 | Sonos, Inc. | Share restriction for curated playlists |
US20190073453A1 (en) * | 2014-05-12 | 2019-03-07 | Sonos, Inc. | Share Restriction for Curated Playlists |
US11190564B2 (en) | 2014-06-05 | 2021-11-30 | Sonos, Inc. | Multimedia content distribution system and method |
US11899708B2 (en) | 2014-06-05 | 2024-02-13 | Sonos, Inc. | Multimedia content distribution system and method |
US10866698B2 (en) | 2014-08-08 | 2020-12-15 | Sonos, Inc. | Social playback queues |
US10126916B2 (en) | 2014-08-08 | 2018-11-13 | Sonos, Inc. | Social playback queues |
US11360643B2 (en) | 2014-08-08 | 2022-06-14 | Sonos, Inc. | Social playback queues |
US11960704B2 (en) | 2014-08-08 | 2024-04-16 | Sonos, Inc. | Social playback queues |
US11539767B2 (en) | 2014-09-24 | 2022-12-27 | Sonos, Inc. | Social media connection recommendations based on playback information |
US11223661B2 (en) | 2014-09-24 | 2022-01-11 | Sonos, Inc. | Social media connection recommendations based on playback information |
US10846046B2 (en) | 2014-09-24 | 2020-11-24 | Sonos, Inc. | Media item context in social media posts |
US10873612B2 (en) | 2014-09-24 | 2020-12-22 | Sonos, Inc. | Indicating an association between a social-media account and a media playback system |
US11451597B2 (en) | 2014-09-24 | 2022-09-20 | Sonos, Inc. | Playback updates |
US11431771B2 (en) | 2014-09-24 | 2022-08-30 | Sonos, Inc. | Indicating an association between a social-media account and a media playback system |
US10645130B2 (en) | 2014-09-24 | 2020-05-05 | Sonos, Inc. | Playback updates |
US11134291B2 (en) | 2014-09-24 | 2021-09-28 | Sonos, Inc. | Social media queue |
US11106720B2 (en) | 2014-12-30 | 2021-08-31 | Facebook, Inc. | Systems and methods for clustering items associated with interactions |
US10255358B2 (en) * | 2014-12-30 | 2019-04-09 | Facebook, Inc. | Systems and methods for clustering items associated with interactions |
US10489524B2 (en) * | 2015-01-01 | 2019-11-26 | Deutsche Telekom Ag | Synthetic data generation method |
US20160196374A1 (en) * | 2015-01-01 | 2016-07-07 | Deutsche Telekom Ag | Synthetic data generation method |
US9659218B1 (en) * | 2015-04-29 | 2017-05-23 | Google Inc. | Predicting video start times for maximizing user engagement |
US10390067B1 (en) | 2015-04-29 | 2019-08-20 | Google Llc | Predicting video start times for maximizing user engagement |
US10467998B2 (en) | 2015-09-29 | 2019-11-05 | Amper Music, Inc. | Automated music composition and generation system for spotting digital media objects and event markers using emotion-type, style-type, timing-type and accent-type musical experience descriptors that characterize the digital music to be automatically composed and generated by the system |
US11657787B2 (en) | 2015-09-29 | 2023-05-23 | Shutterstock, Inc. | Method of and system for automatically generating music compositions and productions using lyrical input and music experience descriptors |
US11037541B2 (en) * | 2015-09-29 | 2021-06-15 | Shutterstock, Inc. | Method of composing a piece of digital music using musical experience descriptors to indicate what, when and how musical events should appear in the piece of digital music automatically composed and generated by an automated music composition and generation system |
US20170263225A1 (en) * | 2015-09-29 | 2017-09-14 | Amper Music, Inc. | Toy instruments and music learning systems employing automated music composition engines driven by graphical icon based musical experience descriptors |
US11776518B2 (en) | 2015-09-29 | 2023-10-03 | Shutterstock, Inc. | Automated music composition and generation system employing virtual musical instrument libraries for producing notes contained in the digital pieces of automatically composed music |
US11037540B2 (en) | 2015-09-29 | 2021-06-15 | Shutterstock, Inc. | Automated music composition and generation systems, engines and methods employing parameter mapping configurations to enable automated music composition and generation |
US11030984B2 (en) * | 2015-09-29 | 2021-06-08 | Shutterstock, Inc. | Method of scoring digital media objects using musical experience descriptors to indicate what, where and when musical events should appear in pieces of digital music automatically composed and generated by an automated music composition and generation system |
US10311842B2 (en) | 2015-09-29 | 2019-06-04 | Amper Music, Inc. | System and process for embedding electronic messages and documents with pieces of digital music automatically composed and generated by an automated music composition and generation engine driven by user-specified emotion-type and style-type musical experience descriptors |
US10262641B2 (en) * | 2015-09-29 | 2019-04-16 | Amper Music, Inc. | Music composition and generation instruments and music learning systems employing automated music composition engines driven by graphical icon based musical experience descriptors |
US11468871B2 (en) | 2015-09-29 | 2022-10-11 | Shutterstock, Inc. | Automated music composition and generation system employing an instrument selector for automatically selecting virtual instruments from a library of virtual instruments to perform the notes of the composed piece of digital music |
US11017750B2 (en) | 2015-09-29 | 2021-05-25 | Shutterstock, Inc. | Method of automatically confirming the uniqueness of digital pieces of music produced by an automated music composition and generation system while satisfying the creative intentions of system users |
US11651757B2 (en) | 2015-09-29 | 2023-05-16 | Shutterstock, Inc. | Automated music composition and generation system driven by lyrical input |
US11011144B2 (en) | 2015-09-29 | 2021-05-18 | Shutterstock, Inc. | Automated music composition and generation system supporting automated generation of musical kernels for use in replicating future music compositions and production environments |
US10672371B2 (en) | 2015-09-29 | 2020-06-02 | Amper Music, Inc. | Method of and system for spotting digital media objects and event markers using musical experience descriptors to characterize digital music to be automatically composed and generated by an automated music composition and generation engine |
US11430419B2 (en) | 2015-09-29 | 2022-08-30 | Shutterstock, Inc. | Automatically managing the musical tastes and preferences of a population of users requesting digital pieces of music automatically composed and generated by an automated music composition and generation system |
US11430418B2 (en) | 2015-09-29 | 2022-08-30 | Shutterstock, Inc. | Automatically managing the musical tastes and preferences of system users based on user feedback and autonomous analysis of music automatically composed and generated by an automated music composition and generation system |
US10854180B2 (en) | 2015-09-29 | 2020-12-01 | Amper Music, Inc. | Method of and system for controlling the qualities of musical energy embodied in and expressed by digital music to be automatically composed and generated by an automated music composition and generation engine |
US11037539B2 (en) | 2015-09-29 | 2021-06-15 | Shutterstock, Inc. | Autonomous music composition and performance system employing real-time analysis of a musical performance to automatically compose and perform music to accompany the musical performance |
US11205103B2 (en) | 2016-12-09 | 2021-12-21 | The Research Foundation for the State University | Semisupervised autoencoder for sentiment analysis |
CN107391646B (en) * | 2017-07-13 | 2020-04-10 | 清华大学 | Semantic information extraction method and device for video image |
CN107391646A (en) * | 2017-07-13 | 2017-11-24 | 清华大学 | A kind of Semantic features extraction method and device of video image |
US11310559B2 (en) * | 2018-02-12 | 2022-04-19 | Beijing Baidu Netcom Science & Technology Co., Ltd | Method and apparatus for recommending video |
US20190253760A1 (en) * | 2018-02-12 | 2019-08-15 | Beijing Baidu Netcom Science And Technology Co., Ltd. | Method and apparatus for recommending video |
CN109614904A (en) * | 2018-12-03 | 2019-04-12 | 东北大学 | A kind of activity recognition method of the Multi-sensor Fusion based on Shapelet |
US10964299B1 (en) | 2019-10-15 | 2021-03-30 | Shutterstock, Inc. | Method of and system for automatically generating digital performances of music compositions using notes selected from virtual musical instruments based on the music-theoretic states of the music compositions |
US11024275B2 (en) | 2019-10-15 | 2021-06-01 | Shutterstock, Inc. | Method of digitally performing a music composition using virtual musical instruments having performance logic executing within a virtual musical instrument (VMI) library management system |
US11037538B2 (en) | 2019-10-15 | 2021-06-15 | Shutterstock, Inc. | Method of and system for automated musical arrangement and musical instrument performance style transformation supported within an automated music performance system |
CN111444388A (en) * | 2020-03-30 | 2020-07-24 | 杭州趣维科技有限公司 | Video tag sorting method based on random walk |
CN111444388B (en) * | 2020-03-30 | 2023-06-30 | 杭州小影创新科技股份有限公司 | Video tag ordering method based on random walk |
US11574248B2 (en) * | 2020-04-02 | 2023-02-07 | Rovi Guides, Inc. | Systems and methods for automated content curation using signature analysis |
US11238287B2 (en) * | 2020-04-02 | 2022-02-01 | Rovi Guides, Inc. | Systems and methods for automated content curation using signature analysis |
US20210312318A1 (en) * | 2020-04-02 | 2021-10-07 | Rovi Guides, Inc. | Systems and methods for automated content curation using signature analysis |
US20230412885A1 (en) * | 2022-05-18 | 2023-12-21 | Lemon Inc. | Automatic identification of video series |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9165255B1 (en) | Automatic sequencing of video playlists based on mood classification of each video and video cluster transitions | |
US11151145B2 (en) | Tag selection and recommendation to a user of a content hosting service | |
US11645301B2 (en) | Cross media recommendation | |
US9148619B2 (en) | Music soundtrack recommendation engine for videos | |
US11949964B2 (en) | Generating action tags for digital videos | |
US11023523B2 (en) | Video content retrieval system | |
US10515133B1 (en) | Systems and methods for automatically suggesting metadata for media content | |
US7707162B2 (en) | Method and apparatus for classifying multimedia artifacts using ontology selection and semantic classification | |
US8949198B2 (en) | Systems and methods for building a universal multimedia learner | |
US8819024B1 (en) | Learning category classifiers for a video corpus | |
US9087297B1 (en) | Accurate video concept recognition via classifier combination | |
AU2011326430B2 (en) | Learning tags for video annotation using latent subtags | |
US8473981B1 (en) | Augmenting metadata of digital media objects using per object classifiers | |
Pedro et al. | Content redundancy in YouTube and its application to video tagging | |
Choi et al. | A spatio-temporal pyramid matching for video retrieval | |
Hazrati et al. | Addressing the New Item problem in video recommender systems by incorporation of visual features with restricted Boltzmann machines | |
Shen et al. | Accurate online video tagging via probabilistic hybrid modeling | |
Lin et al. | Association rule mining with a correlation-based interestingness measure for video semantic concept detection | |
Afzal et al. | Web video classification with visual and contextual semantics | |
Pichl | Multi-Context-Aware Recommender Systems: A Study on Music Rfecommendation | |
Chen | Automatic annotation of online multimedia data with similarity relations | |
Chang | Improving Prediction, Recommendation, and Classification using User-generated Content and Relationships | |
Qiu | Visual Semantic Complex Network for Web Images | |
Huang et al. | Xiangmin Zhou, Lei Chen, Yanchun Zhang, Dong Qin, Longbing Cao | |
Muneesawang et al. | Audio-Visual Fusion for Film Database Retrieval and Classification |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SHETTY, SANKETH;LIN, RUEI-SUNG;ROSS, DAVID A.;AND OTHERS;SIGNING DATES FROM 20120822 TO 20120830;REEL/FRAME:028956/0592 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
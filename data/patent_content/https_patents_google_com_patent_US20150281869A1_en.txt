US20150281869A1 - Native web-based application - Google Patents
Native web-based application Download PDFInfo
- Publication number
- US20150281869A1 US20150281869A1 US14/231,582 US201414231582A US2015281869A1 US 20150281869 A1 US20150281869 A1 US 20150281869A1 US 201414231582 A US201414231582 A US 201414231582A US 2015281869 A1 US2015281869 A1 US 2015281869A1
- Authority
- US
- United States
- Prior art keywords
- app
- native
- mobile device
- web app
- native web
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/60—Subscription-based services using application servers or record carriers, e.g. SIM application toolkits
-
- H04W4/003—
-
- H04W4/001—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W4/00—Services specially adapted for wireless communication networks; Facilities therefor
- H04W4/50—Service provisioning or reconfiguring
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W80/00—Wireless network protocols or protocol adaptations to wireless operation
- H04W80/08—Upper layer protocols
- H04W80/12—Application layer protocols, e.g. WAP [Wireless Application Protocol]
Definitions
- An app store offered through a mobile device provides an array of native apps to a user. These native apps may be purchased through the app store and installed at the mobile device. Additionally, various websites accessible through a native browser app, at the mobile device, also provide app functionality similar to a native app, but they are typically developed for the web and thus only accessible through the web browser app.
- the disclosed subject matter relates to a machine-implemented method including receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the native web app providing functionality associated with a web app associated with a uniform resource locator (“URL”), wherein the web app provides a set of content displayable by a browser app at a user mobile device.
- the method may further include accessing the native web app, the native web app including a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode and a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using the URL.
- the method may further include providing the set of permissions for display to the user in response to the request.
- the method may further include receiving an acceptance of one or more permissions of the set of permissions from the user.
- the method may further include installing the native web app on the first mobile device in response to receiving the acceptance.
- the disclosed subject matter also relates to a system including one or more processors and a machine-readable medium comprising instructions stored therein, which when executed by the processors, cause the processors to perform operations comprising receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app.
- apps native web application
- the operations may further include accessing the native web app, the native web app including a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode and a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using a uniform resource locator (“URL”) associated with the web app.
- the operations may further include providing the set of permissions for display to the user in response to the request.
- the operations may further include receiving an acceptance of the permission for displaying the browser app in full screen mode.
- the operations may further include installing the native web app on the first mobile device in response to receiving the acceptance.
- the operations may further include displaying an icon associated with the native web app on the first mobile device in response to installing the native web app.
- the disclosed subject matter also relates to a machine-readable medium including instructions stored therein, which when executed by a machine, cause the machine to perform operations including receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app.
- apps native web application
- the operations may further include accessing the native app, the native web app comprising a manifest file including a set of permissions, the permissions including a permission for displaying a browser app at a mobile device in full screen mode and a set of instructions including instructions for launching a browser app in full screen mode using a uniform resource locator (“URL”) associated with the web app.
- the operations may further include providing the set of permissions for display to the user in response to the request.
- the operations may further include installing the native web app on the first mobile device.
- FIG. 1 illustrates an example client-server network environment, which provides for generating a native web application at a mobile device that behaves similar to a native application.
- FIG. 2 illustrates a flow diagram of an example process for generating a native web application.
- FIG. 3 illustrates a flow diagram of an example process for facilitating installation of a native web application at a user mobile device.
- FIG. 4 illustrates a flow diagram of an example process for facilitating launching a native web application at a user mobile device.
- FIG. 5 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented.
- a native application (“native app”) is an application (“app”) for a mobile device (smartphone, tablet, etc.) directly installed onto the device. These apps are usually obtained through an online app store or marketplace (hereinafter generally referred to as “app store”). The native apps are downloaded from the app store and installed on the user mobile device. Web applications (“web apps”) refer to Internet-enabled apps that have specific functionality for mobile devices. Web apps are accessed through the mobile device's web browser, rather than being downloaded and installed on the device.
- Native apps provide certain advantages over web apps. For example, native apps are typically more easily discoverable (e.g., through app stores), and because they are developed to act as standalone apps, they usually have a look and feel that is both easy to operate and accessible. Additionally, native apps are able to interface with the mobile device native features, information and hardware, whereas web apps may have only limited access to such native features.
- the web browser at the mobile device may provide a user with an option to add a shortcut to the website associated with the web app to their main menu (e.g., home screen), such that a link (e.g., a shortcut icon) to the website is placed along with native apps on the user's menu and thus easily accessible.
- main menu e.g., home screen
- Native apps are typically developed using platform specific development processes, including a specific platform specific language, standardized software development kits (SDKs), development tools and common user interface elements.
- web apps are usually written in a language or framework of the developer's choice (e.g., HTML5, CSS3, JavaScript, PHP, Rails, Python). Because native apps and web apps are developed using different technologies, where an app owner wishes to have a native app and web app, the owner will have to develop each app separately using the specific technology for that platform or application type (e.g., native app or web app).
- the present disclosure facilitates leveraging the benefits of native apps, with respect to apps developed for the web.
- Methods and systems are provided for generating a native app based on a web app.
- An app developer is able to generate a native web-based application (“native web app”) from their existing web app.
- the native web app includes a very thin layer, made up of a single manifest file and limited code which initiates launching the browser in full screen mode with the URL of an existing web app.
- the native web app can then be submitted to the app store and run as a native app.
- the embedded URL is used to launch the native web app by accessing the web browser and launching the web app in full screen mode.
- the permissions include a permission to launch the browser application in full screen mode.
- the native web app will launch as a standalone native web app, which operates as a native app.
- the native web app will be displayed as a full screen app providing the services, information, and functionality of the website associated with the web app. That is, instead of being rerouted to a browser window to view and/or interact with the URL associated with the native web app, the user is presented with a full screen app and may interact with the app independent from a browser window of the browser app.
- the native web app is treated as a standalone app running at the mobile device. Accordingly, when the native web app is running, it will be presented as a standalone app within the list of running apps independent from the browser app running at the mobile device. In some examples, the app will be displayed using the unique title and/or logo assigned to the app within the manifest file.
- a native web app may be developed from an existing web app.
- FIG. 1 illustrates an example client-server network environment, which provides for generating a native web app at a mobile device that behaves similar to a native app.
- the network environment 100 includes a client device 110 communicably connected to a server 120 , and one or more remote servers 140 by a network 130 .
- client device 110 can be a mobile computing device such as smartphones, PDAs, portable media players, tablet computers, or other appropriate mobile computing devices.
- client device 110 is depicted as a smartphone.
- the client device 110 includes a processing device that executes computer instructions for generating a native web app that behaves similar to a native app.
- the processing device 110 further includes a memory for storing information regarding one or more native apps and/or web apps, and computer instructions for generating a native web app that behaves similar to a native app.
- the processing device may execute one or more native apps and an embedded web browser.
- server 120 includes a processing device and data stores, for example, to facilitate managing native web app requests from client device 110 .
- Server 120 may be in communication with remote servers (e.g., remote servers 140 ) or various other client devices either through the network 130 or through another network or communication means.
- Remote servers 140 may host one or more web servers, native apps, app stores or other client apps or services running on the client device 110 , or in connection with the server 120 . Remote servers 140 may be in communication with the client device 110 or server 120 through various communication means, including network 130 .
- server 120 and/or remote servers 140 can be a single computing device such as a computer server. In other implementations, server 120 and/or remote servers 140 can represent more than one computing device working together to perform the actions of a server computer (e.g., cloud computing). Server 120 and/or remote servers 140 may be coupled with various remote databases or storage services. It should be understood that the functions performed by the server 120 and/or remote servers 140 may be performed within a single server, or across multiple servers.
- client device 110 may communicate wirelessly through a communication interface (not shown), which may include digital signal processing circuitry where necessary.
- the communication interface may provide for communications under various modes or protocols, including Global System for Mobile communication (GSM) voice calls, Short Message Service (SMS), Enhanced Messaging Service (EMS), or Multimedia Messaging Service (MMS) messaging, Code Division Multiple Access (CDMA), Time Division Multiple Access (TDMA), Personal Digital Cellular (PDC), Wideband Code Division Multiple Access (WCDMA), CDMA2000, or General Packet Radio System (GPRS), among others.
- GSM Global System for Mobile communication
- SMS Short Message Service
- EMS Enhanced Messaging Service
- MMS Multimedia Messaging Service
- CDMA Code Division Multiple Access
- TDMA Time Division Multiple Access
- PDC Personal Digital Cellular
- WCDMA Wideband Code Division Multiple Access
- CDMA2000 Code Division Multiple Access 2000
- GPRS General Packet Radio System
- the network 130 can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like. Further, the network 130 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like.
- PAN personal area network
- LAN local area network
- CAN campus area network
- MAN metropolitan area network
- WAN wide area network
- BBN broadband network
- the Internet and the like.
- the network 130 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like.
- the user may locate and request to install a native web app through an app store (e.g., hosted by server 110 and/or one or more remote servers 140 ).
- the native web app may include a manifest file and a set of instructions.
- the manifest file of the native web app may include permissions for the native web app.
- the permissions include a permission to run the web browser at the client device in full screen mode.
- the manifest file is retrieved from the app store and the permissions for the native web app are provided for display to the user.
- the native web app is downloaded from the app store and installed at the client device 110 .
- the manifest file may further include a unique name and logo for the native web app.
- the native web app is installed at the client device 110 using the name and logo indicated within the manifest file. Once the user selects to launch the native web app at client device 110 , the set of instructions of the native web app causes the web browser at the client device 110 to be launched in full screen mode and to display the web app (e.g., one or more web pages) associated with the URL of the native web app.
- FIG. 2 illustrates a flow diagram of an example process 200 for generating a native web app.
- a URL associated with a web app is identified.
- the URL may be associated with a home page or main page of a website providing content of a web app for display to the user.
- a manifest file associated with the web app is generated.
- the manifest file includes one or more permissions.
- the permissions may grant permissions for an app (e.g., the native web app) to gather and use information about a client mobile device of a user (e.g., the device it will be running on). This information allows the app to integrate with the device, and/or other apps running on the device.
- the information may for example include security information about the device (e.g., PIN, serial number, etc.), information regarding other apps running on the device (e.g., calendar, contacts, email, messenger, camera, etc.), information regarding the device surroundings (e.g., location, positioning information, etc.), and other similar information.
- the permissions further include a full screen browser app permission. This permission grants the web app permission to open the browser app at the mobile device (e.g., embedded and/or native) in full screen mode.
- a unique name and/or logo for the native web app may be specified in the manifest file.
- the manifest file may further include intents to serve one or more other apps (e.g., URLs or native app calls).
- a set of instructions associated with the web app is generated.
- the set of instructions includes code for launching the URL identified in step 201 , using the browser app at the device in full screen mode.
- the web app made up of the manifest file and set of instructions generated in steps 202 and 203 are submitted to one or more app stores that facilitate access to the native web app (e.g., to install and launch the native web app at a user mobile device).
- a name and/or logo e.g., the same name and/or logo specified in the manifest file
- FIG. 3 illustrates a flow diagram of an example process 300 for facilitating installation of a native web app at a user mobile device.
- step 301 an indication of a user request to install a native web app is received.
- an app store or marketplace may be accessible through the user mobile device and provide an array of native apps for installation at the user mobile device.
- the user may search for or otherwise locate a native web app (e.g., the native web app generated according to FIG. 2 above) from the app store.
- the app store accesses the native web app and provides a graphical representation of the native web app for display to the user.
- the native web app may be displayed using a name and/or logo specified when the native web app is submitted to the app store.
- the manifest file of the native web app may be accessed to determine the name and/or logo for displaying the native web app to the user within the app store.
- the user may select to install the native web app to the user mobile device.
- the selection may include agreeing to purchase and/or install the native web app.
- a list of permissions associated with the native web app are provided for display to the user at the mobile device.
- a manifest file associated with the native web app is accessed, and a list of permissions associated with the native web app are accessed and provided for display to the user.
- the list of permissions in one example, includes a full screen permission for launching a browser app at the mobile device in full screen mode.
- step 303 an indication of user acceptance of the permissions listed in the list of permissions provided in step 302 are received.
- the user may accept to grant the permissions.
- the user is able to select which permissions to grant from the list of permissions.
- some permissions such as the full screen permission may be required permissions such that the user is required to accept the permission before the native web app may be installed at the user mobile device.
- the native web app is installed at the user mobile device.
- the manifest file of the web app includes information regarding the logo and/or name to be used on the mobile device when the native web app is installed.
- the native web app is installed, in some implementations, in the same location as other native apps.
- the app is installed at the home screen of the mobile device.
- the user may launch the installed native web app and begin to interact with the content of the native web app.
- FIG. 4 illustrates a flow diagram of an example process 400 for facilitating launching a native web app at a user mobile device.
- a request to launch a native web app is received at the user mobile device.
- the request may include a user request.
- the user may access the app installed at the main menu (e.g., a homepage) of the mobile device and select to launch the web app.
- step 402 the URL associated with the native web app is accessed and in step 403 , the browser at the user mobile device is launched in full screen mode using the URL.
- the set of instructions of the native web app are executed.
- the set of instructions include a command to launch the browser app in full screen mode using the URL associated with the native web app.
- the app may further be launched in response to a selection to launch the app when a URL and/or app being listed as being served by the native web app is identified.
- the content of the web app is provided for display to the user using the browser app in full screen mode.
- the experience is similar to a user using a native app, and may appear independent of the web browser (e.g., no browser window, browser icons, etc.).
- the content within the app may include links to or otherwise provide for navigation to additional content at one or more other external websites or webpages.
- the content when navigating to external web pages the content may be provided for display within the full screen native web app.
- the external web pages may be presented using the web browser app (e.g., by redirecting the user to the browser app).
- an instance of the running native web app is added to the list of native apps running on the mobile device.
- a unique name and logo of the native web app is displayed within the list of running apps (e.g., a logo and name specified by the manifest).
- Computer readable storage medium also referred to as computer readable medium.
- processing unit(s) e.g., one or more processors, cores of processors, or other processing units
- Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc.
- the computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.
- the term “software” is meant to include firmware residing in read-only memory or apps stored in magnetic storage, which can be read into memory for processing by a processor.
- multiple software aspects of the subject disclosure can be implemented as sub-parts of a larger program while remaining distinct software aspects of the subject disclosure.
- multiple software aspects can also be implemented as separate programs.
- any combination of separate programs that together implement a software aspect described here is within the scope of the subject disclosure.
- the software programs when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.
- a computer program (also known as a program, software, software app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a standalone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- FIG. 5 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented.
- Electronic system 500 can be a server, computer, phone, PDA, laptop, tablet computer, television with one or more processors embedded therein or coupled thereto, or any other sort of electronic device.
- Such an electronic system includes various types of computer readable media and interfaces for various other types of computer readable media.
- Electronic system 500 includes a bus 508 , processing unit(s) 512 , a system memory 504 , a read-only memory (ROM) 510 , a permanent storage device 502 , an input device interface 514 , an output device interface 506 , and a network interface 516 .
- processing unit(s) 512 includes a bus 508 , processing unit(s) 512 , a system memory 504 , a read-only memory (ROM) 510 , a permanent storage device 502 , an input device interface 514 , an output device interface 506 , and a network interface 516 .
- Bus 508 collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of electronic system 500 .
- bus 508 communicatively connects processing unit(s) 512 with ROM 510 , system memory 504 , and permanent storage device 502 .
- processing unit(s) 512 retrieves instructions to execute and data to process in order to execute the processes of the subject disclosure.
- the processing unit(s) can be a single processor or a multi-core processor in different implementations.
- ROM 510 stores static data and instructions that are needed by processing unit(s) 512 and other modules of the electronic system.
- Permanent storage device 502 is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when electronic system 500 is off. Some implementations of the subject disclosure use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as permanent storage device 502 .
- system memory 504 is a read-and-write memory device. However, unlike storage device 502 , system memory 504 is a volatile read-and-write memory, such a random access memory. System memory 504 stores some of the instructions and data that the processor needs at runtime. In some implementations, the processes of the subject disclosure are stored in system memory 504 , permanent storage device 502 , and/or ROM 510 .
- the various memory units include instructions for generating a native web app according to various implementations. From these various memory units, processing unit(s) 512 retrieves instructions to execute and data to process in order to execute the processes of some implementations.
- Bus 508 also connects to input and output device interfaces 514 and 506 .
- Input device interface 514 enables the user to communicate information and select commands to the electronic system.
- Input devices used with input device interface 514 include, for example, alphanumeric keyboards and pointing devices (also called “cursor control devices”).
- Output device interfaces 506 enables, for example, the display of images generated by the electronic system 500 .
- Output devices used with output device interface 506 include, for example, printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some implementations include devices such as a touchscreen that functions as both input and output devices.
- CTR cathode ray tubes
- LCD liquid crystal displays
- bus 508 also couples electronic system 500 to a network (not shown) through a network interface 516 .
- the computer can be a part of a network of computers (such as a local area network (“LAN”), a wide area network (“WAN”), or an Intranet, or a network of networks, such as the Internet. Any or all components of electronic system 500 can be used in conjunction with the subject disclosure.
- Some implementations include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media).
- computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, read-only and recordable Blu-Ray® discs, ultra density optical discs, any other optical or magnetic media, and floppy disks.
- CD-ROM compact discs
- CD-R recordable compact discs
- the computer-readable media can store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations.
- Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- ASICs app specific integrated circuits
- FPGAs field programmable gate arrays
- integrated circuits execute instructions that are stored on the circuit itself.
- the terms “computer”, “server”, “processor”, and “memory” all refer to electronic or other technological devices. These terms exclude people or groups of people.
- display or displaying means displaying on an electronic device.
- computer readable medium and “computer readable media” are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used
- Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an app server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
- any specific order or hierarchy of steps in the processes disclosed is an illustration of example approaches. Based upon design preferences, it is understood that the specific order or hierarchy of steps in the processes may be rearranged, or that some illustrated steps may not be performed. Some of the steps may be performed simultaneously. For example, in certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- a phrase such as an “aspect” does not imply that such aspect is essential to the subject technology or that such aspect applies to all configurations of the subject technology.
- a disclosure relating to an aspect may apply to all configurations, or one or more configurations.
- a phrase such as an aspect may refer to one or more aspects and vice versa.
- a phrase such as a “configuration” does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology.
- a disclosure relating to a configuration may apply to all configurations, or one or more configurations.
- a phrase such as a configuration may refer to one or more configurations and vice versa.
Abstract
In one aspect, a method and system is provided for facilitating a native web app, the method including receiving a request from a user at a first mobile device to install a native web application (“app”) providing functionality associated with a web app associated with a uniform resource locator (“URL”) from an app store, the web app providing a set of content displayable by a browser app at a user mobile device, accessing the native web app, the native web app including a manifest file including a set of permissions including a permission for displaying a browser app in full screen mode and a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using the URL, and installing the native web app on the first mobile device.
Description
- An app store offered through a mobile device provides an array of native apps to a user. These native apps may be purchased through the app store and installed at the mobile device. Additionally, various websites accessible through a native browser app, at the mobile device, also provide app functionality similar to a native app, but they are typically developed for the web and thus only accessible through the web browser app.
- The disclosed subject matter relates to a machine-implemented method including receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the native web app providing functionality associated with a web app associated with a uniform resource locator (“URL”), wherein the web app provides a set of content displayable by a browser app at a user mobile device. The method may further include accessing the native web app, the native web app including a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode and a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using the URL. The method may further include providing the set of permissions for display to the user in response to the request. The method may further include receiving an acceptance of one or more permissions of the set of permissions from the user. The method may further include installing the native web app on the first mobile device in response to receiving the acceptance. Other aspects can be embodied in corresponding systems and apparatus, including computer program products.
- The disclosed subject matter also relates to a system including one or more processors and a machine-readable medium comprising instructions stored therein, which when executed by the processors, cause the processors to perform operations comprising receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app. The operations may further include accessing the native web app, the native web app including a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode and a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using a uniform resource locator (“URL”) associated with the web app. The operations may further include providing the set of permissions for display to the user in response to the request. The operations may further include receiving an acceptance of the permission for displaying the browser app in full screen mode. The operations may further include installing the native web app on the first mobile device in response to receiving the acceptance. The operations may further include displaying an icon associated with the native web app on the first mobile device in response to installing the native web app.
- The disclosed subject matter also relates to a machine-readable medium including instructions stored therein, which when executed by a machine, cause the machine to perform operations including receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app. The operations may further include accessing the native app, the native web app comprising a manifest file including a set of permissions, the permissions including a permission for displaying a browser app at a mobile device in full screen mode and a set of instructions including instructions for launching a browser app in full screen mode using a uniform resource locator (“URL”) associated with the web app. The operations may further include providing the set of permissions for display to the user in response to the request. The operations may further include installing the native web app on the first mobile device.
- It is understood that other configurations of the subject technology will become readily apparent from the following detailed description, where various configurations of the subject technology are shown and described by way of illustration. As will be realized, the subject technology is capable of other and different configurations and its several details are capable of modification in various other respects, all without departing from the scope of the subject technology. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.
- Certain features of the subject technology are set forth in the appended claims. However, for purpose of explanation, several implementations of the subject technology are set forth in the following figures.
-
FIG. 1 illustrates an example client-server network environment, which provides for generating a native web application at a mobile device that behaves similar to a native application. -
FIG. 2 illustrates a flow diagram of an example process for generating a native web application. -
FIG. 3 illustrates a flow diagram of an example process for facilitating installation of a native web application at a user mobile device. -
FIG. 4 illustrates a flow diagram of an example process for facilitating launching a native web application at a user mobile device. -
FIG. 5 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented. - The detailed description set forth below is intended as a description of various configurations of the subject technology and is not intended to represent the only configurations in which the subject technology may be practiced. The appended drawings are incorporated herein and constitute a part of the detailed description. The detailed description includes specific details for the purpose of providing a thorough understanding of the subject technology. However, it will be clear and apparent that the subject technology is not limited to the specific details set forth herein and may be practiced without these specific details.
- A native application (“native app”) is an application (“app”) for a mobile device (smartphone, tablet, etc.) directly installed onto the device. These apps are usually obtained through an online app store or marketplace (hereinafter generally referred to as “app store”). The native apps are downloaded from the app store and installed on the user mobile device. Web applications (“web apps”) refer to Internet-enabled apps that have specific functionality for mobile devices. Web apps are accessed through the mobile device's web browser, rather than being downloaded and installed on the device.
- Native apps provide certain advantages over web apps. For example, native apps are typically more easily discoverable (e.g., through app stores), and because they are developed to act as standalone apps, they usually have a look and feel that is both easy to operate and accessible. Additionally, native apps are able to interface with the mobile device native features, information and hardware, whereas web apps may have only limited access to such native features. In one example, to provide easier access to a web app, the web browser at the mobile device may provide a user with an option to add a shortcut to the website associated with the web app to their main menu (e.g., home screen), such that a link (e.g., a shortcut icon) to the website is placed along with native apps on the user's menu and thus easily accessible.
- Native apps are typically developed using platform specific development processes, including a specific platform specific language, standardized software development kits (SDKs), development tools and common user interface elements. On the other hand, web apps are usually written in a language or framework of the developer's choice (e.g., HTML5, CSS3, JavaScript, PHP, Rails, Python). Because native apps and web apps are developed using different technologies, where an app owner wishes to have a native app and web app, the owner will have to develop each app separately using the specific technology for that platform or application type (e.g., native app or web app).
- The present disclosure facilitates leveraging the benefits of native apps, with respect to apps developed for the web. Methods and systems are provided for generating a native app based on a web app. An app developer is able to generate a native web-based application (“native web app”) from their existing web app. The native web app includes a very thin layer, made up of a single manifest file and limited code which initiates launching the browser in full screen mode with the URL of an existing web app. The native web app can then be submitted to the app store and run as a native app. The embedded URL is used to launch the native web app by accessing the web browser and launching the web app in full screen mode. In one example, the permissions include a permission to launch the browser application in full screen mode.
- This allows the developer to gain the benefits of a standalone app without the added efforts of developing a separate native app. These benefits include discoverability and ranking within the app store not typically available to apps running on the web. Furthermore, the web developer is able to leverage functionalities of native apps, using the manifest file. These functionalities include the ability to declare to serve various intents (e.g., URLs), declare specific permissions, specify a unique title and logo, interface with the native features, information and hardware of the mobile device, etc. Because permissions of the native app are declared within the manifest file, in some implementations, the user experience is enhanced, as the user will not be asked for the permissions each time the native web app launches within the browser.
- Once the native web app is generated and submitted to the app store, a user is able to search for and install the native web app. The app will launch as a standalone native web app, which operates as a native app. The native web app will be displayed as a full screen app providing the services, information, and functionality of the website associated with the web app. That is, instead of being rerouted to a browser window to view and/or interact with the URL associated with the native web app, the user is presented with a full screen app and may interact with the app independent from a browser window of the browser app.
- According to one or more implementations, the native web app is treated as a standalone app running at the mobile device. Accordingly, when the native web app is running, it will be presented as a standalone app within the list of running apps independent from the browser app running at the mobile device. In some examples, the app will be displayed using the unique title and/or logo assigned to the app within the manifest file.
- Accordingly, a native web app may be developed from an existing web app.
-
FIG. 1 illustrates an example client-server network environment, which provides for generating a native web app at a mobile device that behaves similar to a native app. Thenetwork environment 100 includes aclient device 110 communicably connected to aserver 120, and one or moreremote servers 140 by anetwork 130. - In some example implementations,
client device 110 can be a mobile computing device such as smartphones, PDAs, portable media players, tablet computers, or other appropriate mobile computing devices. In the example ofFIG. 1 ,client device 110 is depicted as a smartphone. In one example, theclient device 110 includes a processing device that executes computer instructions for generating a native web app that behaves similar to a native app. In one example, theprocessing device 110 further includes a memory for storing information regarding one or more native apps and/or web apps, and computer instructions for generating a native web app that behaves similar to a native app. In one example, the processing device may execute one or more native apps and an embedded web browser. - In some implementations,
server 120 includes a processing device and data stores, for example, to facilitate managing native web app requests fromclient device 110.Server 120 may be in communication with remote servers (e.g., remote servers 140) or various other client devices either through thenetwork 130 or through another network or communication means. -
Remote servers 140 may host one or more web servers, native apps, app stores or other client apps or services running on theclient device 110, or in connection with theserver 120.Remote servers 140 may be in communication with theclient device 110 orserver 120 through various communication means, includingnetwork 130. - In some example aspects,
server 120 and/orremote servers 140 can be a single computing device such as a computer server. In other implementations,server 120 and/orremote servers 140 can represent more than one computing device working together to perform the actions of a server computer (e.g., cloud computing).Server 120 and/orremote servers 140 may be coupled with various remote databases or storage services. It should be understood that the functions performed by theserver 120 and/orremote servers 140 may be performed within a single server, or across multiple servers. - Communications between the
client device 110 andserver 120 and/orremote servers 140 may be facilitated through various communication protocols. In some aspects,client device 110 may communicate wirelessly through a communication interface (not shown), which may include digital signal processing circuitry where necessary. The communication interface may provide for communications under various modes or protocols, including Global System for Mobile communication (GSM) voice calls, Short Message Service (SMS), Enhanced Messaging Service (EMS), or Multimedia Messaging Service (MMS) messaging, Code Division Multiple Access (CDMA), Time Division Multiple Access (TDMA), Personal Digital Cellular (PDC), Wideband Code Division Multiple Access (WCDMA), CDMA2000, or General Packet Radio System (GPRS), among others. For example, the communication may occur through a radio-frequency transceiver (not shown). In addition, short-range communication may occur, including using a Bluetooth, WiFi, or other such transceiver. - The
network 130 can include, for example, any one or more of a personal area network (PAN), a local area network (LAN), a campus area network (CAN), a metropolitan area network (MAN), a wide area network (WAN), a broadband network (BBN), the Internet, and the like. Further, thenetwork 130 can include, but is not limited to, any one or more of the following network topologies, including a bus network, a star network, a ring network, a mesh network, a star-bus network, tree or hierarchical network, and the like. - Users may interact with an app store at the
electronic device 110. In one example, the user may locate and request to install a native web app through an app store (e.g., hosted byserver 110 and/or one or more remote servers 140). In one example, the native web app may include a manifest file and a set of instructions. The manifest file of the native web app may include permissions for the native web app. The permissions include a permission to run the web browser at the client device in full screen mode. Upon receiving the request from the user, the manifest file is retrieved from the app store and the permissions for the native web app are provided for display to the user. Upon receiving user indication of accepting the permissions, the native web app is downloaded from the app store and installed at theclient device 110. - The manifest file may further include a unique name and logo for the native web app. The native web app is installed at the
client device 110 using the name and logo indicated within the manifest file. Once the user selects to launch the native web app atclient device 110, the set of instructions of the native web app causes the web browser at theclient device 110 to be launched in full screen mode and to display the web app (e.g., one or more web pages) associated with the URL of the native web app. -
FIG. 2 illustrates a flow diagram of anexample process 200 for generating a native web app. Instep 201, a URL associated with a web app is identified. In one example, the URL may be associated with a home page or main page of a website providing content of a web app for display to the user. - In
step 202, a manifest file associated with the web app is generated. In one example, the manifest file includes one or more permissions. The permissions, for example, may grant permissions for an app (e.g., the native web app) to gather and use information about a client mobile device of a user (e.g., the device it will be running on). This information allows the app to integrate with the device, and/or other apps running on the device. The information may for example include security information about the device (e.g., PIN, serial number, etc.), information regarding other apps running on the device (e.g., calendar, contacts, email, messenger, camera, etc.), information regarding the device surroundings (e.g., location, positioning information, etc.), and other similar information. The permissions further include a full screen browser app permission. This permission grants the web app permission to open the browser app at the mobile device (e.g., embedded and/or native) in full screen mode. In addition, a unique name and/or logo for the native web app may be specified in the manifest file. In some examples, the manifest file may further include intents to serve one or more other apps (e.g., URLs or native app calls). - In
step 203, a set of instructions associated with the web app is generated. The set of instructions, in some examples, includes code for launching the URL identified instep 201, using the browser app at the device in full screen mode. Instep 204, the web app made up of the manifest file and set of instructions generated insteps -
FIG. 3 illustrates a flow diagram of anexample process 300 for facilitating installation of a native web app at a user mobile device. Instep 301, an indication of a user request to install a native web app is received. In one example, an app store or marketplace may be accessible through the user mobile device and provide an array of native apps for installation at the user mobile device. In one example, the user may search for or otherwise locate a native web app (e.g., the native web app generated according toFIG. 2 above) from the app store. In one example, the app store accesses the native web app and provides a graphical representation of the native web app for display to the user. In one example, the native web app may be displayed using a name and/or logo specified when the native web app is submitted to the app store. In another example, the manifest file of the native web app may be accessed to determine the name and/or logo for displaying the native web app to the user within the app store. Once the native web app is displayed to the user, the user may select to install the native web app to the user mobile device. In one example, the selection may include agreeing to purchase and/or install the native web app. - In
step 302, a list of permissions associated with the native web app are provided for display to the user at the mobile device. In one example, a manifest file associated with the native web app is accessed, and a list of permissions associated with the native web app are accessed and provided for display to the user. The list of permissions, in one example, includes a full screen permission for launching a browser app at the mobile device in full screen mode. - In
step 303, an indication of user acceptance of the permissions listed in the list of permissions provided instep 302 are received. In one example, once the list of permissions is displayed to the user, the user may accept to grant the permissions. In one example, the user is able to select which permissions to grant from the list of permissions. In some examples, some permissions such as the full screen permission may be required permissions such that the user is required to accept the permission before the native web app may be installed at the user mobile device. - In
step 304, the native web app is installed at the user mobile device. In one example, the manifest file of the web app includes information regarding the logo and/or name to be used on the mobile device when the native web app is installed. The native web app, is installed, in some implementations, in the same location as other native apps. For example, in some implementations, the app is installed at the home screen of the mobile device. In some examples, the user may launch the installed native web app and begin to interact with the content of the native web app. -
FIG. 4 illustrates a flow diagram of anexample process 400 for facilitating launching a native web app at a user mobile device. Instep 401, a request to launch a native web app is received at the user mobile device. For example, the request may include a user request. For example, the user may access the app installed at the main menu (e.g., a homepage) of the mobile device and select to launch the web app. - In
step 402, the URL associated with the native web app is accessed and instep 403, the browser at the user mobile device is launched in full screen mode using the URL. In one example, the set of instructions of the native web app are executed. The set of instructions include a command to launch the browser app in full screen mode using the URL associated with the native web app. In some examples, the app may further be launched in response to a selection to launch the app when a URL and/or app being listed as being served by the native web app is identified. - In
step 404, the content of the web app is provided for display to the user using the browser app in full screen mode. During the navigation through the website associated with the app, the experience is similar to a user using a native app, and may appear independent of the web browser (e.g., no browser window, browser icons, etc.). In one example, the content within the app may include links to or otherwise provide for navigation to additional content at one or more other external websites or webpages. In some examples, when navigating to external web pages the content may be provided for display within the full screen native web app. In other examples, the external web pages may be presented using the web browser app (e.g., by redirecting the user to the browser app). - Once the native web app is launched, an instance of the running native web app, is added to the list of native apps running on the mobile device. In one example, a unique name and logo of the native web app is displayed within the list of running apps (e.g., a logo and name specified by the manifest).
- Many of the above-described features and apps are implemented as software processes that are specified as a set of instructions recorded on a computer readable storage medium (also referred to as computer readable medium). When these instructions are executed by one or more processing unit(s) (e.g., one or more processors, cores of processors, or other processing units), they cause the processing unit(s) to perform the actions indicated in the instructions. Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc. The computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.
- In this specification, the term “software” is meant to include firmware residing in read-only memory or apps stored in magnetic storage, which can be read into memory for processing by a processor. Also, in some implementations, multiple software aspects of the subject disclosure can be implemented as sub-parts of a larger program while remaining distinct software aspects of the subject disclosure. In some implementations, multiple software aspects can also be implemented as separate programs. Finally, any combination of separate programs that together implement a software aspect described here is within the scope of the subject disclosure. In some implementations, the software programs, when installed to operate on one or more electronic systems, define one or more specific machine implementations that execute and perform the operations of the software programs.
- A computer program (also known as a program, software, software app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a standalone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
-
FIG. 5 conceptually illustrates an electronic system with which some implementations of the subject technology are implemented.Electronic system 500 can be a server, computer, phone, PDA, laptop, tablet computer, television with one or more processors embedded therein or coupled thereto, or any other sort of electronic device. Such an electronic system includes various types of computer readable media and interfaces for various other types of computer readable media.Electronic system 500 includes abus 508, processing unit(s) 512, a system memory 504, a read-only memory (ROM) 510, apermanent storage device 502, an input device interface 514, anoutput device interface 506, and anetwork interface 516. -
Bus 508 collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices ofelectronic system 500. For instance,bus 508 communicatively connects processing unit(s) 512 withROM 510, system memory 504, andpermanent storage device 502. - From these various memory units, processing unit(s) 512 retrieves instructions to execute and data to process in order to execute the processes of the subject disclosure. The processing unit(s) can be a single processor or a multi-core processor in different implementations.
-
ROM 510 stores static data and instructions that are needed by processing unit(s) 512 and other modules of the electronic system.Permanent storage device 502, on the other hand, is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even whenelectronic system 500 is off. Some implementations of the subject disclosure use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) aspermanent storage device 502. - Other implementations use a removable storage device (such as a floppy disk, flash drive, and its corresponding disk drive) as
permanent storage device 502. Likepermanent storage device 502, system memory 504 is a read-and-write memory device. However, unlikestorage device 502, system memory 504 is a volatile read-and-write memory, such a random access memory. System memory 504 stores some of the instructions and data that the processor needs at runtime. In some implementations, the processes of the subject disclosure are stored in system memory 504,permanent storage device 502, and/orROM 510. For example, the various memory units include instructions for generating a native web app according to various implementations. From these various memory units, processing unit(s) 512 retrieves instructions to execute and data to process in order to execute the processes of some implementations. -
Bus 508 also connects to input and output device interfaces 514 and 506. Input device interface 514 enables the user to communicate information and select commands to the electronic system. Input devices used with input device interface 514 include, for example, alphanumeric keyboards and pointing devices (also called “cursor control devices”). Output device interfaces 506 enables, for example, the display of images generated by theelectronic system 500. Output devices used withoutput device interface 506 include, for example, printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some implementations include devices such as a touchscreen that functions as both input and output devices. - Finally, as shown in
FIG. 5 ,bus 508 also coupleselectronic system 500 to a network (not shown) through anetwork interface 516. In this manner, the computer can be a part of a network of computers (such as a local area network (“LAN”), a wide area network (“WAN”), or an Intranet, or a network of networks, such as the Internet. Any or all components ofelectronic system 500 can be used in conjunction with the subject disclosure. - These functions described above can be implemented in digital electronic circuitry, in computer software, firmware or hardware. The techniques can be implemented using one or more computer program products. Programmable processors and computers can be included in or packaged as mobile devices. The processes and logic flows can be performed by one or more programmable processors and by one or more programmable logic circuitry. General and special purpose computing devices and storage devices can be interconnected through communication networks.
- Some implementations include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media). Some examples of such computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, read-only and recordable Blu-Ray® discs, ultra density optical discs, any other optical or magnetic media, and floppy disks. The computer-readable media can store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations. Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- While the above discussion primarily refers to microprocessor or multi-core processors that execute software, some implementations are performed by one or more integrated circuits, such as app specific integrated circuits (ASICs) or field programmable gate arrays (FPGAs). In some implementations, such integrated circuits execute instructions that are stored on the circuit itself.
- As used in this specification and any claims of this app, the terms “computer”, “server”, “processor”, and “memory” all refer to electronic or other technological devices. These terms exclude people or groups of people. For the purposes of the specification, the terms display or displaying means displaying on an electronic device. As used in this specification and any claims of this app, the terms “computer readable medium” and “computer readable media” are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.
- To provide for interaction with a user, implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
- Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an app server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server.
- It is understood that any specific order or hierarchy of steps in the processes disclosed is an illustration of example approaches. Based upon design preferences, it is understood that the specific order or hierarchy of steps in the processes may be rearranged, or that some illustrated steps may not be performed. Some of the steps may be performed simultaneously. For example, in certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- The previous description is provided to enable any person skilled in the art to practice the various aspects described herein. Various modifications to these aspects will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other aspects. Thus, the claims are not intended to be limited to the aspects shown herein, but are to be accorded the full scope consistent with the language claims, where reference to an element in the singular is not intended to mean “one and only one” unless specifically so stated, but rather “one or more.” Unless specifically stated otherwise, the term “some” refers to one or more. Pronouns in the masculine (e.g., his) include the feminine and neuter gender (e.g., her and its) and vice versa. Headings and subheadings, if any, are used for convenience only and do not limit the subject disclosure.
- A phrase such as an “aspect” does not imply that such aspect is essential to the subject technology or that such aspect applies to all configurations of the subject technology. A disclosure relating to an aspect may apply to all configurations, or one or more configurations. A phrase such as an aspect may refer to one or more aspects and vice versa. A phrase such as a “configuration” does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology. A disclosure relating to a configuration may apply to all configurations, or one or more configurations. A phrase such as a configuration may refer to one or more configurations and vice versa.
- The word “exemplary” is used herein to mean “serving as an example or illustration.” Any aspect or design described herein as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs.
Claims (20)
1. A method for facilitating a native web app, the method comprising:
receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the native web app providing functionality associated with a web app associated with a uniform resource locator (“URL”), wherein the web app provides a set of content displayable by a browser app at a user mobile device;
accessing the native web app, the native web app including:
a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode; and
a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using the URL;
providing the set of permissions for display to the user in response to the request;
receiving an acceptance of one or more permissions of the set of permissions from the user; and
installing the native web app on the first mobile device in response to receiving the acceptance.
2. The method of claim 1 , further comprising:
generating the manifest file and the set of instructions; and
providing the manifest file and set of instructions as the native web app within the app store accessible at a user mobile device.
3. The method of claim 1 , wherein the manifest file further includes a unique name and logo associated with the native web app.
4. The method of claim 1 , wherein the manifest file further includes a listing of intents, the listing specifying one or more web pages or apps served by the native web app.
5. The method of claim 1 , further comprising:
displaying an icon associated with the native web app at the first mobile device in response to installing the native web app.
6. The method of claim 5 , wherein the icon comprises one or both a name or logo associated with the native web app according to the manifest file.
7. The method of claim 1 , wherein the native web app is installed in the same location as one or more native apps.
8. The method of claim 1 , further comprising:
receiving a request at the first mobile device to launch the native web app installed at the first mobile device;
launching the native web app in response to the request.
9. The method of claim 8 , wherein launching the native web app comprises launching a browser app at the first mobile device in full screen mode using the URL associated with the native web app.
10. The method of claim 8 , wherein launching the native web app comprises executing the set of instructions.
11. The method of claim 8 , wherein the request comprises a request from a user at the mobile device.
12. The method of claim 8 , wherein the request comprises a request to serve an app being served by the native web app.
13. The method of claim 8 , further comprising:
adding the native web app to a list of running apps at the first mobile device in response to launching the native web app according to the manifest file.
14. The method of claim 8 , wherein launching the native web app causes the content of the web app to be displayed to the user in full screen mode.
15. A system for facilitating a native web app, the system comprising:
one or more processors; and
a machine-readable medium comprising instructions stored therein, which when executed by the processors, cause the processors to perform operations comprising:
receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app;
accessing the native web app, the native web app including:
a manifest file including a set of permissions, the permissions including a permission for displaying a browser app in full screen mode; and
a set of instructions including instructions for launching a browser app at the first mobile device in full screen mode using a uniform resource locator (“URL”) associated with the web app;
providing the set of permissions for display to the user in response to the request;
receiving an acceptance of the permission for displaying the browser app in full screen mode;
installing the native web app on the first mobile device in response to receiving the acceptance; and
displaying an icon associated with the native web app on the first mobile device in response to installing the native web app.
16. The system of claim 15 , the operations further comprising:
generating the manifest file and the set of instructions; and
submitting the native web app to one or more app stores including the app store, each of the one or more app stores providing a plurality of native apps for one or more mobile devices.
17. The system of claim 15 , the operations further comprising:
receiving a request at the first mobile device to launch the native web app installed at the mobile device;
launching the native web app in response to the request, wherein launching the native web app comprises executing the set of instructions to cause launching a browser app at the mobile device in full screen mode using the URL.
18. A machine-readable medium comprising instructions stored therein, which when executed by a machine, cause the machine to perform operations comprising:
receiving a request from a user at a first mobile device to install a native web application (“app”) from an app store accessible at the first mobile device, the app store providing a plurality of native apps for one or more mobile devices, the native web app providing functionality associated with a web app providing a set of content displayable by a browser app;
accessing the native app, the native web app comprising:
a manifest file including a set of permissions, the permissions including a permission for displaying a browser app at a mobile device in full screen mode; and
a set of instructions including instructions for launching a browser app in full screen mode using a uniform resource locator (“URL”) associated with the web app;
providing the set of permissions for display to the user in response to the request; and
installing the native web app on the first mobile device.
19. The machine-readable medium of claim 18 , the operations further comprising:
generating the manifest file and the set of instructions; and
submitting the native web app to one or more app stores including the app store, the one or more app stores each providing a plurality of native apps for one or more mobile devices.
20. The machine-readable medium of claim 18 , the operations further comprising:
receiving a request at the first mobile device to launch the installed native web app; and
launching the native web app in response to the request, wherein launching the native web app comprises executing the set of instructions to cause launching a browser app at the first mobile device in full screen mode using the URL.
Priority Applications (7)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/231,582 US20150281869A1 (en) | 2014-03-31 | 2014-03-31 | Native web-based application |
PCT/US2015/023396 WO2015153490A1 (en) | 2014-03-31 | 2015-03-30 | Native web-based application |
KR1020167026848A KR20160127798A (en) | 2014-03-31 | 2015-03-30 | Native web-based application |
AU2015241091A AU2015241091A1 (en) | 2014-03-31 | 2015-03-30 | Native web-based application |
JP2016559979A JP2017513137A (en) | 2014-03-31 | 2015-03-30 | Native web-based application |
CN201580017407.8A CN106165370A (en) | 2014-03-31 | 2015-03-30 | Native applications based on WEB |
EP15774343.6A EP3127306A1 (en) | 2014-03-31 | 2015-03-30 | Native web-based application |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/231,582 US20150281869A1 (en) | 2014-03-31 | 2014-03-31 | Native web-based application |
Publications (1)
Publication Number | Publication Date |
---|---|
US20150281869A1 true US20150281869A1 (en) | 2015-10-01 |
Family
ID=54192308
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/231,582 Abandoned US20150281869A1 (en) | 2014-03-31 | 2014-03-31 | Native web-based application |
Country Status (7)
Country | Link |
---|---|
US (1) | US20150281869A1 (en) |
EP (1) | EP3127306A1 (en) |
JP (1) | JP2017513137A (en) |
KR (1) | KR20160127798A (en) |
CN (1) | CN106165370A (en) |
AU (1) | AU2015241091A1 (en) |
WO (1) | WO2015153490A1 (en) |
Cited By (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN105718313A (en) * | 2016-01-22 | 2016-06-29 | 北京京东尚科信息技术有限公司 | Application operation method and device |
US9449335B2 (en) * | 2014-10-09 | 2016-09-20 | Wrap Media, LLC | Delivering wrapped packages in response to the selection of advertisements |
US20160335138A1 (en) * | 2015-05-14 | 2016-11-17 | Microsoft Technology Licensing, Llc | Digital assistant extensibility to third party applications |
US20170052773A1 (en) * | 2015-08-17 | 2017-02-23 | Google Inc. | Application installs using remote applications |
US20170192656A1 (en) * | 2015-12-30 | 2017-07-06 | Dropbox, Inc. | Native Application Collaboration |
US9817966B2 (en) | 2015-02-11 | 2017-11-14 | Microsoft Technology Licensing, Llc | Extension interaction with applications |
US20180203941A1 (en) * | 2017-01-16 | 2018-07-19 | Samsung Electronics Co., Ltd | Electronic device and method for creating shortcut to web page in electronic device |
US10440110B2 (en) | 2014-04-08 | 2019-10-08 | Dropbox, Inc. | Managing presence among devices accessing shared and synchronized content |
US10594788B2 (en) | 2014-04-08 | 2020-03-17 | Dropbox, Inc. | Determining presence in an application accessing shared and synchronized content |
US10735449B2 (en) | 2017-07-11 | 2020-08-04 | Viaforensics, Llc | Methods and apparatuses for improved mobile app security testing via bridged native and web user interface interaction |
US10791186B2 (en) | 2014-04-08 | 2020-09-29 | Dropbox, Inc. | Displaying presence in an application accessing shared and synchronized content |
US10860164B2 (en) | 2016-08-23 | 2020-12-08 | Advanced New Technologies Co., Ltd. | Information input method and apparatus |
US20210174596A1 (en) * | 2019-12-09 | 2021-06-10 | Magic Leap, Inc. | Cross reality system with simplified programming of virtual content |
US11107466B2 (en) | 2014-12-16 | 2021-08-31 | Microsoft Technology Licensing, Llc | Digital assistant voice input integration |
US11132107B2 (en) | 2015-03-02 | 2021-09-28 | Dropbox, Inc. | Native application collaboration |
US11170345B2 (en) | 2015-12-29 | 2021-11-09 | Dropbox Inc. | Content item activity feed for presenting events associated with content items |
US11172038B2 (en) | 2014-04-08 | 2021-11-09 | Dropbox, Inc. | Browser display of native application presence and interaction data |
US20220019645A1 (en) * | 2019-03-28 | 2022-01-20 | Vivo Mobile Communication Co., Ltd. | Permission configuration method and terminal device |
US11425175B2 (en) | 2016-04-04 | 2022-08-23 | Dropbox, Inc. | Change comments for synchronized content items |
US11789524B2 (en) | 2018-10-05 | 2023-10-17 | Magic Leap, Inc. | Rendering location specific virtual content in any location |
US11809313B2 (en) | 2018-06-15 | 2023-11-07 | Samsung Electronics Co., Ltd. | Resource caching method and electronic device supporting the same |
EP4169239A4 (en) * | 2020-08-20 | 2023-12-13 | T-Mobile USA, Inc. | Communications registry and governance for apps |
US11864597B2 (en) | 2019-05-10 | 2024-01-09 | Jt International S.A. | Configuring a personal computing device for communication with an aerosol generation device |
US11967020B2 (en) | 2020-02-13 | 2024-04-23 | Magic Leap, Inc. | Cross reality system with map processing using multi-resolution frame descriptors |
US11978159B2 (en) | 2018-08-13 | 2024-05-07 | Magic Leap, Inc. | Cross reality system |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN106897162B (en) * | 2017-02-23 | 2021-06-11 | 腾讯科技（深圳）有限公司 | Communication mode selection method of component in application, communication system and mobile terminal |
KR102504075B1 (en) * | 2017-05-08 | 2023-02-27 | 브랜치 메트릭스 인코포레이티드 | Matching and attributes of user device events |
CN107329743B (en) * | 2017-06-14 | 2021-09-28 | 北京小米移动软件有限公司 | Application page display method and device and storage medium |
CN110286955A (en) * | 2018-03-16 | 2019-09-27 | 青岛海尔多媒体有限公司 | The method, apparatus and computer readable storage medium of application program launching |
JP7069969B2 (en) | 2018-03-29 | 2022-05-18 | 株式会社リコー | Information processing equipment, information processing methods and information processing programs |
PL3737108T3 (en) * | 2019-05-10 | 2021-12-20 | Jt International S.A. | Configuring a personal computing device for communication with an aerosol generation device |
KR102572383B1 (en) * | 2021-08-24 | 2023-08-29 | 삼성에스디에스 주식회사 | Method and apparatus for managing application |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120159310A1 (en) * | 2010-12-16 | 2012-06-21 | Electronics And Telecommunications Research Institute | Method for converting mobile web application into native application and apparatus using the same |
US20140053126A1 (en) * | 2012-02-13 | 2014-02-20 | Mark A. Watson | Integrated mobile application development platform |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6938101B2 (en) * | 2001-01-29 | 2005-08-30 | Universal Electronics Inc. | Hand held device having a browser application |
US7395534B2 (en) * | 2003-05-22 | 2008-07-01 | Microsoft Corporation | System and method for progressively installing a software application |
US20060080702A1 (en) * | 2004-05-20 | 2006-04-13 | Turner Broadcasting System, Inc. | Systems and methods for delivering content over a network |
EP2403252A1 (en) * | 2006-02-14 | 2012-01-04 | Nec Corporation | Mobile device having television function |
CN101110951A (en) * | 2007-08-08 | 2008-01-23 | 南京联创网络科技有限公司 | Method for dynamically loading communication plug-in unit in video monitoring system |
US10580051B2 (en) * | 2010-05-18 | 2020-03-03 | Google Llc | Background element associated with an application installed in a browser application |
US9110749B2 (en) * | 2010-06-01 | 2015-08-18 | Apple Inc. | Digital content bundle |
US20130326502A1 (en) * | 2012-05-30 | 2013-12-05 | Google Inc. | Installing applications remotely |
-
2014
- 2014-03-31 US US14/231,582 patent/US20150281869A1/en not_active Abandoned
-
2015
- 2015-03-30 EP EP15774343.6A patent/EP3127306A1/en not_active Withdrawn
- 2015-03-30 CN CN201580017407.8A patent/CN106165370A/en active Pending
- 2015-03-30 JP JP2016559979A patent/JP2017513137A/en not_active Withdrawn
- 2015-03-30 KR KR1020167026848A patent/KR20160127798A/en not_active Application Discontinuation
- 2015-03-30 AU AU2015241091A patent/AU2015241091A1/en not_active Abandoned
- 2015-03-30 WO PCT/US2015/023396 patent/WO2015153490A1/en active Application Filing
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120159310A1 (en) * | 2010-12-16 | 2012-06-21 | Electronics And Telecommunications Research Institute | Method for converting mobile web application into native application and apparatus using the same |
US20140053126A1 (en) * | 2012-02-13 | 2014-02-20 | Mark A. Watson | Integrated mobile application development platform |
Cited By (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11172038B2 (en) | 2014-04-08 | 2021-11-09 | Dropbox, Inc. | Browser display of native application presence and interaction data |
US10965746B2 (en) | 2014-04-08 | 2021-03-30 | Dropbox, Inc. | Determining presence in an application accessing shared and synchronized content |
US11683389B2 (en) | 2014-04-08 | 2023-06-20 | Dropbox, Inc. | Browser display of native application presence and interaction data |
US10887388B2 (en) | 2014-04-08 | 2021-01-05 | Dropbox, Inc. | Managing presence among devices accessing shared and synchronized content |
US10791186B2 (en) | 2014-04-08 | 2020-09-29 | Dropbox, Inc. | Displaying presence in an application accessing shared and synchronized content |
US10440110B2 (en) | 2014-04-08 | 2019-10-08 | Dropbox, Inc. | Managing presence among devices accessing shared and synchronized content |
US10594788B2 (en) | 2014-04-08 | 2020-03-17 | Dropbox, Inc. | Determining presence in an application accessing shared and synchronized content |
US9489684B2 (en) * | 2014-10-09 | 2016-11-08 | Wrap Media, LLC | Delivering wrapped packages in response to the selection of advertisements |
US9582813B2 (en) | 2014-10-09 | 2017-02-28 | Wrap Media, LLC | Delivering wrapped packages in response to the selection of advertisements |
US9449335B2 (en) * | 2014-10-09 | 2016-09-20 | Wrap Media, LLC | Delivering wrapped packages in response to the selection of advertisements |
US11107466B2 (en) | 2014-12-16 | 2021-08-31 | Microsoft Technology Licensing, Llc | Digital assistant voice input integration |
US9817966B2 (en) | 2015-02-11 | 2017-11-14 | Microsoft Technology Licensing, Llc | Extension interaction with applications |
US10185819B2 (en) | 2015-02-11 | 2019-01-22 | Microsoft Technology Licensing, Llc | Extension configuration and interaction |
US11526260B2 (en) | 2015-03-02 | 2022-12-13 | Dropbox, Inc. | Native application collaboration |
US11132107B2 (en) | 2015-03-02 | 2021-09-28 | Dropbox, Inc. | Native application collaboration |
US10133613B2 (en) * | 2015-05-14 | 2018-11-20 | Microsoft Technology Licensing, Llc | Digital assistant extensibility to third party applications |
US20160335138A1 (en) * | 2015-05-14 | 2016-11-17 | Microsoft Technology Licensing, Llc | Digital assistant extensibility to third party applications |
US20170052773A1 (en) * | 2015-08-17 | 2017-02-23 | Google Inc. | Application installs using remote applications |
US11170345B2 (en) | 2015-12-29 | 2021-11-09 | Dropbox Inc. | Content item activity feed for presenting events associated with content items |
US10620811B2 (en) * | 2015-12-30 | 2020-04-14 | Dropbox, Inc. | Native application collaboration |
US11875028B2 (en) | 2015-12-30 | 2024-01-16 | Dropbox, Inc. | Native application collaboration |
US20170192656A1 (en) * | 2015-12-30 | 2017-07-06 | Dropbox, Inc. | Native Application Collaboration |
CN105718313A (en) * | 2016-01-22 | 2016-06-29 | 北京京东尚科信息技术有限公司 | Application operation method and device |
US11943264B2 (en) | 2016-04-04 | 2024-03-26 | Dropbox, Inc. | Change comments for synchronized content items |
US11425175B2 (en) | 2016-04-04 | 2022-08-23 | Dropbox, Inc. | Change comments for synchronized content items |
US10860164B2 (en) | 2016-08-23 | 2020-12-08 | Advanced New Technologies Co., Ltd. | Information input method and apparatus |
US20180203941A1 (en) * | 2017-01-16 | 2018-07-19 | Samsung Electronics Co., Ltd | Electronic device and method for creating shortcut to web page in electronic device |
US10735449B2 (en) | 2017-07-11 | 2020-08-04 | Viaforensics, Llc | Methods and apparatuses for improved mobile app security testing via bridged native and web user interface interaction |
US11809313B2 (en) | 2018-06-15 | 2023-11-07 | Samsung Electronics Co., Ltd. | Resource caching method and electronic device supporting the same |
US11978159B2 (en) | 2018-08-13 | 2024-05-07 | Magic Leap, Inc. | Cross reality system |
US11789524B2 (en) | 2018-10-05 | 2023-10-17 | Magic Leap, Inc. | Rendering location specific virtual content in any location |
US20220019645A1 (en) * | 2019-03-28 | 2022-01-20 | Vivo Mobile Communication Co., Ltd. | Permission configuration method and terminal device |
US11864597B2 (en) | 2019-05-10 | 2024-01-09 | Jt International S.A. | Configuring a personal computing device for communication with an aerosol generation device |
US11562542B2 (en) * | 2019-12-09 | 2023-01-24 | Magic Leap, Inc. | Cross reality system with simplified programming of virtual content |
US11748963B2 (en) * | 2019-12-09 | 2023-09-05 | Magic Leap, Inc. | Cross reality system with simplified programming of virtual content |
US20210174596A1 (en) * | 2019-12-09 | 2021-06-10 | Magic Leap, Inc. | Cross reality system with simplified programming of virtual content |
US11967020B2 (en) | 2020-02-13 | 2024-04-23 | Magic Leap, Inc. | Cross reality system with map processing using multi-resolution frame descriptors |
EP4169239A4 (en) * | 2020-08-20 | 2023-12-13 | T-Mobile USA, Inc. | Communications registry and governance for apps |
Also Published As
Publication number | Publication date |
---|---|
AU2015241091A1 (en) | 2016-08-25 |
WO2015153490A1 (en) | 2015-10-08 |
EP3127306A1 (en) | 2017-02-08 |
KR20160127798A (en) | 2016-11-04 |
JP2017513137A (en) | 2017-05-25 |
CN106165370A (en) | 2016-11-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20150281869A1 (en) | Native web-based application | |
US10025577B2 (en) | Search in application launcher | |
US9600258B2 (en) | Suggestions to install and/or open a native application | |
EP3123386B1 (en) | Granting permission in association with an application | |
KR101998313B1 (en) | Application state propagation between devices | |
EP3030989B1 (en) | Providing information in association with a search field | |
US9571496B1 (en) | Central account manager | |
US9270760B2 (en) | Cross-platform child mode for applications | |
US10775980B2 (en) | Transferring notifications between devices | |
US9740393B2 (en) | Processing a hover event on a touchscreen device | |
US9588636B1 (en) | Exit full screen mode of a web browser on content-based event | |
US20150293889A1 (en) | Perception of page download time by optimized resource scheduling | |
US9003313B1 (en) | System and method for modifying a user interface | |
US9645982B2 (en) | System and method for loading a web page | |
CA3005631C (en) | Secondary computing device assistant |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RAMACHANDRAN, VINOD KUMAR;KLOBA, GRACE HUA;REEL/FRAME:032586/0852Effective date: 20140326 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044144/0001Effective date: 20170929 |
CN112655188A - Robust radar-based gesture recognition by user equipment - Google Patents
Robust radar-based gesture recognition by user equipment Download PDFInfo
- Publication number
- CN112655188A CN112655188A CN201980006096.3A CN201980006096A CN112655188A CN 112655188 A CN112655188 A CN 112655188A CN 201980006096 A CN201980006096 A CN 201980006096A CN 112655188 A CN112655188 A CN 112655188A
- Authority
- CN
- China
- Prior art keywords
- radar
- state
- user
- context
- radar system
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/017—Gesture based interaction, e.g. based on a set of recognized hand gestures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01S—RADIO DIRECTION-FINDING; RADIO NAVIGATION; DETERMINING DISTANCE OR VELOCITY BY USE OF RADIO WAVES; LOCATING OR PRESENCE-DETECTING BY USE OF THE REFLECTION OR RERADIATION OF RADIO WAVES; ANALOGOUS ARRANGEMENTS USING OTHER WAVES
- G01S13/00—Systems using the reflection or reradiation of radio waves, e.g. radar systems; Analogous systems using reflection or reradiation of waves whose nature or wavelength is irrelevant or unspecified
- G01S13/02—Systems using reflection of radio waves, e.g. primary radar systems; Analogous systems
- G01S13/06—Systems determining position data of a target
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01S—RADIO DIRECTION-FINDING; RADIO NAVIGATION; DETERMINING DISTANCE OR VELOCITY BY USE OF RADIO WAVES; LOCATING OR PRESENCE-DETECTING BY USE OF THE REFLECTION OR RERADIATION OF RADIO WAVES; ANALOGOUS ARRANGEMENTS USING OTHER WAVES
- G01S7/00—Details of systems according to groups G01S13/00, G01S15/00, G01S17/00
- G01S7/02—Details of systems according to groups G01S13/00, G01S15/00, G01S17/00 of systems according to group G01S13/00
- G01S7/41—Details of systems according to groups G01S13/00, G01S15/00, G01S17/00 of systems according to group G01S13/00 using analysis of echo signal for target characterisation; Target signature; Target cross-section
- G01S7/415—Identification of targets based on measurements of movement associated with the target
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F1/00—Details not covered by groups G06F3/00 - G06F13/00 and G06F21/00
- G06F1/26—Power supply means, e.g. regulation thereof
- G06F1/32—Means for saving power
- G06F1/3203—Power management, i.e. event-based initiation of a power-saving mode
- G06F1/3206—Monitoring of events, devices or parameters that trigger a change in power modality
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F1/00—Details not covered by groups G06F3/00 - G06F13/00 and G06F21/00
- G06F1/26—Power supply means, e.g. regulation thereof
- G06F1/32—Means for saving power
- G06F1/3203—Power management, i.e. event-based initiation of a power-saving mode
- G06F1/3234—Power saving characterised by the action undertaken
- G06F1/325—Power saving in peripheral device
- G06F1/3259—Power saving in cursor control device, e.g. mouse, joystick, trackball
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/30—Authentication, i.e. establishing the identity or authorisation of security principals
- G06F21/31—User authentication
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/011—Arrangements for interaction with the human body, e.g. for user immersion in virtual reality
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/03—Arrangements for converting the position or the displacement of a member into a coded form
- G06F3/033—Pointing devices displaced or positioned by the user, e.g. mice, trackballs, pens or joysticks; Accessories therefor
- G06F3/0346—Pointing devices displaced or positioned by the user, e.g. mice, trackballs, pens or joysticks; Accessories therefor with detection of the device orientation or free movement in a 3D space, e.g. 3D mice, 6-DOF [six degrees of freedom] pointers using gyroscopes, accelerometers or tilt-sensors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/44—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components
- G06V10/443—Local feature extraction by analysis of parts of the pattern, e.g. by detecting edges, contours, loops, corners, strokes or intersections; Connectivity analysis, e.g. of connected components by matching or filtering
- G06V10/449—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters
- G06V10/451—Biologically inspired filters, e.g. difference of Gaussians [DoG] or Gabor filters with interaction between the filter responses, e.g. cortical complex cells
- G06V10/454—Integrating the filters into a hierarchical structure, e.g. convolutional neural networks [CNN]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/82—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/16—Human faces, e.g. facial parts, sketches or expressions
- G06V40/161—Detection; Localisation; Normalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/18—Eye characteristics, e.g. of the iris
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/20—Movements or behaviour, e.g. gesture recognition
- G06V40/28—Recognition of hand or arm movements, e.g. recognition of deaf sign language
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72463—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions to restrict the functionality of the device
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72463—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions to restrict the functionality of the device
- H04M1/724631—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions to restrict the functionality of the device by limiting the access to the user interface, e.g. locking a touch-screen or a keypad
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72454—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions according to context-related or environment-related conditions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M1/00—Substation equipment, e.g. for use by subscribers
- H04M1/72—Mobile telephones; Cordless telephones, i.e. devices for establishing wireless links to base stations without route selection
- H04M1/724—User interfaces specially adapted for cordless or mobile telephones
- H04M1/72448—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions
- H04M1/72463—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions to restrict the functionality of the device
- H04M1/724631—User interfaces specially adapted for cordless or mobile telephones with means for adapting the functionality of the device according to specific conditions to restrict the functionality of the device by limiting the access to the user interface, e.g. locking a touch-screen or a keypad
- H04M1/724634—With partially locked states, e.g. when some telephonic functional locked states or applications remain accessible in the locked states
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04M—TELEPHONIC COMMUNICATION
- H04M2250/00—Details of telephonic subscriber devices
- H04M2250/12—Details of telephonic subscriber devices including a sensor for measuring a physical value, e.g. temperature or motion
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y02—TECHNOLOGIES OR APPLICATIONS FOR MITIGATION OR ADAPTATION AGAINST CLIMATE CHANGE
- Y02D—CLIMATE CHANGE MITIGATION TECHNOLOGIES IN INFORMATION AND COMMUNICATION TECHNOLOGIES [ICT], I.E. INFORMATION AND COMMUNICATION TECHNOLOGIES AIMING AT THE REDUCTION OF THEIR OWN ENERGY USE
- Y02D30/00—Reducing energy consumption in communication networks
- Y02D30/70—Reducing energy consumption in communication networks in wireless communication networks
Abstract
Systems and techniques for robust radar-based gesture recognition are described. A radar system (104) detects radar-based gestures on behalf of an application subscriber. The state machine (2000) transitions between a plurality of states based on inertial sensor data. The ungated state (2002) enables the radar system (104) to output radar-based gestures to application subscribers. The state machine (2000) also includes a soft gating state (2004), the soft gating state (2004) preventing the radar system (104) from outputting radar-based gestures to application subscribers. The hard gating state (2006) completely prevents the radar system (104) from detecting radar-based gestures. The techniques and systems enable a radar system (104) to determine when gesture recognition is not to be performed, enabling a user device (102) to automatically reconfigure the radar system (104) to meet user needs. By doing so, the techniques conserve power, improve accuracy, or reduce latency relative to many common techniques and systems for radar-based gesture recognition.
Description
Background
Some computing devices (also referred to as "user devices") include radar systems for detecting inputs. For example, radar systems provide a radar field from which the radar system identifies two-dimensional and three-dimensional (also referred to as "touch-independent") radar-based gestures made within or by the radar field. Radar systems may continually evaluate reflections within the radar field, frequently transitioning to a gesture recognition state to account for which may be radar-based gesture inputs. However, transitioning to a gesture recognition state in response to an unexpected or false positive radar input wastes power and may cause a malfunction if a misidentified radar-based gesture triggers or is used to perform a function.
Disclosure of Invention
This document introduces radar-based gesture recognition techniques and systems that utilize context-sensitive gating and other context-sensitive controls. The techniques and systems use sensor data from a plurality of sensors to define a context of a user device. The plurality of sensors may include a low power sensor device, such as an Inertial Measurement Unit (IMU), and not include a high power sensor device, such as a camera. The sensor data may be inertial sensor data from the IMU, proximity data from a proximity sensor, radar data from a radar system, or any other sensor data. The sensor data defines a context of the user device, such as a user activity or a characteristic of the computing environment. In certain contexts, when radar systems are unreliable or less reliable for radar-based gesture recognition, these techniques and systems enable user devices to automatically disable or "gate" radar-based gesture recognition. To this end, the user device may restrict input to or output from the gesture recognition model. The user device may also disable the gesture recognition model to completely prevent the radar system from performing radar-based gesture recognition. The user device may re-enable radar-based gesture recognition when the context changes to a different context that is less likely to cause a gesture recognition error or cause a false positive. If the user device is operating in an environment where radar-based gestures are unlikely, the user device will automatically gate gesture recognition. Gating gesture recognition prevents an application executing on a user device or other subscriber from performing a function in response to radar input obtained while gating. By doing so, the present technique prevents operation of the subscriber whose false positive gesture recognition triggers gesture recognition. For computing systems using radar-based gesture recognition systems, preventing false positives may save power and improve usability and user satisfaction.
For example, an apparatus is described, comprising: a radar system that detects radar-based gestures on behalf of application subscribers; an inertial measurement unit receiving inertial sensor data; and a state machine that transitions between a plurality of states based on the inertial sensor data and the context sensitive transfer function to control the radar system, the state machine comprising: an ungated state in which the state machine enables the radar system to output an indication of a radar-based pose to an application subscriber; a soft gating state in which the state machine prevents the radar system from outputting an indication of a radar-based pose to an application subscriber; and a hard-gated state in which the state machine prevents the radar system from detecting radar-based gestures.
This document also describes methods performed by the apparatus outlined above and other methods set forth herein, as well as computer-readable media having instructions for performing the methods set forth herein and other methods. This document also describes systems and methods for performing these methods.
This summary is provided to introduce simplified concepts of radar-based gesture recognition with context-sensitive gating and other context-sensitive controls, which are further described below in the detailed description and the accompanying drawings. This summary is not intended to identify essential features of the claimed subject matter, nor is it intended for use in determining the scope of the claimed subject matter.
Drawings
Details of one or more aspects of radar-based gesture recognition with context-sensitive gating and other context-sensitive controls are described in this document with reference to the following figures. The same numbers are used throughout the drawings to reference like features and components:
fig. 1 illustrates an example environment in which radar-based gesture recognition techniques for utilizing context-sensitive gating and other context-sensitive controls may be implemented.
Fig. 2 illustrates an example of the authentication system set forth in fig. 1.
FIG. 3 illustrates an example user authenticated by the authentication system of FIG. 2.
Fig. 4 illustrates an embodiment of the user device of fig. 1 that may change states, including a power state of an authentication system, in response to a determination of a user's intent to interface (engage) with the user device.
Fig. 5 illustrates example information, power, and access states of a user device.
Fig. 6-1 illustrates an example radar system as part of a user device.
Fig. 6-2 illustrates an example transceiver and processor.
6-3 illustrate example relationships between power consumption, gesture frame update rate, and response delay.
Fig. 6-4 illustrate example framing structures.
FIG. 7 illustrates an example arrangement of receive antenna elements of the radar system of FIG. 6-1.
FIG. 8 illustrates additional details of an example embodiment of the radar system of FIG. 6-1.
FIG. 9 illustrates an example scenario that may be implemented by the radar system of FIG. 6-1.
FIG. 10 illustrates an example method for authentication management by an IMU and/or radar.
FIG. 11 illustrates an example scenario for authentication management.
FIG. 12 illustrates an example method for reducing a state of a user device.
FIG. 13 illustrates an example scenario for reducing the state of a user device.
FIG. 14 illustrates an example method for maintaining an authentication state.
FIG. 15 illustrates an example scenario for maintaining an authentication state.
FIG. 16 illustrates another example scenario for maintaining an authentication state.
Fig. 17 illustrates an example method for radar-based gesture recognition with context-sensitive gating and other context-sensitive controls.
Fig. 18 illustrates an example method for radar-based gesture recognition with context-sensitive gating and other context-sensitive controls.
FIG. 19 illustrates a decision tree implementing the methods of FIGS. 17 and 18.
Fig. 20 illustrates a state diagram of a state machine for implementing the methods of fig. 17 and 18.
Fig. 21 illustrates a block diagram of movement-based gating for implementing radar-based gesture recognition.
Detailed Description
Overview
This document describes radar-based gesture (gettrue) recognition techniques and systems that utilize context-sensitive gating and other context-sensitive controls. As an example, a User Equipment (UE) (e.g., a computing device) includes a radar system for detecting input from a user, among other uses. The UE receives sensor data from a plurality of sensors, such as proximity sensors or mobile sensors, to develop the context of the UE.
A context defines a user activity, a device characteristic, or an operating environment of a UE. The context may specify orientation, acceleration, location, or proximity to an object. Location, temperature, brightness, pressure, and other environmental characteristics may also define context. The plurality of sensors may include a movement sensor, such as an Inertial Measurement Unit (IMU) for generating inertial data defining movement of the UE. The plurality of sensors may include a proximity sensor, a light sensor, or a temperature sensor, to name a few. When the radar system is operating in a proximity mode (with or without gesture recognition enabled), the radar system is a proximity sensor. The UE may rely on sensors that provide accurate sensor data while consuming as little power as possible, especially if the UE relies on battery power.
Based on the context defined by the sensor data, the UE determines whether to prevent the radar system from identifying the radar-based gesture and/or whether to prevent a component of the UE from performing a function using the identified radar-based gesture. Gated gesture recognition by the radar system prevents the UE from wasting computing resources and power to interpret radar-based gestures or to perform functions (even malfunction) in response to gesture recognition made from inadvertent or non-user input.
Without gating, the UE over-interprets the radar-based pose from the radar data, wasting computing resources to handle the wrong pose, or even failing in response thereto. By gating output from the radar system based on context, the disclosed techniques and systems enable the UE to conserve power, improve accuracy, improve user satisfaction and usability, or reduce latency relative to other techniques and systems for radar-based gesture recognition.
By way of an example, assume that sensor data obtained by a smartphone indicates that a user is holding the smartphone. These techniques and systems enable a radar system of a smartphone to recognize radar-based gestures in such a context, because the likelihood of a user entering a radar-based gesture into the smartphone while holding the smartphone is high. The sensor data then indicates that the user is also walking with the smartphone. In such a context, the smartphone also continues to use the radar system to recognize radar-based gestures, as even while walking, the user may wish to intentionally make gestures at the smartphone while holding the smartphone. Next, the sensor data indicates that the user is still walking, but is no longer holding the smartphone, the smartphone is oriented away from the user, and/or the smartphone is occluded by an object (e.g., a backpack compartment). For example, because a user is less likely to interact with a smartphone while in a backpack compartment, these techniques and systems enable the smartphone to disable the radar system, or at least adjust the radar system to prevent the radar system from being used to identify radar-based gestures in such a context. When the smartphone recognizes a new context, the smartphone reevaluates whether radar-based gesture recognition is enabled and enables radar-based gesture recognition by the radar system when the context is suitable for radar-based gesture recognition.
Finally, the user places the smartphone on a surface, such as a table, and the sensor data indicates that the user is not holding the smartphone and that the smartphone is oriented with the screen facing upward. If the proximity data indicates that the user is reaching onto the smartphone, the smartphone selectively enables or prevents the radar system from recognizing radar-based gestures based on what the user is doing next. If the smartphone detects movement indicating that the user is picking up the smartphone after having been brought onto the smartphone, the smartphone recognizes the radar-based gesture using the radar system. If the smartphone does not detect a movement indicating that the user is picking up the smartphone after reaching onto the smartphone (e.g., the user is grasping a cup of coffee next to the smartphone on a desk), the smartphone prevents gesture recognition using the radar system.
These are merely some examples of how the described techniques and apparatus may be used for door radar-based gesture recognition. Other examples and embodiments are described throughout this document. Turning now to an example operating environment, example apparatus, methods, and systems are described.
Operating environment
Fig. 1 illustrates an example environment 100 in which techniques for context-sensitive gating and other context-sensitive controls based on radar-based gesture recognition may be implemented. The example environment 100 includes a User Equipment (UE)102 (e.g., a smartphone) that includes or is associated with a radar system 104, a radar manager 106, a plurality of sensors 108, a mobility manager 110, a status manager 112, an authentication system 114, and a display 116.
In the example environment 100, the radar system 104 provides a radar field 118 by transmitting one or more radar signals or waveforms, as described below with reference to fig. 7-9. Radar field 118 is a volume of space from which radar system 104 can detect reflections of radar signals and waveforms (e.g., radar signals and waveforms reflected from objects in the volume of space, also commonly referred to herein as radar data). Radar system 104 also enables UE102 or another electronic device to sense and analyze the radar data from reflections within radar field 118, for example, to identify radar-based gestures (e.g., touch-independent gestures) made by a user in a volumetric space. The radar field 118 may take any of a variety of shapes and forms. For example, the radar field 118 may have the shape described with reference to fig. 1 and 7. In other cases, radar field 118 may take a radius extending from radar system 104, a shape of a volume surrounding radar system 104 (e.g., a sphere, hemisphere, partial sphere, beam, or cone), or a non-uniform shape (e.g., to accommodate interference from obstacles in radar field 118). The radar field 118 may extend from the radar system 104 any of a variety of distances, such as inches to twelve feet (less than one-third of a meter to four meters). The radar field 118 may be predefined, user selectable, or determined via another method (e.g., based on power requirements, remaining battery life, or another factor).
Reflections from user 120 in radar field 118 enable radar system 104 to determine various information about user 120, such as a body position and posture of user 120, which may indicate various different non-verbal body language cues, body positions, or body postures, which may be recognized by radar system 104 as touch-independent gestures made by user 120. The cues, positions, and gestures may include an absolute position or distance of the user 120 with reference to the UE102, a change in the position or distance of the user 120 with reference to the UE102 (e.g., the user 120 or the user's hand or an object held by the user 120 is moving closer to the UE102 or farther from the UE 102), a velocity of the user 120 (e.g., the hand or a non-user object) as it moves toward or away from the UE102, whether the user 120 is turning toward or away from the UE102, whether the user 120 is leaning toward, swinging toward, extending toward, or toward the UE102, and so forth. These reflections may also be analyzed to determine authentication, or to increase confidence in authentication, such as by analyzing radar data (e.g., a scattering center of a user's face) to identify a person. The UE102 may use these reflections to define context (e.g., the operating environment of the UE 102) to perform radar-based gesture recognition context-sensitive gating and other context-sensitive controls. These reflections may also be used to determine or add confidence to the touch-independent gestures recognized by radar system 104 when user 120 provides input to UE 102.
The user's intent to engage may also be inferred based on movement of the user's or user's head or eyes looking at the UE102, or the user or their face oriented toward the UE102, or in some cases, based on movement of the user's or user's head or eyes looking at an associated external device of the UE102, or the user or their face oriented toward an associated external device of the UE 102. For movement of the user's eyes looking at the UE102, the radar manager 106 determines a direction in which the user's eyes are looking at the UE102, such as by tracking the user's eyes. For movements in which the user's head orients them or their face toward the UE102 (e.g., face orientation), the radar manager 106 determines that various points (e.g., scattering centers as described below) are now oriented such that the user's face is directed toward the UE 102. Thus, the user need not perform actions designed to control or activate the UE102, such as activating (pressing) a button or touch-related gesture (e.g., on a touchpad or screen) or touch-unrelated gesture (e.g., using radar system 104) on the UE102 in order for radar manager 106 to determine that the user intends to interface (or not interface or remain in-line) with the UE 102.
As described above, radar manager 106 is also configured to determine an intent of the user not to interface with UE 102. Similar to the user's intent to engage, radar manager 106 determines the user's intent to not engage by inferring from radar data that indicates a lack of a touch-independent gesture, or a movement of the user's hand or arm being moved away from UE102 (e.g., retracted), a movement of the eyes being moved away, or a movement of the head or face away from UE102 (e.g., the face orientation changing away from looking at UE 102). Other ways of determining the intent of a user to not engage are not only the reversal or cessation of the engagement noted above, but also include radar data indicating that the user has walked away, moved them, or moved their body away or has engaged with a different unassociated object or device. Thus, radar manager 106 may determine an intent not to interface with UE102 based on determining an intent of the user to interface with certain other objects, devices, or user equipment. For example, assume that a user is looking at and interacting with a smartphone. Example involvement intent to indicate not to involve with the smartphone includes the user being watching a television screen rather than a smartphone, beginning to talk to a physically present person in the vicinity, or being reaching another device such as an e-book or media player with which involvement with the smartphone may be replaced.
In addition, radar manager 106 also uses radar data from radar system 104 to determine gestures performed by the user. These gestures may involve a user touching a surface such as a table, display 116, or their shirt sleeve, or touching an unrelated gesture. Touch-independent gestures may be performed in air, in three dimensions, and/or without requiring a hand or finger to touch the input device, but without precluding touching an object. These gestures may be recognized or determined based on radar data obtained by radar system 104, and then output to an application or other subscriber executing on UE102, or used as input to perform operations, such as to indicate an interface with UE 102.
Example gestures include gestures similar to sign language (e.g., ASL or american sign language), which are a wide variety of complex one-handed or multi-handed gestures, or simple multi-handed or one-handed gestures, such as sliding left, sliding right, sliding up or down, flat-handed raising or lowering (e.g., to raise or lower the UE102 or the music volume of a television or stereo controlled by the UE 102), or sliding forward or backward (e.g., left-to-right or right-to-left) to change music and video tracks, stop an alarm, shuffle a phone call, or even play a game. These are just a few of the many example gestures and functions that may be controlled by these gestures and may be enabled by radar system 104 and radar manager 106. Thus, while this document relates in some respects to involvement with state management, nothing in this document should be misinterpreted as indicating that involvement with state management aspects cannot be used to additionally or alternatively configure radar system 104 and radar manager 106 to perform gesture recognition.
The display 116 may include any suitable display device, such as a touch screen, a Liquid Crystal Display (LCD), a Thin Film Transistor (TFT) LCD, an in-plane-switch (IPS) LCD, a capacitive touch screen display, an Organic Light Emitting Diode (OLED) display, an Active Matrix Organic Light Emitting Diode (AMOLED) display, a super AMOLED display, or the like. As noted, the display 116 may be powered at various levels, such as at full saturation with touch input, reduced saturation without touch input, and low saturation and low power (e.g., grey clock) or no power.
The plurality of sensors 108 may be any of a variety of sensor devices configured to generate sensor data indicative of the context of the UE102, or in other words, an indication of the operating environment or surroundings of the UE 102. The plurality of sensors 108 include an Inertial Measurement Unit (IMU) for measuring movement, which is defined herein to include specific forces, angular velocities, orientations, vibrations, accelerations, velocities, and positions including pitch, roll, and yaw for each of three axes (e.g., X, Y, and Z). The IMU is just one example of a sensor 108. Other examples of the plurality of sensors 108 for sensing movement include accelerometers, gyroscopes, and/or magnetometers. The plurality of sensors 108 may include a proximity sensor, a light sensor, a positioning sensor, a compass, a temperature sensor, an atmospheric pressure sensor, or any other sensor to detect the presence or proximity of an object. The plurality of sensors 108 may include proximity sensors, such as radar system 104, operating in a proximity mode as opposed to a gesture recognition mode, or other modes.
The UE102 may rely primarily on battery power, and thus, the plurality of sensors 108 may exclude high power sensors, such as cameras, but primarily include low power sensors that provide accurate sensor data for developing accurate contexts. By avoiding using a high power sensor, such as a camera, to drive the gating decision, instead using sensor data from a low power sensor, such as an IMU, the UE102 operates more efficiently than if the camera was used to use less power to make the gating decision.
The mobility manager 110 is configured to determine movement of the UE102 based on inertial data or other sensor data obtained from the sensors 108. The mobility manager is configured to determine the movement of the UE102 to enable the UE102 to define a context. Example movements include the UE102 being lifted (e.g., picked up), oriented toward or away from the user 120, and vibrating. Example movements may indicate cessation of physical contact by the user 120 of the UE102, placement of the UE102 on an inanimate object (e.g., a table, a car console, a couch arm, a pillow, a floor, a docking station), and placement of the UE102 within a closed container such as a pocket, bag, or purse. Further example movements include those actions that indicate that the UE102 is being held, movements that indicate that the UE102 is being held by a person who is walking, cycling, riding a car, or otherwise moving, movements that indicate how the UE102 is held in a carrying orientation, such as in a landscape, portrait-up, portrait-down, or a combination thereof. Example movements further include the UE102 not being held, or movements that indicate that the UE102 is not being held but is being carried on a person who is walking, etc.
These movements may indicate potential, non-involvement, or sustained involvement of the user with the UE 102. For example, the movement of the UE102 may indicate that the user device is moving or orienting towards the user 120 or moving/orienting away from the user 120, is moving too fast or changing movement too fast to interact with for many possible user interface types, is being held by the user 120 (via natural human movement, breathing, heartbeat), or is vibrating due to mechanical or non-user sources (e.g., vibration of the vehicle, surrounding sounds shaking the UE102, music causing the UE102 to vibrate). Thus, indicating a potentially non-interfering orientation away from UE102 may include a change in orientation of UE102, such that a previous orientation in which user 120 may have looked at display 160 is now unlikely to be doing so. The user 120 types or reads in one orientation, then turns the phone over or on its side or in a pocket, etc., is just one example of indicating movement away from the orientation and thus potentially not involved. Example movements that may indicate a maintained engagement include a vibration indicating that the user is maintaining a grip or placement of the UE102 or is maintaining its or its orientation relative to the UE102, where the orientation previously indicated is consistent with the engagement of the UE102 or with the engagement of the UE 102.
The movement determined by the mobility manager 110 may indicate how or whether the user 120 is interacting with the UE 102. The accelerations or vibrations detected by the mobility manager 110 may correspond to similar vibrations and accelerations observed when the user 120 is walking or otherwise moving with the UE102, and thus the movement may indicate how the user is walking or moving. The change in movement determined by mobility manager 110 may indicate a change in location and orientation to be carried as further information about how or whether user 120 interacts with UE 102. The lack of movement patterns or movements inferred by the movement manager 110 may be similar to movements typically observed when the user 120 is viewing the UE102 or holding the UE102 in a holding context. In such conditions when the UE102 is contained in a pocket of clothing worn by the user 120 or in a backpack or briefcase, overhead locker on an airplane or train, console or glove box of a vehicle, or other storage enclosure, the movement and movement patterns may indicate a storage context.
A context may be defined by other information than movement. For example, the proximity sensor or radar system 104 may detect whether the radar system 104 (or other portion of the UE 102) is occluded by an object in proximity to the UE 102. Evidence of occlusion may indicate that the UE102 is in a storage context, and the lack of occlusion may indicate otherwise. Other sensors, such as ambient light sensors, barometers, location sensors, optical sensors, infrared sensors, etc., may provide signals to the UE102 that further define the operating environment or context of the UE102 to improve gesture recognition and other described techniques. Relative altitude, shadows, ambient sounds, ambient temperature, etc., are further examples of signals that may be captured by radar system 104 through sensors 108 to enable UE102 to define a context.
The state manager 112 manages the state of the UE102, such as power, access, and information states, and in some examples, manages the state based on the context defined above. This management of UE102 and its components is performed based in part on the determinations made by radar manager 106 and mobility manager 110, the sensor data from sensors 108, and the context defined thereby. For example, the state manager 112 may alter the display 116 of the UE102 to power to manage power to components of the authentication system 114, to manage power to a computer processor to perform calculations used in authentication, or to manage power to an imaging system to perform image-based facial authentication, to manage power to a radar (e.g., radar system 104) or other component, such as by anticipating receiving a touch input from the user 120 for entering a password. When radar-based gesture recognition is gated, state manager 112 may instruct radar manager 106 to place radar system 104 in an approach or disable mode, and when radar-based gesture recognition is not gated, state manager 112 may instruct radar system 104 to be placed in an enable or gesture recognition mode.
As described above, management of UE102 is based on determinations by radar manager 106 and mobility manager 110 that determine intent to engage, disengage, or maintain engagement and movement of UE102, respectively. The state manager 112 may do so based on these determinations alone or also based on other information defining the context of the UE102 including the current state, current context, applications being run, and what these applications show, among other things. By taking into account context, state manager 112 may improve the accuracy, robustness, and speed of overall determination that the user intent is to interface, not interface, or maintain an interface with UE 102.
The "multiple determinations" (e.g., determinations by radar manager 106 and mobility manager 110) that define a context may be performed simultaneously or in stages as part of managing the state of UE102, or one of these may be used separately. For example, assume that the UE102 is in a low power state for components used for authentication. The radar manager 106 may determine that the user 120 intends to authenticate with the UE102 based on movement toward the UE102 or extension to the UE 102. In some cases, state manager 112 merely views this as insufficient context for state manager 112 to cause UE102 to be altered to a high power state (e.g., for authentication, for interpreting radar-based gestures). Thus, the state manager 112 may cause some of the authentication components to be powered to an intermediate state, rather than the high power state (e.g., the high power state 504-1 of fig. 5). For example, where the authentication system 114 performs facial recognition using infrared sensors, the state manager 112 may power these sensors and the display 116 to a higher power in anticipation of authenticating the user, and for the case of the display 116, indicate to the user that the UE102 is "waking up" and thus responding faster and faster. As an additional step, the state manager 112 may wait until the mobility manager 110 determines that the context indicates that the user has moved, picked up, lifted the UE102, and so forth, before fully powering up the authentication component, here the infrared sensor. Although not required, the state manager 112 can cause the component to attempt authentication without further input from the user, thereby making authentication seamless to the user 120.
However, in some cases, state manager 112 determines the state of powering or otherwise preparing UE102 in response to both inertial data and radar data, such as radar manager 106 determining that the user intends to engage and mobile manager 110 determining that the user is picking up UE 102.
Thus, the state manager 112 may wait until the user's intent is a higher confidence of engaging by picking up the UE102, such as the mobility manager 110 indicating that the user has just begun touching the UE 102. In this case, the state manager 112 may increase power based only on the determination of the radar manager 116, but may do so to reach an intermediate power level for the display or authentication system 114 or components thereof, rather than waiting until the mobile manager 110 indicates a user touch to fully power these components. However, as described above, the state manager 112 may change the state to higher power levels only when an intent to engage is determined based on radar data, or to transition the state to lower those levels only when an intent to not engage is determined based on radar data.
FIG. 1 illustrates one of many example ways in which the state manager 112 may manage the state of the UE102 in the example environments 100-1, 100-2, and 100-3.
In environment 100-1, it is assumed that user 120 is authenticated and that UE102 is in a high level state of power, access, and information. The authentication is indicated to the user 120 via the display 116 displaying a high saturation and high brightness star symbol (shown at 122 in environment 100-1). In environment 100-1, user 120 places UE102 on a table. This placement of the UE102 on the table causes the sensors 108 to sense the inertial data and then provide the inertial data to the mobility manager 110. The mobility manager 110 determines that the UE102 has moved but is now still stationary based on the inertial data. The UE102 was previously in a mobile context and is now in a stationary context. At this point, movement manager 110 may pass this movement determination to radar system 104, radar manager 106, or state manager 112, but in either case, this is the data point used to determine whether to reduce the state from a high level to an intermediate level or a lower level. As noted, lowering these states may save power, keep information private and access secure, and still provide a seamless user experience for the user 120. For example, based on the movement determination, radar system 104 forms a context for managing its output. In an environment 100-1 where some slight movement is detected but the user 120 is not holding the UE102, the radar system 104 may determine the environment 100-1 where the UE120 is resting on a flat, fixed surface. Because the context of UE120 is a static context, except for slight movements, the context meets the requirements of radar-based gesture recognition.
Continuing with the example, consider environment 100-2 in which user 120 retracts their hand from UE 102. The retraction is sensed and analyzed by radar system 104 and radar manager 106, respectively. By doing so, radar manager 106 determines that user 120 intends not to interface with UE 102. Based on the determination from radar manager 106 and the movement determination from movement manager 110, state manager 112 may reduce one or more of the states of UE 102. Here the reduction intention corresponds to the level of interference of the user 120 with the UE 102. This reduction by the state manager 112 is displayed at the low brightness and saturation star symbols (shown at 124) by reducing the saturation and brightness of the display 116 to an intermediate power level. Note that state manager 112 may reduce the state to a low level of power, access, and/or information, but here state manager 112 reduces the state to an intermediate level because the intent not to interface with radar manager 106 indicates that user 120 is retracting their or their arms, but their body is still oriented toward UE102, and user 120 is still looking at UE 102. This is one example of adapting the state to the user's involvement, as retraction indicates some degree of non-involvement, but may alone indicate some continued involvement or some degree of uncertainty in the determination of non-involvement by radar manager 106. For example, the retraction determination may be used as proximity information for defining a second context for the UE 102. Radar system 104 forms a second context in environment 100-2 for managing its gesture recognition capabilities. In the event that retraction is detected without any movement to UE102, radar system 104 may determine that environment 100-2 is a storage context that does not meet the requirements of touch-independent gesture recognition because the context indicates that the device is now outside the reach of user 120.
Concluding the example, consider environment 100-3. Here, user 120 is reading a book while UE102 is located on a desk. The user 120 orients their body at an angle away from the UE102 and towards their book, and the user 120 is looking at the book instead of the UE 102. Based on this additional information regarding the orientation of user 120, radar manager 106 determines that user 120 intends (may have already) not to interface with UE 102. At this point, radar manager 106 provides the additional intent of not being involved with the determination to state manager 112, and state manager 112 then lowers the state of UE102 to a low level, shown at lower power usage at display 116 (only time of day is shown at low brightness and saturation at 126). Although not shown, the state manager 112 also de-authenticates the user 120 (e.g., locks the UE 102). This additional information regarding the orientation of the user 120 or the determination that the user 120 is intending not to interface with the UE102 may be used as proximity information defining a third context for the UE 102. The radar system 104 forms a third context in response to detecting an intent not to engage reading the book. Radar system 104 may determine that environment 100-3 is not a context that satisfies the requirements of radar-based gesture recognition because the context indicates that the device is now outside of the proximity impact range of user 120.
As shown in this example, the techniques described herein may manage the state of the user device to provide a seamless user experience involving authentication and radar-based gesture recognition. These techniques enable this to be done with reduced power consumption and better privacy and security than other techniques. State management may enable maintaining or increasing levels of power, access, and information. As further shown, without gating, UE102 may over-interpret radar-based gestures from radar data obtained by radar system 104, wasting computational resource processing and then discarding erroneous gestures. By gating gesture recognition by radar system 104 based on context, the disclosed techniques and systems enable UE102 to conserve power, increase accuracy, or reduce latency in interpreting and responding to radar-based inputs relative to other techniques and systems for radar-based gesture recognition.
In more detail, consider one example of the authentication system 114 shown in FIG. 2. This is just one example, as other authentication systems controllable by the state manager 112 are contemplated, such as password entry through a touch-sensitive display, radar authentication using the radar system 104, or a fingerprint reader, to name a few.
This example of an authentication system 114 is illustrated, which shows an interior 200 of a UE102 (shown as a smartphone). In the depicted configuration, UE102 includes a radar integrated circuit 202 of radar system 104, a speaker 204, a front-facing camera 206, and a proximity sensor 208 and an ambient light sensor 210 as examples of sensors 108. As a further example of sensor 108, UE102 also includes a facial unlock sensor 212, which facial unlock sensor 212 includes a Near Infrared (NIR) flood illuminator 214 and a Near Infrared (NIR) spot projector 216, both of which project infrared or near infrared light on the user. The facial unlock sensor 212 also includes two NIR cameras 218-1 and 218-2, which are located on opposite sides of the UE 102. The NIR cameras 218-1 and 218-2 sense infrared light and near infrared light reflected by the user. This reflected near infrared light may be used to determine facial features and, using these features, determine whether the user is authenticated based on a comparison with previously stored facial feature information. NIR flood illuminator 214, for example, utilizes an NIR light "flood" environment that provides an image upon receiving reflections from the user (and other objects). Even in the case of low or no ambient light, the image includes the user's face and can therefore be used to determine facial features. The NIR point projector 216 provides NIR light reflections that may be analyzed to determine the depth of the object, including features of the user's face. Thus, a depth map (e.g., a spectral depth map) of the user may be created (e.g., previously when setting the face authentication), and a current depth map may be determined and compared to stored, previously created depth maps. This depth map helps prevent authentication of a picture or other two-dimensional rendering of the user's face (rather than the actual face of a person).
Such a mapping of user facial features may be securely stored on the UE102 and, based on the user's preferences, may be both secure on the UE102 and may prevent external entities from being available.
The authentication system 114 includes a facial unlock sensor 212, but may also include other components, such as a front-facing camera 206, a proximity sensor 208, and an ambient light sensor 210, as well as a processor for analyzing data, a memory (possibly with multiple power states as well) for storing, caching, or buffering sensor data, and so forth.
As noted in the methods described below, the facial unlock sensor 212 senses IR (infrared) and NIR (near infrared) data to perform facial recognition, which is one way in which the technology can authenticate a user and thus alter the access state (e.g., unlock the UE 102). To conserve power, the facial unlock sensor 212 operates in a low power state (which may also be simply off) when not in use. In particular, NIR flood illuminator 214 and NIR spot projector 216 do not radiate in the off state. However, a warm-up sequence associated with transitioning from a low-power or no-power state to an intermediate-power state and/or a high-power state may be used for NIR flood illuminator 214 and NIR spot projector 216. By powering one or both of these components, the latency of authenticating a user may sometimes be reduced by half a second or more. This may save users time and improve their experience, given that many users authenticate their devices tens or even hundreds of times per day. As noted herein, this time delay is reduced by radar manager 106 determining that the user is intending to interface with them or their device based on radar data provided by radar system 104. This is managed by the state manager 112. Indeed, these techniques may proactively detect the user intent involved and initiate the warm-up sequence. The technique may even be performed before the user touches the UE102, although this is not required. Thus, this technique enables NIR floodlight 214 and NIR spot projector 216 to be sufficiently powered for authenticating a user, which reduces the time it takes for the user to wait for facial recognition to complete.
Aspects of the facial unlock sensor 212 are considered before proceeding to other components in the UE 102. This example component of the authentication system 114 may authenticate a user using facial recognition at only ten degrees relative to the plane of the display 116. Thus, rather than the user having to pick up the phone and turn the sensor towards their or their face, such as at an angle of 70 to 110 or 80 to 100 degrees, using the face unlock sensor 212, the authentication system 114 is configured to authenticate the user 102 even before it is picked up by the user. This is illustrated in fig. 3, which shows a user 120 whose part of the face is used for facial recognition (e.g., their chin, nose, or cheekbones) at an angle that may be only ten degrees relative to the plane 304 of the display 116. It is also shown that when the face of the user 120 is more than one meter from the face unlock sensor 212, the user 120 is authenticated as shown at face distance 306. By doing so, the technique permits nearly seamless and instant authentication even if the UE102 is oriented upside down or at an anomalous angle.
In more detail, consider fig. 4, which illustrates an example implementation 400 of UE102 (including radar manager 106, mobility manager 110, and status manager 112) that may implement techniques for authentication management via an IMU and radar. The UE102 of fig. 4 is illustrated with various example devices including a UE102-1, a tablet 102-2, a laptop computer 102-3, a desktop computer 102-4, a computing watch 102-5, computing glasses 102-6, a gaming system 102-7, a home automation and control system 102-8, and a microwave oven 102-9. The UE102 may also include other devices such as televisions, entertainment systems, audio systems, automobiles, drones, touch pads, graphics tablets, netbooks, e-readers, home security systems, and other home appliances. Note that the UE102 may be wearable, non-wearable but mobile or relatively non-mobile (e.g., desktop and appliance).
The UE102 includes an inertial measurement unit 408 as an example of the sensor 108 described above. An exemplary overall lateral dimension of the UE102 may be, for example, about eight centimeters by about fifteen centimeters. The exemplary footprint of the radar system 104 may be more limited, such as about four millimeters by six millimeters including the antenna. The requirement for such limited footprint of radar system 104 to accommodate many other desirable features of UE102 in such space-limited packages in conjunction with power and processing limitations may result in a tradeoff in accuracy and efficiency of radar-based gesture recognition, at least some of which may be overcome in view of the teachings herein.
The UE102 also includes one or more computer processors 402 and one or more computer-readable media 404, including memory media and storage media. An application and/or operating system (not shown) embodied as computer-readable instructions on computer-readable medium 404 may be executed by computer processor 402 to provide some or all of the functionality described herein, such as some or all of the functionality of radar manager 106, mobility manager 110, and status manager 112 (shown in computer-readable medium 404, although this is not required).
The UE102 may also include a network interface 406. The UE102 may use the network interface 406 to communicate data over a wired, wireless, or fiber optic network. By way of example, and not limitation, network interface 406 may communicate data over a Local Area Network (LAN), a Wireless Local Area Network (WLAN), a Personal Area Network (PAN), a local area network (WAN), an intranet, the Internet, a peer-to-peer network, or a mesh network.
In aspects, the radar system 104 is implemented at least partially in hardware. Various embodiments of radar system 104 may include a system on a chip (SoC), one or more Integrated Circuits (ICs), a processor with embedded processor instructions or configured to access processor instructions stored in memory, hardware with embedded firmware, a printed circuit board with various hardware components, or any combination thereof. The radar system 104 operates as a monostatic radar by transmitting and receiving its own radar signals. In some embodiments, the radar system 104 may also cooperate with other radar systems 104 within the external environment to implement bistatic, multistatic, or network radar. However, constraints or limitations of UE102 may affect the design of radar system 104. For example, the UE102 may have limited power available to operate radar, limited computing power, size constraints, layout constraints, an external housing that attenuates or distorts radar signals, and so forth. As described further below, the radar system 104 includes several features that enable advanced radar functionality and high performance in the presence of these constraints.
Before explaining additional example ways in which the state manager 112 may function, consider fig. 5, which illustrates a number of information, power, and access states that may be managed by the state manager 112 in accordance with which the UE102 may operate.
Fig. 5 illustrates access, information, and power states in which the UE102 may operate, each of which may be managed by the described techniques. For visual simplicity, these example levels and types of device states 500 are shown at three levels of granularity, although many levels are contemplated for each of access state 502, power state 504, and information state 506. The access state 502 is shown with three example levels of granularity, a high access state 502-1, a medium access state 502-2, and a low access state 502-3. Similarly, power state 504 is shown with three example levels of granularity, a high power state 504-1, an intermediate power state 504-2, and a low power state 504-3. Likewise, the information state 506 is shown at three example levels of granularity, a high information state 506-1, an intermediate information state 506-2, and a low information state 506-3.
In more detail, the access state 502 relates to access rights available to the user of the device to data, applications and functions of the UE 102. Such access may be high, sometimes referred to as an "unlocked" state of the UE 102. Such high access levels may simply include applications and functions of the device, and may also include access to various accounts, such as bank accounts, social media accounts, etc., by the UE 102. Many computing devices, such as UE102, require authentication to provide high access, such as high access state 502-1. However, the UE102 may grant various intermediate levels of access, such as granting the user access to the status of some, but not all, accounts, services, or components of the UE 102. Examples include allowing a user to take a picture, but not access a previously captured photograph. Other examples include allowing a user to answer a phone call but not access the contact list when placing the call. These are just some of the many intermediate permissions that the UE102 may grant, as shown with the intermediate access state 502-2. Finally, the access state 502 may avoid granting access, as shown by the low access state 502-3. In the event that the device can be turned on, a notification such as an alarm is sent to wake up the user or the like, but access to the functionality of the UE102 is not permitted (or the UE102 may simply be turned off, so access is not permitted).
The power state 504, the high power state 504-1, the intermediate power state 504-2, and the low power state 504-3 are shown at three example levels of granularity. The power state 504 is associated with one or more components of the UE102, such as the radar system 104, the display 116, or other power consuming components, such as a processor, a camera, a microphone, a voice assistant, a touch screen, sensors, radar, and components that are part of the authentication system 114 (which may also include the previous components listed). In the context of powering a component and the general power state 504, the words power, powering, increasing power, decreasing power, and the like may include control of a Power Management Integrated Circuit (PMIC); managing power rails extending from the PMIC; opening and closing switches between the power rail, the PMIC, and one or more circuit components (e.g., the mentioned NIR components, camera, display, and radar); and providing a supply voltage to accurately and safely operate the components, which may include ramping up (ramp) or distributing an applied voltage or managing an in-rush of current (in-rush).
With respect to radar system 104, power state 504 may be reduced by collecting radar data at different duty cycles (e.g., lower frequencies may use less power while higher frequencies may use more power), turning off various components while the components are inactive, or adjusting a power amplification level. By doing so, the radar system 104 may use approximately 90mW of power in the high power state 504-1, 30 to 60mW of power in the intermediate power state 504-2, or less than 30mW of power in the low power state 504-3 (e.g., the radar system 104 may operate from 2 to 20mW while still providing some usable radar data, such as user presence). Each of these power usage levels allows for different resolutions and distances. Additional details regarding power management of radar system 104 (and UE 102) are described with reference to fig. 6-1.
In the above-described changing-state context, state manager 112 may power up or power down various components of UE102 based on determinations made by radar manager 106 and mobility manager 110.
For example, the state manager 112 may change the power of the authentication system 114 or the display 116 from a lower power state (e.g., the low power state 504-3 to the intermediate power state 504-2 or any of these to the high power state 504-1). By doing so, the UE102 may more quickly or easily interface or authenticate with the user. Accordingly, the state manager 112 may change the power state 504 to a higher or lower power than is currently the case for the system of the UE102 or a particular power-consuming entity associated with the UE 102. Example components described further as part of FIG. 2 above, including powering on or off facial unlock sensor 212 and its components, NIR floodlight 214 and NIR point projector 216, and NIR cameras 218-1 and 218-2, reducing power to these components, displays, microphones, touch input sensors, etc.
A third example state of the UE102 is the information state 506, which is illustrated with a high information state 506-1, an intermediate information state 506-2, and a low information state 506-3. In more detail, the informational state 506 relates to the amount of information provided to a user, such as the user 120 of FIG. 1. In the context of notifications, the high information state 506-1 provides the highest information level, and typically assumes that the UE102 is unlocked or otherwise authenticated, or has a user preference to provide high level information without authentication. Examples include, for the high information state 506-1, displaying the caller's name, number, and even associated images when a call is received. Similarly, when text or email or other type of message is received, the content is automatically presented via the display 116 or audio speakers, peripherals, or the like. This assumes a high level of involvement, although the user's preferences may determine what involvement is required. It is assumed here that there is some correlation between the user's engagement and the amount of information provided, and thus, by determining the engagement, these techniques can adapt the presented information to that determination. Examples of reduced information, such as intermediate information state 506-2, include: presenting a ring tone but not the caller's name/identity when a call is received, indicating that a text message or email has been received, but only the subject line or only part but not all of the address or body content is received, etc. The low information state 506-3 presents little or no information personally associated with the user 120, but may include information that is generic or widely considered to be common sense or insensitive, such as the display 116 displaying the current date, time, weather conditions, battery power status, or the UE102 being in an on state. Other examples of the low information state 506-3 include a white screen or a black screen and an audible "ping" or ring tone to indicate only that a message has been received when a text message is received, but not a name, number, or other information about the caller.
Fig. 6-1 illustrates an example implementation 600 of radar system 104. In example 600, radar system 104 includes each of at least one of the following components: a communication interface 602, an antenna array 604, a transceiver 606, a processor 608, and a system medium 610 (e.g., one or more computer-readable storage media). The processor 608 may be implemented as a digital signal processor, a controller, an application processor, another processor (e.g., the computer processor 402 of the UE 102), or some combination thereof. System media 610, which may be included in or separate from computer-readable media 404 of UE102, includes one or more of the following: attenuation reducer 614, digital beamformer 616, angle estimator 618, power management module 620, or gesture recognition module 621. These modules may compensate or mitigate the effects of integrating radar system 104 into UE102, thereby enabling radar system 104 to recognize small or complex gestures, differentiate between different orientations of the user (e.g., "reach"), continuously monitor the external environment, or achieve a target false alarm rate. With these features, radar system 104 may be implemented within a variety of different devices, such as the device illustrated in fig. 4.
Using communication interface 602, radar system 104 may provide radar data to radar manager 106. The communication interface 602 may be a wireless or wired interface implemented separately from the UE102 or integrated within the UE102 based on the radar system 104. Depending on the application, the radar data may include raw or minimally processed data, in-phase and quadrature (I/Q) data, range-doppler data, processed data including target position information (e.g., range, azimuth, pitch), clutter map data, and the like. Typically, the radar data includes information that radar manager 106 may use to provide status manager 112 with user intent to engage, disengage, or remain engaged.
Fig. 6-2 illustrates an example transceiver 606 and processor 608. The transceiver 606 includes a number of components that may be individually turned on or off via the power management module 620 depending on the operating state of the radar system 104. Note that the power management module 620 may be separate, integrated with the state manager 112 or under the control of the state manager 112, such as if the state manager 112 is powering on or powering off components used to authenticate a user (e.g., the authentication system 114). The transceiver 606 is shown to include at least one of each of the following components: active component 622, Voltage Controlled Oscillator (VCO) and voltage controlled buffer 624, multiplexer 626, analog to digital converter (ADC)628, Phase Locked Loop (PLL)630, and crystal oscillator 632. If turned on, each of these components consumes power even if radar system 104 is not actively transmitting or receiving radar signals using these components. The active components 622 may include, for example, an amplifier or filter coupled to a supply voltage. VCO 624 generates a frequency modulated radar signal based on the control voltage provided by PLL 630. Crystal oscillator 632 generates a reference signal for signal generation, frequency conversion (e.g., up-conversion or down-conversion), or timing operations within radar system 104. By turning these components on or off, power management module 620 enables radar system 104 to quickly switch between active and inactive operating states and conserve power during various inactive time periods. These periods of inactivity may be on the order of microseconds (μ s), milliseconds (ms), or seconds(s).
The processor 608 is shown to include multiple processors that consume different amounts of power, such as a low power processor 608-1 and a high power processor 608-2. By way of example, the low power processor 608-1 may include a processor embedded within the radar system 104, while the high power processor may include the computer processor 402 or some other processor external to the radar system 104. Differences in power consumption may be due to differences in available memory or computational power. For example, the low power processor 608-1 may utilize less memory, perform fewer computations, or utilize a simpler algorithm than the high power processor 608-2. Despite these limitations, the low power processor 608-1 may still process data for less complex radar-based applications, such as proximity detection or motion detection (based on radar data rather than inertial data). In contrast, the high power processor 608-2 may utilize a large amount of memory, perform a large number of calculations, or perform complex signal processing, tracking, or machine learning algorithms. The high power processor 608-2 may process data for radar-based applications of interest, such as gesture recognition, facial recognition (for the authentication system 114), and provide accurate high resolution data through resolution of angular blur or distinguishing between multiple users and their features.
To conserve power, the power management module 620 may control whether the low power processor 608-1 or the high power processor 608-2 is used to process radar data. In some cases, the low power processor 608-1 may perform portions of the analysis and pass the data on to the high power processor 608-2. Example data may include clutter maps, raw or minimally processed radar data (e.g., in-phase and quadrature data or range-doppler data), or digital beamforming data. The low power processor 608-1 may also perform some low level analysis to determine if there is anything of interest in the environment for the high power processor 608-2 to analyze. In this manner, power may be saved by limiting the operation of the high power processor 608-2 while utilizing the high power processor 608-2 in the event that high fidelity or accurate radar data is requested by the radar-based application. Other factors that may affect power consumption within radar system 104 are further described with respect to fig. 6-1.
Based on the radar data, the gesture recognition model 621 recognizes cues, shapes, and signs made by the user with their body, including their fingers, hands, eyes, head, mouth, and so forth. The gesture recognition model 621 matches the user's movements to the matching shapes, landmarks and movements of the predetermined gesture. In response to determining that the radar data matches a particular gesture, gesture recognition model 621 outputs an indication of the gesture to other components to perform a function, e.g., to control an operating system or application function, such as authenticating user 120.
The gesture recognition model 621 may be a machine learning model, such as a neural network, trained to discern touch-independent gestures from radar data. For example, gesture recognition model 621 may be trained using training data that includes samples of radar data and corresponding portions of gestures that match the radar data. Based on the training data, gesture recognition model 621 determines rules to apply to samples of radar data received by radar system 104 such that when similar radar data is received, corresponding portions of the gesture are identified and used to construct a gesture prediction. In executing the rules, gesture recognition model 621 may output an indication of the recognized gesture predicted from the radar data.
In some cases, the indication of the recognized gesture may be accompanied by a confidence or score. The confidence indicates the confidence that the radar data 104 has been applied to the recognized gesture. The gesture recognition model 621 may adjust the confidence in the recognized gesture based on context. For example, the gesture recognition model 621 applies a high confidence when detecting gestures in an environment where the user is not moving, versus a low confidence when detecting similar gestures in an environment where the user is moving. The gesture recognition model 621 may apply a low confidence when detecting gestures in the environment of the large object occluding radar system 104, versus a high confidence when detecting similar gestures in the environment of the user viewing the UE 102. An application or other component that relies on a detected gesture may discard or process the gesture depending on a confidence or score associated with the gesture. The described techniques and systems may apply a confidence or score to a gating gesture, so the gesture is discarded and not used to perform a function.
These and other capabilities and configurations, as well as the manner in which the entities of fig. 1, 2, 4, and 6-9 interact and interact, are set forth in more detail below. These entities may be further divided, merged, and so on. The environment 100 of fig. 1 and the detailed illustrations of fig. 2-9 illustrate some of the many possible environments and devices in which the described techniques can be employed. Fig. 6-9 depict additional details and features of radar system 104. In fig. 6-9, radar system 104 is described in the context of UE102, but as noted above, the applicability of the features and advantages of the described systems and techniques is not necessarily so limited, and other embodiments involving other types of electronic devices may also be within the scope of the present teachings.
Fig. 7 illustrates an example arrangement 700 of receive antenna elements 702. For example, if antenna array 604 includes at least four receive antenna elements 702, receive antenna elements 702 may be arranged in a rectangular arrangement 704-1 as shown in the middle of fig. 4. Alternatively, if antenna array 604 includes at least three receive antenna elements 702, a triangular arrangement 704-2 or an L-shaped arrangement 704-3 may be used.
Due to size or layout constraints of UE102, the element spacing between receive antenna elements 702 or the number of receive antenna elements 702 may not be ideal for the angle at which radar system 104 is to be monitored. In particular, element spacing may result in the presence of angular ambiguity, which makes conventional radars challenging to estimate the angular position of a target. Thus, conventional radars may limit the field of view (e.g., the angle to be monitored) to avoid blurred regions with angular ambiguity, and thereby reduce false detections. For example, conventional radars may limit the field of view to angles between approximately-45 degrees and 45 degrees to avoid angular blurring that occurs using a wavelength of 8 millimeters (mm) and an element spacing of 6.5mm (e.g., element spacing of 90% of the wavelength). Thus, conventional radars may not be able to detect targets that exceed the 45 degree limit of the field of view. In contrast, the radar system 104 includes a digital beamformer 616 and an angle estimator 618 that resolve angle ambiguities and enable the radar system 104 to monitor angles that exceed 45 degree limits, such as angles between about-90 degrees and 90 degrees, or angles up to about-180 degrees and 180 degrees. These angular ranges may be applied across one or more directions (e.g., azimuth and/or pitch). Thus, the radar system 104 may achieve a low false alarm rate for various antenna array designs that include element spacings that are less than, greater than, or equal to one-half of the center wavelength of the radar signal.
Using antenna array 604, radar system 104 may form a steered (stee) or unguided, wide or narrow, or shaped (shaped) (e.g., hemispherical, cubic, fan-shaped, conical, or cylindrical) beam. As an example, one or more transmit antenna elements (not shown) may have an omnidirectional radiation pattern that is not directed, or may be capable of producing a wide beam, such as wide transmit beam 706. Any of these techniques enables radar system 104 to illuminate a large volume of space. However, to achieve the target angular accuracy and angular resolution, receive antenna elements 702 and digital beamformer 616 may be used to generate thousands of narrow and steered beams (e.g., 3000 beams, 7000 beams, or 9000 beams), such as narrow receive beam 708. In this manner, radar system 104 may effectively monitor the external environment and accurately determine the angle of arrival of reflections within the external environment.
Returning to fig. 6-1, the transceiver 606 includes circuitry and logic for transmitting and receiving radar signals via the antenna array 604. Components of transceiver 606 may include amplifiers, mixers, switches, analog-to-digital converters, filters, etc. for conditioning radar signals. The transceiver 606 may also include logic for performing in-phase/quadrature (I/Q) operations such as modulation or demodulation. The transceiver 606 may be configured for continuous wave radar operation or pulsed radar operation. Various modulations may be used to generate the radar signal, including linear frequency modulation, triangular frequency modulation, stepped frequency modulation, or phase modulation.
The transceiver 606 may generate radar signals within a frequency range (e.g., a frequency spectrum) such as between 1 gigahertz (GHz) and 400GHz, between 4GHz and 100GHz, or between 57GHz and 63 GHz. The frequency spectrum may be divided into a plurality of sub-spectra having similar bandwidths or different bandwidths. The bandwidth may be on the order of 500 megahertz (MHz), 1GHz, 2GHz, etc. By way of example, the different frequency sub-spectra may include frequencies between approximately 57GHz to 59GHz, 59GHz to 61GHz, or 61GHz to 63 GHz. Multiple frequency sub-spectra, which have the same bandwidth and may be continuous or discontinuous, may also be selected for coherence. Multiple frequency sub-spectra may be transmitted simultaneously or separately in time using a single radar signal or multiple radar signals. The continuous frequency sub-spectrum allows the radar signal to have a wider bandwidth, while the discontinuous frequency sub-spectrum may further emphasize amplitude and phase differences, which enables the angle estimator 618 to resolve angle ambiguities. Attenuation reducer 614 or angle estimator 618 may cause transceiver 606 to utilize one or more frequency sub-spectra to improve the performance of radar system 104, as further described with respect to fig. 8 and 9. Some embodiments of the technique are particularly advantageous, such as when the UE102 is a handheld smartphone, the radar signal is in the 57Ghz-64Ghz band, the peak effective Equivalent Isotropic Radiated Power (EIRP) is in the range of 10dBm-20dBm (10mW-100mW), and the average power spectral density is about 13dBm/MHz, which has been found to adequately address radiated health and coexistence issues, while also providing a radar-detecting "bubble (bubble)" of suitable size (e.g., in a range of at least one meter, and typically up to or exceeding two meters) near the smartphone and user, in which the described method of authentication management by the IMU and radar provides particularly good time-saving convenience while conserving power.
6-3 illustrate example relationships between power consumption, gesture frame update rate 634, and response delay. In diagram 636, radar power states 638-1, 638-2, and 638-3 are associated with different power consumption levels and different gesture frame update rates 634. Gesture frame update rate 634 represents the frequency at which radar system 104 actively monitors the external environment by transmitting and receiving one or more radar signals. In general, power consumption is proportional to the gesture frame update rate 634. Thus, a higher gesture frame update rate 634 causes radar system 104 to consume a greater amount of power.
In graph 636, radar power state 638-1 utilizes a minimum amount of power, while radar power state 638-3 consumes a maximum amount of power. By way of example, radar power state 638-1 consumes power on the order of a few milliwatts (mW) (e.g., between about 2mW and 4 mW), while radar power state 638-3 consumes power on the order of several milliwatts (e.g., between about 6mW and 20 mW). With respect to the gesture frame update rate 634, the radar power state 638-1 uses an update rate on the order of several hertz (e.g., about 1Hz or less than 5Hz), while the radar power state 638-3 uses a gesture frame update rate 634 on the order of tens of hertz (e.g., about 20Hz or greater than 10 Hz).
The graph 640 depicts the relationship between response delays and gesture frame update rates 634 for different radar power states 638-1 to 638-3. In general, the response delay is inversely proportional to both the gesture frame update rate 634 and the power consumption. In particular, as the gesture frame update rate 634 increases, the response delay decreases exponentially. The response delay associated with radar power state 638-1 may be on the order of hundreds of milliseconds (ms) (e.g., 1000ms or greater than 200ms), while the response delay associated with radar power state 638-3 may be on the order of several milliseconds (e.g., 50ms or less than 100 ms). For radar power state 638-2, the power consumption, pose frame update rate 634, and response delay are between those of radar power state 638-1 and radar power state 638-3. For example, the power consumption of radar power state 638-2 is about 5mW, the gesture frame update rate is about 8Hz, and the response delay is between about 100ms and 200 ms.
Instead of operating in radar power state 638-1 or radar power state 638-3, power management module 620 dynamically switches between radar power states 638-1, 638-2, and 638-3 (and sub-states between these radar power states 638) to manage response delays and power consumption together based on activity within the environment. As an example, power management module 620 activates radar power state 638-1 to monitor the external environment or detect a user in proximity. Later, if the radar system 104 determines that the user shows an intent to engage or may begin to do so or begin performing a gesture, the power management module 620 activates the radar power state 638-3. Different triggers may cause power management module 620 to switch between different radar power states 638-1 to 638-3. Example triggers include motion or lack of motion, presence or absence of a user, movement of a user into or out of a specified area (e.g., an area defined by range, azimuth, or elevation), changes in the speed of motion associated with a user, engagement intent determined by radar manager 106 (e.g., "reach," although some engagement intents require additional power, such as facial feature tracking), or changes in reflected signal strength (e.g., due to changes in radar cross-sectional area). In general, a trigger indicating a lower likelihood of user interaction with the UE102 or a preference to collect data using a longer response delay may result in the radar power state 638-1 being activated to conserve power.
In general, power management module 620 determines when and how to conserve power and incrementally adjusts power consumption to enable radar system 104 to operate within the power limits of UE 102. In some cases, power management module 620 may monitor the remaining available power and adjust the operation of radar system 104 accordingly (e.g., due to a low battery). For example, if the remaining battery level is low, power management module 620 may continue to operate in radar power state 638-1, rather than switching to either of radar power states 638-2 or 638-3.
Each power state 638-1 to 638-3 may be associated with a particular framing structure. The framing structure specifies the configuration, scheduling, and signal characteristics associated with the transmission and reception of radar signals. Typically, a framing structure is provided so that appropriate radar data can be collected based on the external environment. The framing structure may be customized to facilitate the collection of different types of radar data for different applications (e.g., proximity detection, feature recognition, or gesture recognition). During the entire inactive time at each framing structure level, power management module 620 may turn off components within transceiver 606 in fig. 6-2 to conserve power. Example framing structures are further described with reference to fig. 6-4.
Fig. 6-4 illustrate an example framing structure 642. In the depicted configuration, the framing structure 642 includes three different types of frames. At the highest level, the frame structure 642 includes a series of gesture frames 644, which may be in an active state or an inactive state. In general, an active state consumes a greater amount of power relative to an inactive state. At an intermediate level, the framing structure 642 includes a series of Feature Frames (FF)646, which may be similarly in an active state or an inactive state. The different types of feature frames include a burst mode feature frame 648 (shown in the lower left of fig. 6-4) and a burst mode feature frame 650 (shown in the lower right of fig. 6-4). At a low level, the framing structure 642 includes a series of Radar Frames (RF)652, which may also be in an active state or an inactive state.
Depending on the type of gesture, the duration of the gesture frame 644 may be on the order of milliseconds or seconds (e.g., between about 10ms to 10 s). After the occurrence of the active gesture frame 644, the radar system 104 is inactive, as shown by the inactive gesture frames 644-3 and 644-4. The duration of the inactive gesture frame 644 is characterized by a deep sleep time 654, which may be on the order of tens of milliseconds or more (e.g., greater than 50 ms). In an example implementation, radar system 104 may now turn off all components within transceiver 606 to save power during deep sleep time 654.
In the depicted framing structure 642, each gesture frame 644 includes K feature frames 646, where K is a positive integer. If the gesture frame 644 is in an inactive state, all feature frames 646 associated with the gesture frame 644 are also in an inactive state. In contrast, the active pose frame 644 includes J active feature frames 646 and K-J inactive feature frames 646, where J is a positive integer less than or equal to K. The number of feature frames 646 may be based on the complexity of the pose and may include several to one hundred feature frames 646 (e.g., K may equal 2, 10, 30, 60, or 100). The duration of each feature frame 646 may be on the order of milliseconds (e.g., between about 1ms and 50 ms).
To conserve power, active feature frames 646-1 through 646-J occur before inactive feature frames 646- (J +1) through 646-K. The duration of the inactive feature frames 646- (J +1) through 646-K is characterized by a sleep time 656. In this manner, the inactive feature frames 646- (J +1) through 646-K are continuously executed such that the radar system 104 may be in a powered down state for a longer duration relative to other techniques that interleave the inactive feature frames 646- (J +1) through 646-K with the active feature frames 646-1 through 646J. Generally speaking, increasing the duration of sleep time 656 enables radar system 104 to turn off components within transceiver 606 that require longer startup times.
Each feature frame 646 includes L radar frames 652, where L is a positive integer that may or may not be equal to J or K. In some implementations, the number of radar frames 652 may vary across different feature frames 646 and may include a few frames or a few hundred frames (e.g., L may equal 5, 15, 30, 100, or 500). The duration of radar frame 652 may be on the order of tens or thousands of microseconds (e.g., between about 30 μ s and 5 ms). The radar frames 652 in a particular functional frame 646 may be customized for a particular detection range, range resolution, or doppler sensitivity, which facilitates detection of particular features and poses. For example, radar frame 652 may utilize a particular type of modulation, bandwidth, frequency, transmit power, or timing. If the feature frame 646 is inactive, then all radar frames 652 associated with that feature frame 646 are also inactive.
Pulse mode feature frame 648 and burst mode feature frame 650 comprise different sequences of radar frames 652. In general, radar frames 652 within the active pulse mode signature frame 648 transmit pulses separated in time by a predetermined amount. In contrast, radar frame 652 within active burst mode feature frame 650 transmits pulses continuously across a portion of burst mode feature frame 650 (e.g., the pulses are not separated by a predetermined amount of time).
Within each active pulse mode feature frame 648, the sequence of radar frames 652 alternates between active and inactive states. Each active radar frame 652 transmits a radar signal (e.g., chirp), which is illustrated by a triangle. The duration of the radar signal is characterized by an active time 658. During the active time 658, components within the transceiver 606 are powered. During a short idle time 660, which includes the time remaining within an active radar frame 652 and the duration of a subsequent inactive radar frame 652, the radar system 104 conserves power by turning off components within the transceiver 606 that have a startup time within the duration of the short idle time 660.
The active burst mode feature frame 650 includes M active radar frames 652 and L-M inactive radar frames 652, where M is a positive integer less than or equal to L. To save power, active radar frames 652-1 through 652-M occur before inactive radar frames 652- (M +1) through 652-L. The duration of inactive radar frames 652- (M +1) through 652-L is characterized by a long idle time 662. By grouping the inactive radar frames 652(M +1) through 652-L together, the radar system 104 may be in a powered down state for a longer duration relative to the short idle time 660 that occurs during the pulse pattern feature frame 648. Additionally, the power management module 620 may turn off additional components within the transceiver 606 that have a startup time that is longer than the short idle time 660 and shorter than the long idle time 662.
Each active radar frame 652 within the active burst mode feature frame 650 transmits a portion of a radar signal. In this example, active radar frames 652-1 through 652-M alternate between transmitting portions of radar signals that increase in frequency and portions of radar signals that decrease in frequency.
The framing structure 642 enables power to be saved by an adjustable duty cycle within each frame type. The first duty cycle 664 is based on the number (J) of active feature frames 646 relative to the total number (K) of feature frames 646. The second duty cycle 665 is based on a number of active radar frames 652 (e.g., L/2 or M) relative to a total number (L) of radar frames 652. Third duty cycle 668 is based on a duration of the radar signal relative to a duration of radar frame 652.
Consider an example framing structure 642 of a power state 638-1 that consumes approximately 2mW of power and has a gesture frame update rate 634 of between approximately 1Hz and 4 Hz. In this example, the framing structure 642 includes gesture frames 644 having a duration between approximately 250ms and 1 second. The gesture frame 644 includes 31 pulse pattern feature frames 648 (e.g., L equals 31). One of the 31 pulse pattern feature frames 648 is active. This results in a duty cycle 664 equal to approximately 3.2%. Each pulse pattern feature frame 648 is between approximately 8ms and 32ms in duration. Each pulse pattern feature frame 648 consists of eight radar frames 652. Within the active pulse pattern feature frame 648, all eight radar frames 652 are active. This results in a duty cycle 665 equal to 100%. Each radar frame 652 is between about 1 millisecond and 4 milliseconds in duration. The active time 658 within each active radar frame 652 is between about 32 mus and 128 mus. Thus, the resulting duty cycle 668 is approximately 3.2%. This example framing structure 642 has been found to produce good performance results. These good performance results are in terms of good gesture recognition and presence detection, while yielding good power efficiency results in the application context of a handheld smartphone in a low power state (e.g., low power state 504-3).
Based on the framing structure 642, the power management module 620 may determine when the radar system 104 is not actively collecting radar data. Based on the period of inactivity, power management module 620 may save power by adjusting an operating state of radar system 104 and turning off one or more components of transceiver 606, as described further below.
As noted, the power management module 620 may save power during periods of inactivity by turning off one or more components (e.g., a voltage controlled oscillator, a multiplexer, an analog-to-digital converter, a phase locked loop, or a crystal oscillator) within the transceiver 606. These periods of inactivity occur if the radar system 104 is not actively transmitting or receiving radar signals, which may be on the order of microseconds (μ s), milliseconds (ms), or seconds(s). In addition, power management module 620 may modify the transmit power of the radar signal by adjusting the amount of amplification provided by the signal amplifier. Additionally, power management module 620 may control the use of different hardware components within radar system 104 to conserve power. For example, if processor 608 includes a lower power processor and a higher power processor (e.g., a processor with different amounts of memory and computing power), power management module 620 may switch between utilizing the lower power processor for low level analysis (e.g., detecting motion, determining a user's location, or monitoring an environment) and the higher power processor for situations where radar manager 106 requests high fidelity or accurate radar data (e.g., for implementing high power state 504-1 of authentication system 114 for authenticating a user using the radar data).
In addition to the internal power saving techniques described above, the power management module 620 may also save power within the UE102 by activating or deactivating other external components or sensors within the UE102, either alone or under the direction of the authentication system 114. These external components may include speakers, camera sensors, global positioning systems, wireless communication transceivers, displays, gyroscopes, or accelerometers. Because radar system 104 may use a small amount of power to monitor the environment, power management module 620 may turn these external components on or off as appropriate based on where the user is located or what the user is doing. In this way, the UE102 may seamlessly respond to the user and save power without using an auto-off (shut-off) timer or the user physically touching or verbally controlling the UE 102.
Fig. 8 illustrates additional details of an example implementation 800 of radar system 104 within UE 102. In the example 800, the antenna array 604 is positioned below an outer housing of the UE102, such as a glass cover or outer cover. Depending on its material properties, the outer housing may act as an attenuator 802 that attenuates or distorts radar signals transmitted and received by the radar system 104. The attenuator 802 may comprise different types of glass or plastic, some of which may be present in the display screen, external housing, or other components of the UE102, and have a dielectric constant (e.g., relative dielectric constant) of between about four and ten. Thus, attenuator 802 is opaque or semi-transparent to radar signal 806 and may cause a portion of transmitted or received radar signal 806 to be reflected (as shown by reflected portion 804). For conventional radars, attenuator 802 may reduce the effective range that can be monitored, preventing small targets from being detected or reducing overall accuracy.
Assuming that the transmit power of radar system 104 is limited and redesign of the outer housing is not desired, one or more attenuation-related properties of radar signal 806 (e.g., frequency sub-spectrum 808 or steering angle 810) or attenuation-related characteristics of attenuator 802 (e.g., distance 812 between attenuator 802 and radar system 104 or thickness 814 of attenuator 802) are adjusted to mitigate the effects of attenuator 802. Some of these characteristics may be set during manufacturing or adjusted by the attenuation mitigator 614 during the course of operation of the radar system 104. For example, attenuation reducer 614 may cause transceiver 606 to transmit radar signal 806 using selected frequency sub-spectrum 808 or steering angle 810, cause the platform to move radar system 104 closer or farther away from attenuator 802 to change distance 812, or prompt the user to apply another attenuator to increase thickness 814 of attenuator 802.
Fig. 9 illustrates an example scenario 900 implemented by radar system 104. Portions of the scheme 900 may be performed by the processor 608, the computer processor 402, or other hardware circuits. Scheme 900 may be customized to support different types of electronics and radar-based applications (e.g., radar manager 106), and to enable radar system 104 to achieve target angle accuracy despite design constraints.
The transceiver 606 generates raw data 902 based on the individual responses of the receive antenna elements 702 to the received radar signals. The received radar signals may be associated with one or more frequency sub-spectra 904 selected by an angle estimator 618 to facilitate angle ambiguity resolution. For example, the frequency sub-spectrum 904 may be selected to reduce the number of side lobes or to reduce the amplitude of the side lobes (e.g., by 0.5dB, 1dB, or more). The number of frequency sub-spectra may be determined based on target angle accuracy or computational limitations of the radar system 104.
The digital beamformer 616 may be implemented using a single view beamformer 916, a multi-view interferometer 918, or a multi-view beamformer 920. In general, the monoscopic beamformer 916 may be used for deterministic objects (e.g., point source targets with a single phase center). For non-deterministic targets (e.g., targets with multiple phase centers), the multi-view interferometer 918 or the multi-view beamformer 920 is used to improve accuracy relative to the mono-view beamformer 916. Humans are examples of non-deterministic targets and have multiple phase centers 922, which phase centers 922 can vary based on different aspect angles, as shown at 924-1 and 924-2. Variations in constructive or destructive interference (constructive or destructive interference) generated by the multiple phase centers 922 may make it challenging for a conventional radar system to accurately determine angular position. However, the multi-view interferometer 918 or the multi-view beamformer 920 performs coherent averaging to improve the accuracy of the beamformed data 914. The multi-view interferometer 918 coherently averages the two channels to generate phase information that can be used to accurately determine angle information. On the other hand, the multiview beamformer 920 may coherently average two or more channels using a linear or nonlinear beamformer such as fourier, Capon, multiple signal classification (MUSIC), or Minimum Variance Distortionless Response (MVDR). The increased accuracy provided via the multi-view beamformer 920 or the multi-view interferometer 918 enables the radar system 104 to recognize small gestures or to distinguish between multiple portions of the user (e.g., facial features).
The angle estimator 618 analyzes the beamforming data 914 to estimate one or more angular positions. The angle estimator 618 may utilize signal processing techniques, pattern matching techniques, or machine learning. The angle estimator 618 also resolves angular ambiguities that may result from the design of the radar system 104 or the field of view monitored by the radar system 104. An example angle ambiguity (e.g., amplitude response) is shown in the amplitude map 926.
The amplitude map 926 depicts the amplitude differences that may occur for different angular positions of the target and different steering angles 810. A first amplitude response 928-1 (illustrated with a solid line) is shown for a target located at a first angular position 930-1. Similarly, a second amplitude response 928-2 (illustrated with a dashed line) is shown for a target located at a second angular position 930-2. In this example, the difference is considered across an angle between-180 degrees and 180 degrees.
As shown in the amplitude plot 926, there are fuzzy regions for the two angular positions 930-1 and 930-2. The first amplitude response 928-1 has a highest peak at the first angular position 930-1 and a smaller peak at the second angular position 930-2. Although the highest peak corresponds to the actual position of the target, the smaller peak obscures the first angular position 930-1 because it is within some threshold where conventional radars may not be able to confidently determine whether the target is at the first angular position 930-1 or the second angular position 930-2. In contrast, second amplitude response 928-2 has a smaller peak at second angular position 930-2 and a higher peak at first angular position 930-1. In this case, the smaller peak corresponds to the position of the target.
While conventional radar may be limited to using the highest peak amplitude to determine the angular position, angle estimator 618 instead analyzes the slight differences in the shape of amplitude responses 928-1 and 928-2. Characteristics of the shape may include, for example, roll off, peak or null width, angular position of the peak or null, height or depth of the peak and null, shape of side lobes, symmetry within amplitude response 928-1 or 928-2, or lack of symmetry within amplitude response 928-1 or 928-2. Similar shape characteristics can be analyzed in the phase response, which can provide additional information to resolve angular ambiguities. Thus, the angle estimator 618 maps a unique angular signature or pattern to an angular position.
Based on the angle probability data 938, the tracker module 940 generates angle location data 942 that identifies the angle location of the target. The tracker module 940 may determine the angular position of the target based on the angular gear with the highest probability in the angular probability data 938 or based on predictive information (e.g., previously measured angular position information). Tracker module 940 may also maintain tracking of one or more moving targets to enable radar system 104 to confidently distinguish or discern the targets. Other data may also be used to determine angular position, including range, doppler, velocity, or acceleration. In some cases, tracker module 940 may include an alpha-beta tracker, a Kalman filter, a multi-hypothesis tracker (MHT), and so on.
Quantizer module 944 obtains angular position data 942 and quantizes the data to produce quantized angular position data 946. Quantization may be performed based on a target angular resolution of radar manager 106. In some cases, fewer quantization levels may be used such that the quantized angular-position data 946 indicates whether the target is on the right or left side of the UE102, or distinguishes the 90 degree quadrant in which the target is located. This may be sufficient for certain radar-based applications such as user proximity detection. In other cases, a greater number of quantization levels may be used such that the quantized angular position data 946 indicates the angular position of the target within an accuracy of a fraction of a degree, one degree, five degrees, etc. This resolution may be used for higher resolution radar-based applications, such as gesture recognition, or for the attention state or interaction state implementations described herein. In some embodiments, the digital beamformer 616, the angle estimator 618, the tracker module 940 and the quantizer module 944 are implemented together in a single machine learning module.
Among the advantages of the described embodiments, including embodiments in which radar is used to determine user intent to engage, disengage or maintain engagement, and embodiments in which radar is used to detect user actions classified as an indication of user intent to engage or interact with an electronic device, one of the embodiments that may alternatively be achievable using on-device cameras provided on most modern smart phones, is that the power usage of the radar system is sufficiently less than that of the camera system, and the appropriateness of the result is generally better with the radar system than with the camera system. For example, using the radar system described above, the desired user intent detection may be achieved at an average power ranging from single-digit milliwatts to tens of milliwatts (e.g., 10mW, 20mW, 30mW, or 40mW), which even includes processing power for processing the radar vector data to make the determination. At these low power levels, it is readily acceptable to enable the radar system 104 at all times. In this way, for example, with a smartphone radar system always in an enabled state, a user who has been seated across a room from their smartphone may still be provided with the currently described pleasant and seamless experience for many hours.
In contrast, most of today's optical cameras provided with smart phones typically operate at powers of hundreds of milliwatts (e.g., on the order of more than 40 milliwatts, which is 400 milliwatts). At such power rates, optical cameras would be disadvantageous because they would significantly reduce the battery life of most of today's smart phones, so that it would be highly impractical, if not prohibitive, to have the optical camera always on. An additional advantage of radar systems is that the field of view can be quite large enough to easily detect a user walking from any direction, even if (for many typical implementations in which the radar chip is facing the same general direction as the self-camera) it is laid flat and facing upwards on a table, and furthermore, by virtue of its doppler processing capability, it can be very effective in detecting even relatively small movements of a moving body from multiple directions.
Additionally, the radar system may operate in environments where the performance of the camera system is reduced or limited. For example, in lower light environments, camera systems may have reduced ability to detect shapes or movements. In contrast, radar systems perform as well at lower light as at full light. Radar systems may also detect presence and gestures through some obstacles. For example, if the smartphone is in a pocket or jacket or pants, the camera system cannot detect the user or gesture. However, even if the fabric blocks the camera system, the radar system can still detect objects in its field. Another advantage of using a radar system compared to an onboard camera system of a smartphone is privacy, as users can enjoy the advantages of the pleasant and seamless experience described herein, while at the same time not having to worry about the camera taking their video for this purpose.
The entities of fig. 1, 2, 4, and 6-9 may be further divided, combined, used with other sensors or components, and so forth. In this way, different implementations of the UE102 with different configurations of the radar system 104 and the sensors 108 may be used to implement radar-based gesture recognition using context-sensitive gating and other context-sensitive controls. The exemplary operating environment 100 of fig. 1 and the detailed diagrams of fig. 2 through 9 illustrate some of the many possible environments and devices in which the described techniques can be employed.
Example method
This section describes example methods that can operate separately or in whole or in part. Various example methods are described, each set forth in a section for ease of reading; these section headings are not intended to limit the interoperability of each of these methods with other methods.
Authentication management
Fig. 10 depicts an example method 1000 for managing authentication by an IMU and radar, and is one example of managing a power state of a user device. Method 1000 is illustrated as a collection of blocks that specify operations performed in, but not necessarily limited to, the order or combination of operations shown for the various blocks. Further, one or more of any of the operations may be repeated, combined, re-combined, or linked to provide a wide variety of additional and/or alternative methods. In portions of the following discussion, reference may be made to entities or processes described in detail in the example operating environment 100 of FIG. 1 or other figures, the reference being by way of example only. The techniques are not limited to being performed by one entity or multiple entities operating on one device.
At 1002, an engagement intent of a user is determined by a user device based on radar data, the engagement intent indicating that the user intent is to engage with the user device. As described above, the intent-to-engage may be indicated by determining that the user 120 is reaching the UE102, looking at the UE102, or is leaning or orienting towards the UE102 or their body towards the UE102, to name only three examples.
At 1004, movement of the user device is determined based on inertial data, alternatively or in addition to determination of the intent-to-involve by the radar data. This movement may indicate that user 120 is picking up UE102, touching UE102, and other movements as described above.
At 1006, in response to a determination of the intent to engage, and in some cases, a determination of movement of the user device, a power state of a power consuming component of the authentication system is altered. The power state of the power-consuming components is changed from a first power state to a second power state, the second power state consuming more power than the first power state. Such alteration may be based solely on the intent to engage determined using the radar data, or may be via movement determined through inertial data. Further, the power state of the power-consuming components or other powered components may be further increased based on the movement determination. As described above, this movement determination may confirm the intent of the involved user 120, also provide an engagement intent, or otherwise be a determination of speed and/or robustness to add power, resources, etc. to the authentication system. Note that in some cases, components of the authentication system remain powered even though it has not been determined that the user intends to engage. In this case, the technique acts to perform an authentication process in response to the intent-to-engage being determined. In this case, the latency is reduced even if power is not saved for the process. However, the techniques may avoid using resources not associated with the authentication system, thereby saving power in other ways.
The power state to which the power consuming components of the authentication system are changed may or may not be sufficient to enable the authentication system to perform an authentication procedure on the user. In some cases, the second power state of the power-consuming components is not the high power state 504-1. In this case, the second power state is the intermediate power state 504-2 as described above. In some cases, this intermediate power state 504-2 is sufficient for performance of power consuming components such as cameras that include intermediate power states that are still capable of providing sensor data to authenticate without being fully powered (e.g., capturing an image of a user in a plenoptic, rather than dark, etc.). Another example is a display 116 that can be powered to accept touch input for a passcode without powering the brightness of the display to full power. Another case includes a radar system 104 where full power is not required to provide authentication system 114 with sufficiently accurate facial features within a relatively close range of the user's face to radar system 104.
In some cases, powering the component is an intermediate step, such as a warm-up sequence, which may prepare the component by giving it additional time or simply reduce latency. In this case, the state manager 112 may determine not to proceed to high power, such as if it determines not to proceed with the intent before the component is ready for authentication, the user 120 moves the UE102 to prevent authentication (e.g., in the pocket), and so on. In some cases, powering up is an intermediate step, which is then fully powered up and powered up to a power sufficient to perform the authentication procedure in response to determining that the user 120 has moved the UE102, as illustrated at 1004. This warm-up sequence powers the component to the intermediate power state 504-2 and then, after some short period of time, powers the component sufficiently for use in the authentication process (e.g., powers up to the high power state 504-1). In this case, the assembly is at high power (or close to high power) and in a post-preheat sequence following the preheat sequence. For components such as certain infrared or near infrared (IR, NIR) sensors that consume a lot of power if they are on when not needed and take a lot of time to power, performing the intermediate power state of the warm-up sequence may save a lot of power or reduce the latency that is significant and potentially disruptive to the user experience.
Example power-consuming components of the authentication system are described above, such as the facial unlock sensor 212, the touch screen of the display 116, the radar system 104, and the processor 608 (e.g., the high-power processor 608-2) of the authentication system 114 of fig. 1. For specific details regarding many potential power consuming components of a face recognition system for authentication, see FIG. 2 and its description.
At 1008, an authentication process is performed by the authentication system. In doing so, the authentication system 114 uses the power consuming components in a modified power state, such as the second power state or a third higher power state. The authentication process effectively authenticates the user or determines that the user is not authenticated, which indicates that access to the UE102 should not be granted. As noted, the authentication process may be through facial recognition, fingerprint reading, password or other credential input through a touch or audio interface (e.g., a touch screen data entry component of the display 112), and so forth. The authentication process compares the user's distinguishing characteristics or credentials to some secure store of comparable characteristics or credentials to determine that the user's identity is authenticated and, thus, permitted access to the UE 102. This may be as simple as comparing a six-digit password entered through a touch screen of a display, or require more computational and system complexity, such as determining facial features based on sensor data received from a power-consuming component and comparing the determined facial features to a facial feature library. Although not required, the facial feature library may be stored locally to the UE102 and created during facial feature initialization by the UE102 using the authentication system 114. Further, the library may be securely stored at the UE102, such as in a form embedded on a secure chip integrated with the UE 102. This is one way in which the privacy of the user 120 may be maintained.
Throughout this disclosure, examples are described in which a computing system (e.g., UE102, a client device, a server device, a computer, or other type of computing system) may analyze information (e.g., radar, inertial, and facial recognition sensor data) associated with a user, such as the facial features just mentioned at operation 1008. However, the computing system may be configured to use the information only after the computing system receives explicit permission to use the data from a user of the computing system. For example, where the UE102 analyzes sensor data of facial features to authenticate the user 102, various users may be provided with an opportunity to provide input to control whether programs or features of the UE102 can collect and utilize the data. Individual users may continuously control which programs may or may not be performed using sensor data. Additionally, the collected information may be pre-treated in one or more ways before being transmitted, stored, or otherwise used in order to remove personally discernible information. For example, before the UE102 shares sensor data with another device (e.g., to train a model executing on the other device), the UE102 may pre-treat the sensor data to ensure that any user-discerned information or device-discerned information embedded in the data is removed. Thus, the user may control whether information is collected about the user and the user device, and if so, how the computing device and/or remote computing system will use the information.
Returning to method 1000, at 1010, alternatively or additionally, in response to determining that the user device has moved or is moving, the power state of the display is altered. Such modification may be powering the touch input receiving capability of the display or simply changing the visual presentation of the display. One example includes adding brightness to the display 116 such that the user touches the UE102, the user sees that the UE102 is aware of the user's intent, and is therefore likely ready to interface with the user 120. Similarly, the UE102 may do so in response to the engagement intention determined at 1002.
In some cases, the authentication process is performed for a certain period of time or iterated without success (e.g., for some preset number or period of time). In this case, the method 1000 may continue by re-performing the authentication process, as shown at 1012, or in response to the determination of movement at 1004. This alternative is shown in fig. 10 with some of the dashed arrows.
At 1014, in response to the authentication procedure of the user at 1008 (or the re-execution at 1012) being successful, the user is authenticated and the access state of the UE102 is altered. The change may increase the access of the UE102 from a low, no, or intermediate access state to a high access state, and in this case, the UE102 is "unlocked". However, such a high access state (e.g., high access state 502-1 of FIG. 5) is not required. Certain authentication levels may retain access, power, or information for subsequent authentication. Examples include authenticating a user to use some, but not all, of the applications and/or accounts of the UE102 (e.g., accounts purchasing music, bank accounts, etc.), and requiring additional authentication of those retained access accounts and applications. For example, in addition to the high access state 502-1, the state manager 112 may place the UE102 in the high information state 506-1. Examples of such changes to the information state include presenting a last-to-do application or web page, including in a last-to-do portion, such as the fourth or half way entry song or video of ten articles on the web page, that renders the location where the user 120 last interfaced or authenticated with the UE 102. The state manager 112 may quickly and seamlessly change these states in response to authenticating the user 120.
By way of example, consider one embodiment in which the method 1000 is applied to the scenario 1100 illustrated in FIG. 11. The scene 1100 includes five portions, each portion following a preceding portion in chronological order. At a first portion of the scene 1100, as shown by scene portion 1100-1, the user 1102 is not looking at, touching, or otherwise interfacing with the smartphone 1104. It is assumed here that the smartphone 1104 is in the low-access, low-power, and low-information states 501-3, 504-3, and 506-3, respectively (e.g., the smartphone 1104 appears to be off, but has sufficient power to determine an intent to engage). Assume that this scenario portion 1100-1 is the case prior to operation of the method at 1002 in FIG. 10. The second portion is shown at 1100-2 during which the user 1102 turns and looks, but does not touch the smartphone 1104. At this point, at operation 1002, the technique determines that the user 1102 intends to engage with the smartphone 1104 based on the radar data. Such engagement intent is determined without using a reaching movement but rather based on the user 1102 looking at the smart phone 1104 and orienting their body towards the smart phone 1104. The technique makes this determination at operation 1002 by radar manager 106, which passes this determination to state manager 112. Thereafter, the state manager 112 changes the power state of the power consuming component (the facial unlock sensor 212) of the authentication system 114 at operation 1006. Note that this is done well before the user reaches or picks up the smartphone 1104, thereby reducing latency and readying the authentication system 114 to authenticate the user.
Also assume that during the next half second, when the power consuming components are being powered, the user 1102 moves closer to and extends towards the smart phone 1104 (extending is shown by hand 1106). This is shown at the third portion 1100-3. At this point, the authentication system 114 performs an authentication process (operation 1008), but assumes that the authentication process is unsuccessful for a certain number of iterations and/or for a period of time. The technique may stop the attempt to authenticate the user 1102, thereby saving power. Here, however, as shown in section 1100-4, user 1102 touches smartphone 1104. At operation 1004, this inertial data sensed by sensor 108 of fig. 1 is determined to be movement of smartphone 1104. The movement determination is passed to the state manager 112. Based on the movement, the state manager 112 continues to cause the authentication system 114 to attempt to authenticate the user 1102, as illustrated by operation 1012 of the method 1000. Further, at operation 1010, and also based on the movement, the status manager 112 illuminates the display 1108 of the smartphone 1104. This illumination or powering of the display 1108 may be performed at scene portions 1100-2, 1100-3, or 1100-4, but is shown here in response to determining that the user 1102 touches the smartphone 1104 (shown at time and notification information at 1110). By doing so, feedback is given to the user 1102 that the smart phone 1104 is aware that the user 1102 is attempting to engage.
As described, the state manager 112 causes the authentication system 114 to continue the authentication process and, through these continued attempts, authenticate the user 1102. This is shown at section 1100-5, resulting in smartphone 1104 being in different states, high-access, high-power, and high-information states 502-1, 504-1, and 506-1, respectively, where high-access state 502-1 shows display 1108 presenting an unlock icon 1112. These status levels may be automatically increased by the status manager 112 to provide a seamless user experience for the user 1102.
In this example scenario 1100, inertial data provided by the sensors 108 causes the state manager 112 to ascertain with a high level of confidence that the user 1102 intends to interface with the smartphone 1104 and thus the user 1102 wants to be authenticated, and thus justify the additional power. This is just one example scenario that illustrates how inertial data from the IMU and radar data from the radar system can be used to authenticate a user quickly, simply, and with reduced power consumption.
Reducing high level states
FIG. 12 depicts an example method 1200 for reducing high-level states by IMU and radar. Method 1200 is illustrated as a collection of blocks that specify operations performed but are not necessarily limited to the orders or combinations of blocks shown for performing the operations by the respective blocks. Moreover, one or more of any of the operations can be repeated, combined, re-combined, or linked to provide a wide variety of additional and/or alternative methods, including other methods set forth in this document (e.g., methods 1000, 1400, 1700, and 1800). In portions of the following discussion, reference may be made to entities or processes described in detail in the example operating environment 100 of FIG. 1 or other figures, the reference to which is made only as an example. The techniques are not limited to being performed by one entity or multiple entities operating on one device.
Optionally, at 1202 and prior to operation 1204 or 1206, it is determined that the inactivity time period has expired. In contrast to some other conventional techniques that rely solely on expiration of a time period, method 1200 may use or avoid using an inactivity time period to reduce the high-level state of the user device. Although this inactivity timer is not required, in some cases a timer is used, even a short timer, which can save power. In more detail, the inactivity timer starts when a last user action is received with the user device, such as when the user device receives a last touch, audio command, or gesture input to a touch screen or button. Note that although some conventional techniques use only a timer, and since this conventional timer typically lasts for several minutes (e.g., one minute, three minutes, five minutes, or ten minutes), method 1200 may use a relatively short period of time, such as half a second, one second, three seconds, five seconds, ten seconds, or twenty seconds. By doing so, the user device is very unlikely to expose information, make inappropriately available access, etc., while using a short period of inactivity may operate to save some amount of power by avoiding performing operations of 1204 and/or 1206 during the period of inactivity.
At 1204, during a high-level state of the user device, during which the user is interacting with the user device or has recently interacted with the user device, movement is determined. The movement manager 110 determines the movement based on inertial data received from the sensors 108 integrated with the UE 102. As indicated by the dashed arrow, the operation may optionally be responsive to operations 1206 and/or 1202 (not shown). The determined movement may be one or more of the various movements set forth above, such as movements indicating that the user 120 is picking up the UE102, walking with the UE102, putting the UE102 down, in a pocket or enclosure, or simply touching the UE102 near or touching the UE 102. In some cases, the mobility manager 110 determines that mobility is or is not sufficient to alter the state of the UE102, and therefore passes to the state manager 112. Examples include those mentioned above, such as those movements that do not exceed a threshold, those movements caused by environmental vibrations, and those movements that are insufficient to alter the ongoing movement when moving. Thus, mobility manager 110 may determine that UE102 is moving when user 120 walks with UE102, but may determine that the movement is not a sufficient possible change to indicate that user 120 may not be involved with UE 102. Another way to look at this is that the movement may be based on a change, rather than simply the current movement of the UE 102. Example changes include moving and then not moving, such as a user walking with the UE102 and placing it on a table. Although inertial data from the sensors 108 may not capture that the user 120 is placing the UE102 on a table, a determination at operation 1204 that the inertial data shows little to no movement when there is immediate previous movement (the user 120 is walking with the UE 102) is based on this immediate previous movement still being determined to be movement.
In more detail, the techniques may adapt the state of the user device to the user's involvement. Thus, in some cases, the user equipment is in a high-ranked state because the user height is related to the user equipment. For example, method 1200 may determine that a user is interacting with a user device prior to operations 1204 or 1206. Such a determination of the user's involvement may be based on previous radar data indicating an intent to engage by the user, based on audio or touch input from the user, commands or input received from the user and through an audio or touch sensor, a successful authentication process, and so forth.
At 1206, a do not engage intent is determined by the user device based on the radar data. Radar manager 106 receives radar data from radar system 104 and uses the radar data to determine whether the user intends to not be involved with UE 102. This indirection is intended to include the various types set forth above, such as the user 120 retracting from the UE102 hand, the face orientation changing relative to the UE102, the user 120 turning away from the UE102 or orienting them or their back toward the UE102, and so forth.
This operation 1206 may optionally be in response to operation 1204 (and/or 1202, not shown), as indicated by the dashed arrow. In these cases, state manager 112 or radar manager 106 acts to conserve power by avoiding determining the intent of user 120 to do so until movement is determined, and vice versa for the movement determination at 1204. By doing so, power can be saved. Accordingly, the power management module 620 may be instructed by the technology to keep the radar system 104 at reduced power until movement is determined at 1204. Once movement is determined, the state manager 112 causes the power management module 620 to power the radar system 104 in preparation for determining whether the user 120 is acting in a manner that indicates no intent to engage.
At 1208, in response to the determination of the movement and/or disinterference intent, the high level state of the user device is reduced to an intermediate level state or a low level state. In more detail, see example high level state 1208-1, which may be one or more states relating to access, power, or information, such as those shown in FIG. 5 (high access state 502-1, high power 504-1, or high information state 506-1). The state manager 112 determines to reduce one or more of the states of the UE102 in response to the determination of the movement or disinterference intention, or both. This is illustrated by the arrows in fig. 12, which show the decrease from the high level 1208-1 to the intermediate level 1208-2 or low level 1208-3. These are only two of various granularities of power, access, and information. As illustrated in fig. 5, the intermediate level 1208-2 and the low level 1208-3 include an intermediate access state 502-2, an intermediate power state 504-2, and an intermediate information state 506-2, each of which is described above. The low level 1208-3 is shown in three low states, a low access state 502-3, a low power state 504-3, and a low information state 506-3. These states have been described in detail above. Note that at operation 1208, the state manager 112 may lower any one, two, or all three of these states, either to the same level or to different levels. Thus, the state manager 112 may lower the high access state 502-1 to an intermediate or low state and maintain the power state and information state at a high level or a mixture of levels. Similarly, the state manager 112 may reduce the power state 504 to the low power state 504-3 while maintaining the UE102 in the high access state 502-1 (e.g., "unlocked").
By way of example, consider the application of method 1200 to scenario 1300 illustrated in FIG. 13. Scene 1300 includes three portions, each portion following the previous portion in chronological order. Prior to the first portion of scenario 1300, assume that user 1302 is actively engaged with smartphone 1304 and smartphone 1304 is in a high-level state, i.e., a high-power, access, and information state. In a first section shown in scene section 1300-1, user 1302 walks to a desk and places smartphone 1304 on the desk. At operation 1204, the sensors 108 receive inertial data for the smartphone 1304 touched on the table or a lack of inertial data when the inertial data indicates movement (based on the user 1302 walking with the smartphone 1304) before being placed on the table. Based on one or both of these inertial data, mobility manager 110 determines the movement of smartphone 1304 and communicates the determination to radar manager 106 and/or status manager 112.
Assume that radar manager 106 provides radar field 118 (not shown for simplicity, see fig. 1 for example) or has already done so immediately in response to movement data, and thus receives radar data indicative of the body position, etc., of user 1302. Based on the radar data, radar manager 106 determines, for the first iteration (and possibly multiple other iterations), that user 1302 is not intended to be non-intrusive at operation 1206 for body, arm, and hand placement. This is because the user 1302 has the body oriented towards the smartphone 1304 and the user's hand and arm oriented towards the smartphone 1304. Thus, the high information state 1306-1 is not altered.
However, at the scene portion 1300-2, assume that after about two seconds, the user 1302 picks up their coffee cup and begins to walk away, while turning their body away from the smartphone 1304. At this point, radar manager 106 determines that user 1302 is intending not to interface with smartphone 1304 based on the body-oriented portion of user 1302 turning away from smartphone 1304 and the orientation of the user 1302's arms and hands toward the coffee cup instead of smartphone 1304. Radar manager 106 passes this determination to state manager 112.
At operation 1208, in response to receiving the move and do not involve intent determinations, the state manager 112 decreases the information state of the smartphone 1304 from the high information state 1306-1 to the intermediate information state 1306-2 shown in the scenario portion 1300-1. These example information states are shown, where the information displayed at scene portion 1300-1 shows content from two text messages and time of day. Immediately after the user 1302 turns their body and picks up the coffee cup, the information state drops to the intermediate information state 1306-2, showing the time of day and reduced information about the text message (showing the name of the sender, but no context). This intermediate amount of information may be useful to the user 1302 because the user 1302 may change their mind about receiving a deal or want to look back at the smartphone 1304 to see if a new notification arrives, such as text from a different person.
Additionally or alternatively to showing the intermediate information state 1306-2, and as part of operation 1208, the state manager 112 may proceed to a low level immediately or after first being in the intermediate state. Assume here that state manager 112, in response to an additional determination by radar manager 106, indicates that user 1302 intends not to be involved or a higher confidence level thereof (e.g., shown here as high confidence because user 1302 is now several meters away from smartphone 1304 and turns the back completely to smartphone 1304) further lowers the information state to low information state 1306-3, as shown in scenario portion 1300-3, displaying only the current time of day.
While this example shows changes to the information state, access and power may also or instead be changed. This is illustrated in part by the unlock icon 1310 shown at the scene portion 1300-1, which indicates a high level of access (e.g., the high level access 502-1 of FIG. 5). At scenario portion 1300-2 after the state manager 112 receives the movement data and does not engage the intent, the state manager 112 reduces access to a low level, which is indicated to the user with a lock icon 1312. Further, the power state may be altered, such as by reducing the brightness of a display (not shown) of the smartphone 1304 at the scene portions 1300-2 and/or 1300-3.
Maintaining authentication state
Fig. 14 depicts an example method 1400 for maintaining an authentication state. Method 1400 is illustrated as a collection of blocks that specify operations performed, but are not necessarily limited to, by the illustrated ordering or combination of operations performed by the various blocks. Moreover, one or more of any of the operations can be repeated, combined, re-combined, or linked to provide a wide variety of additional and/or alternative methods, including other methods set forth in this document (e.g., methods 1000, 1200, 1700, and 1800). In portions of the following discussion, reference may be made to entities or processes described in detail in the example operating environment 100 of FIG. 1 or other figures, by way of example only. The techniques are not limited to being performed by one entity or multiple entities operating on one device.
Before discussing the method 1400, it is noted that any of the above methods may be combined, in whole or in part, with the method 1400. For example, consider the performance of method 1000 in FIG. 10. The method 1000 describes one example of authentication management that results in authentication of a user. In response to the authentication, the user equipment enters an authentication state. This state is described in more detail above. Thus, method 1000 (or some other manner of authentication of the user) is performed prior to method 1400.
At 1402, potential non-involvement of the user device by the user is determined during an authentication state of the user device. This determination of potential non-involvement by the user may include determining the intent to do so by the user as described above, as well as other determinations set forth below. Also, as described above, the authentication state permits the user to access one or more of the data, applications, functions, accounts, or components of the user device. Examples of authentication states include the high access state 502-1 and the medium access state 502-2 described above in FIG. 5. While in the authentication state (typically based on user preferences or operating system default settings), the UE102 may grant any of these access states, the authentication state assumes prior authentication of the user. However, the user-selected preferences or settings may grant high or medium access to the UE102 without authentication. Thus, while the authentication state may include the accesses granted by the high and intermediate access states described above, the high and intermediate accesses are not necessarily authentication states.
As illustrated in fig. 14, the determination of potential non-involvement may optionally be performed in response to (or by performing) operation 1404 or operation 1406, as well as other manners described herein, such as by determining the intent to not involve in operation 1206 of method 1200. At 1404, expiration of the inactivity time period is determined. As described above, the inactivity time period may begin when the last user action is received, the active interference with the user device ends (or was last received), or when the last interference intent is determined. For example, the inactivity timer (e.g., time period) begins when the user last touches the touch-sensitive display or button, speaks the last received audio command, or performs the last determined touch-independent gesture (e.g., determined using the radar system 104 described above).
At 1406, movement of the user device is determined based on inertial data of an Inertial Measurement Unit (IMU) integrated with the user device. Example movement and inertial data, such as inertial data received from the sensors 108 of fig. 1, are described above. Thus, movement determination is one way in which the method may determine that the user is potentially not involved, such as by placing the UE102 in a locker, bag, or pocket (although placement in a bag or pocket may be later determined to be a passive intervention, as described below).
At 1408, passive engagement with the user device by the user is determined based on the radar data. This determination of passive engagement may be in response to a determination of potential non-engagement at 1402 (shown with a dashed arrow), or it may be independent of or consistent with the determination. In some cases, performing operation 1408 in response to a determination of potential disinterference may save power or reduce latency. For example, method 1400 may power components of radar system 104 (see also fig. 6-1 and 6-2) in response to the determination of potential non-involvement. This may save power as described above, or provide additional time for radar system 104 to prepare to determine whether the user is passively engaged with radar system 104.
In the context of fig. 1, radar manager 106 determines that user 120 is passively involved with UE 102. This passive engagement may be determined by radar manager 106 in a number of ways, which may be exclusive or overlapping with other ways. For example, the radar manager 106 may determine that the user is passively involved based on radar data indicating that the user 120's hand is holding the user device 102 in an orientation that maintains the display 116 of the user device 102. Thus, if the user 120 is holding the UE102 steady (or stable enough to view the content or to permit another person to view the content), the user 120 passively engages. Other examples of determining passive involvement are described above, including the user 120 looking at the UE102 or directing them or their body toward the UE 102.
Further, radar manager 106 may determine a passive engagement based on radar data indicating that user 120 is present, such as by being within two meters of UE 102. Other distances, such as 1.5 meters, one meter, or even half a meter, may also or alternatively be used. In practice, radar manager 106 may determine that user 120 is passively involved by being approximately within reach of UE 102. Radar manager 106 may do so explicitly by instructing user 120 to passively engage, or simply pass information indicating the distance from UE102 to state manager 112. The state manager 112 then determines a passive engagement based on the proximity of the user 120 and in some cases context such as other people (or lack thereof), whether the user 120 is in a vehicle (car, bus, train), at a desk, and so forth. For example, a user sitting in their or their home may have a greater permitted distance than a user sitting in a crowded coffee shop or train.
At 1410, an authentication state is maintained in response to a determination of passive engagement with the user device by the user. This maintenance of the authentication state may continue until another potential non-involvement is determined, or for a certain period of time, after which method 1400 may be performed again. One example of an authentication state is the high access state 502-1 of fig. 5. In many cases, the authentication state is an unlocked state of the UE102, but in some other cases, the authentication state grants some, but not all, access to the UE102, such as the intermediate access state 502-2 described above.
This maintenance of the authentication state of the UE102 does not require the maintenance of other states. For example, in the event that user 120 is within two meters of UE102 but may or may not be looking at UE102 or directed toward UE102, state manager 112 may decrease the power state or information state of UE102, such as from high power state 504-1 and high information state 506-1 to an intermediate or low power or information state shown in fig. 5. However, if passive engagement includes the user looking at the UE102, the power or information state may also be maintained, such as to continue presenting content to the user 120 through the display 116.
Optionally, the method 1400 may proceed to operation 1412, where the presence or engagement intent of the non-user is determined based on the radar data in operation 1412. The radar data may be the same or later received radar data, such as radar data from radar system 104 received within seconds or minutes after passively accessing the underlying radar data. Thus, at 1412, radar manager 106 determines that a non-user is present or intended to interface with UE 102. Thus, if a non-user extends toward UE102 or looks at display 116 of UE102, radar manager 106 may determine such presence or intent and pass it to status manager 112.
At 1414, maintenance of the authentication state is ceased in response to determining that a non-user is present or intended to interface with the user device. Thus, if a non-user walks up, reaches, or looks at the display 116 of the UE102, the state manager 112 stops maintaining the authentication state of the UE102 (or actively de-authenticates). Along with the stop, the state manager 112 may also reduce other states, such as an information state that effectively reduces or eliminates information presented to non-users. For example, assume that an authenticated user is reading private email on a subway. If a person sitting behind them looks at the display, possibly reading private email, the status manager 112 may lock the UE102 and stop displaying private email. This can be performed quickly and seamlessly, further improving the privacy of the user.
At 1416, optionally after ceasing to maintain the authentication state, the method may return to the authentication state in response to determining that the non-user is no longer present or no longer intending to engage. Continuing with the example above, when a non-user in the subway looks away from the display 116 of the UE102, the state manager 112 may re-authenticate the user 120 through an authentication process or simply by switching back to an authentication state without re-authentication. Thus, the user 120 can simply return to the previous state immediately after the condition causing the deauthentication ceases. While some authentication processes, such as the systems and processes described herein, are both fast and power efficient, it may be faster and more power efficient not to perform the authentication process. Upon returning to the authentication state, the state manager 112 may return the information state to the previous level and may be at content that matches the content last presented to the user 120. In this example, when the non-user is looking away, the display 116 presents the private email at the same location that the UE102 was last presented to the user 120. By doing so, seamless management of authentication and improved information privacy is provided to the user. Note that the user's 120 selection may be more important than the operation of the technology, such as the user selecting to de-authenticate. In some cases, user 120 simply turns off UE102, which is permitted in the methods described herein.
Consider another example illustrated in FIG. 15 by way of a scenario 1500. Scene 1500 includes four portions. At the first section 1500-1, assume that the user 1502 has authenticated to the smartphone 1504, such as by credential or facial feature analysis, and thus the smartphone 1504 is in an authenticated state 1506. The authentication state 1506 allows the user 1502 to access the smart phone 1504, which is illustrated by the user 1502 accessing the contents of the smart phone 1504 by watching a television program for a volcanic explosion.
In response to any of these determinations of potential disinterengagement, radar manager 106 determines that user 1502 passively intervenes with smartphone 1504 based on radar data. This operation is performed at 1408. Here we assume that user 1502 is determined to be present or they are looking at smartphone 1504, either of which indicates that user 1502 is in passive engagement.
In response, at operation 1410, the state manager 112 maintains the authentication state. All of this can be performed seamlessly without the user 1502 noticing that it has been performed. As shown in the scene portion 1500-4, the smartphone 1504 simply continues to present the television program through either path.
Consider another scenario 1600 of fig. 16, which may follow scenario 1500 or an alternative stand-alone scenario. The scene 1600 includes three scene portions, in a first scene portion 1600-1, the user 1502 is watching a television program about a volcano, similar to that shown in fig. 15, here labeled at the content 1602 of the smartphone 1504. The smartphone 1504 is in an authentication state, such as the authentication state 1506 described in fig. 15, during this presentation of the program.
However, in scene portion 1600-2, non-user 1604 sits on the sofa with user 1502. The non-user 1604 is a co-worker of the user 1502, so the user 1502 turns around and begins speaking to the non-user 1604. These actions by user 1502 may be considered potentially unrelated, as described above, turning the head or speaking or both. If the potential non-involvement of the user 1502 is considered, the state manager 112 lowers the state of the smartphone 1504, such as to lower the access state or information state, as described in fig. 5 and 12 (e.g., operations 1206 and 1208 of method 1200).
However, assume that the radar manager 106 determines the presence of the non-user 1604 through operation 1412 of the method 1400 and based on the radar data. Based on this presence of the non-user 1604, the state manager 112 stops maintaining the authentication state 1506 after the state manager 112 previously acted to maintain the authentication state of the smartphone 1504 (e.g., by operation 1410 shown in fig. 15). Accordingly, the state manager 112 may lower the smartphone 1504 to the unauthenticated state 1604, as shown in the enlarged view of the scene portion 1600-2. The change is shown to user 1502 by locking icon 1606 and by ceasing to present content 1602.
At scene portion 1600-3, non-user 1604 has left and user 1502 returns to watching smartphone 1504. The radar manager 106 determines that there are no more non-users 1604 and indicates this determination to the state manager 112, which the state manager 112 then returns the smartphone 1504 to the authentication state 1506. Note that the state manager 112 may also need to determine that the user 1502 is intending to engage the smartphone 1504, or may simply return to an authenticated state based on the presence of the non-user 1604 leaving the smartphone 1504. It is also noted that the techniques described in this document may enable users to seamlessly return to the point they left off, thereby providing an excellent user experience. This is illustrated in fig. 16, where the state manager 112 returns the smartphone 1504 to the same television show and the same or nearly the same point that was last presented to the user 1502. For some embodiments, the technique allows the user to instruct, at step 1416, in a setup screen or similar device configuration screen, whether the smartphone 1504 will return to an authenticated state in response to determining that a non-user is no longer present or intended to interface, as opposed to whether the smartphone 1504 will stay in an unauthenticated state until a more rigorous authentication process using the power-consuming components of the authentication system (e.g., step 1006 above) is performed. In other words, the techniques may provide user-selected settings through settings or similar device configurations that cause the smart phone 1504 to remain de-authenticated once non-user evidence (taint) is present, even though there is no longer evidence there.
Gesture recognition management
Fig. 17 depicts an example method 1700 for radar-based gesture recognition with context-sensitive gating and other context-sensitive controls. Method 1700 is illustrated as a collection of blocks that specify operations performed, but are not necessarily limited to, by the illustrated ordering or combination of operations performed by the various blocks. Further, one or more of any of the operations may be repeated, combined, re-combined, or linked to provide a wide variety of additional and/or alternative methods, such as methods 1000, 1200, 1400, and 1800. In portions of the following discussion, reference may be made to entities or processes described in detail in the example operating environment 100 of FIG. 1 or other figures, by way of example only. The techniques are not limited to being performed by one entity or multiple entities operating on one device.
At operation 1702, sensor data is received from a plurality of sensors 108. For example, the proximity sensor 208 generates sensor data indicative of the proximity of an object (e.g., the radar system 104 configured as a proximity sensor by operating in a proximity mode). The IMU408 may produce sensor data indicative of the movement, while other sensors 108 may generate other sensor data for defining the context.
The radar system 104 may be operable in a low-power, proximity mode (e.g., low-power state 504-3) to generate sensor data with sufficient resolution and quality to detect proximity. The radar system 104 may also operate in a high-power, gesture-recognition mode (e.g., high-power state 504-1) to generate improved sensor data relative to sensor data produced in a proximity mode. In the gesture recognition mode, the sensor data 104 generated by the radar system 104 has a higher resolution or higher quality than in the proximity mode, as the sensor data is used for more complex gesture recognition tasks. Sensor data received from multiple sensors at operation 1702 may indicate coarse movement and proximity, while sensor data collected from the radar system 104 to perform radar-based gesture recognition may indicate more precise movement, proximity, or occlusion.
The sensor data may indicate proximity as a binary measurement of the object or as a variable measurement that further specifies proximity to the object. Proximity may indicate whether the radar system 104 or other parts of the UE102 are occluded by an object (meaning that the user 120 is occluded by an object relative to the UE102 or vice versa), a greater amount of presence indicating occlusion, and a lesser amount of presence indicating little or no occlusion. The sensor data may define movements that are effective for determining the position, velocity, acceleration, velocity, rotation, orientation, or other movement or positioning characteristics of the UE 102.
At operation 1704, a context of the UE is determined. The sensor data obtained at operation 1702 is indicative of an operating environment of the UE102 when the user 120 interacts with the UE 102. The sensor data may include patterns or signatures indicating whether the movement is intended or unintended. The UE102 may include or access a machine-learned activity classifier trained using machine learning to identify patterns or signatures in sensor data corresponding to particular user activities or device contexts. The machine-learned activity classifier outputs notifications to applications and other subscribers that perform other tasks using activity recognition. The accelerations or vibrations discerned in the movement data correspond to similar vibrations and accelerations recorded by the IMU408 or other sensors 108 as sensor data as the user 120 walks or otherwise moves with the UE 102.
The identified activity or movement may indicate a different situation. Examples of contexts include a walking context, a cycling context, a driving context, a boarding context, or other activity context corresponding to an identified activity. The movement may indicate a position and orientation and movement or lack of movement typically observed when the user 120 views or holds the UE 102. The lack of movement may indicate a seated context, a stationary context, an unused context, or a storage context. The opposite movement may correspond to the opposite activity, e.g., some movements may indicate that the user is picking up the UE102, and the opposite or different movement may indicate that the user is dropping the UE 102.
At operation 1706, it is determined whether the context meets the requirements of the radar-based gesture recognition. The UE102 may determine that the context is satisfactory if sensor data from the sensors 108 (e.g., the proximity sensors 208 and the IMU 408) time-outs match sensor data that the UE102 expects for detection when radar-based gesture recognition is typically received. When the context does not meet the requirements of radar-based gesture recognition, the UE102 may determine that the opposite is true and prevent or otherwise discard the gesture recognized by the radar system 104.
For example, UE102 may adjust radar-based gesture recognition in the current context of UE 102. The context meets the requirements of radar-based gesture recognition if the user 120 is holding the UE102 while walking, but does not meet if the user 120 is not holding the UE102 while walking. However, carrying the UE102 in a pocket or backpack while walking is not a context that meets the requirements of radar-based gesture recognition (except where gesture detection through intervening materials is permitted).
The storage context is that the sensor data indicates that the UE102 is located: a pocket of clothing worn by the user 120, an enclosure in a backpack, a briefcase or suitcase, a storage compartment of an airplane, a taxi, a car, a boat, a bus or train, a console or glove box of a vehicle, or other enclosure. When the sensor data indicates that the user 120 is holding the UE102, the holding or carrying context is recognized. A stationary context is evident from sensor data that indicates that the UE102 is not held, motionless, or substantially not moving relative to the surface upon which the UE102 rests. The travel context indicates that the UE102 is moving, regardless of whether the UE102 is held or stored, for example, if the user 120 is walking, driving, cycling, or otherwise moving with the UE 102.
The context satisfies the requirements of radar-based gesture recognition based in part on whether the UE102 is traveling, held, or stored. For example, being held and traveling is the context in which radar system 104 identifies radar-based gestures, however, being stored and traveling may not be the context in which radar system 104 identifies radar-based gestures.
The satisfaction of the context may also depend on the orientation, in particular the carrying orientation. If the user 120 is walking and holding the UE102, the context may still not meet the requirements of radar-based gesture recognition if the user is not holding the UE120 in a particular manner. For example, holding the UE102 in a landscape and/or portrait-down orientation (e.g., the touchscreen of the UE102 pointing to the ground) while the user 120 is walking may not meet the requirements of radar-based gesture recognition because the user 120 may not want to interact with the UE102 in such a context. Conversely, holding the UE102 in a different orientation while walking (e.g., portrait up while the touchscreen of the UE102 is pointed toward the sky or the face of the user 120) by the user 120 may satisfy the requirements of radar-based gesture recognition because the user 120 may be viewing the touchscreen of the UE102 while walking.
The UE102 may adjust the radar-based gesture recognition on whether or how the user 120 holds the UE 102. For example, the context meets the requirements of radar-based gesture recognition if the user 120 is not holding the UE120 while riding or driving, such as if the UE102 is in a stationary context, is fixed to a mounting bracket on a bicycle frame or attached to a car vent or dashboard while riding or driving. However, a similar cycling or driving context for a user holding UE102 may not meet the requirements of radar-based gesture recognition.
Radar-based gesture recognition may be adjusted by the UE102 based on occlusions from objects or near objects. For example, in response to detecting the proximity of an object while UE102 is already in a stored or stationary context, radar system 104 enables gesture recognition model 621. The opposite may be true in response to detecting occlusion of an object when the UE102 is already in a stored or stationary context, in which case the radar system 104 disables the gesture recognition model 621. For example, a UE102 placed face-up (touchscreen up) on a flat service may be a stationary context, where proximity to an object or no occlusion is detected, thus enabling gesture recognition. A UE102 placed face down (touchscreen down) on a flat surface is the opposite, stationary context, where occlusion is detected and gesture recognition is therefore gated.
The salient motion may adjust the gesture recognition model 621. If the UE102 is in a significant motion context where the UE102 experiences frequent or intense movement or changes in movement, the context may be less suitable for radar-based gesture detection. For example, if the user 120 carrying the UE102 in hand goes to run, the radar system 104 gates the gesture recognition model 621 to ensure that the radar system 104 does not erroneously trigger any gesture-adjusted events.
In a marine context, the user 120 interacts with the UE102 as a passenger on a ship. The user 120 may hold the UE102, or the UE102 may be a computing device built into a boat. The ship moves with the waves. In a storm environment, the radar system 104 may recognize that certain radar-based gestures may be difficult to recognize when the UE102 experiences large changes in pitch or orientation, and gate the radar-based gestures without risking outputting false positives. When the storm environment subsides and the changes in pitch and orientation subside, the radar system 104 automatically stops gating and enables radar-based gestures that have been gated during the storm.
The UE102 may adjust the radar-based gesture recognition as to whether the context indicates that the user 120 is holding the UE102, whether the context indicates that the user 120 is walking, or both. The context meets the requirements of touch-independent gesture recognition if the UE102 determines that the user 120 is holding the UE102 and the user 120 is walking. The context does not meet the requirements of touch-independent gesture recognition if the UE102 determines that the user 120 is not holding the UE102 and that the user 120 is walking. The UE102 may determine that the context is satisfactory if the sensor data timeout from the proximity sensors 208 and the IMU408 matches the sensor data that the UE102 expects to detect when the user 120 is walking and holding the UE 102. When the context does not meet the requirements, the UE102 may determine that the opposite is true and discard the gesture recognized by the radar system 104.
In the reach-grab context, the user 120 reaches over the UE102 when the UE102 is located face up on a table. The user 120 may be reaching out to grab the UE 102. The user 120 may be reaching out to catch something outside the UE 102. At 1706, determining that the context does not satisfy the requirement for radar-based gesture recognition may be in response to determining that the user 120 did not pick up the UE102 after the object arrives in proximity to the UE 102. If the user does not grasp and pick up the UE102 after reaching out (e.g., the user 120 comes in the vicinity), the UE102 gates the output from the gesture recognition model 621 (e.g., to prevent the authentication algorithm from performing facial authentication), thereby preventing the subscriber (e.g., application, component, system service) from obtaining an indication of the gesture. Determining, at 1706, that the context satisfies the requirement for radar-based gesture recognition may be in response to determining that the user 120 is picking up the UE102 after the object enters the vicinity of the UE 102. If the user does grasp and pick up the UE102 after reaching out, the UE102 enables output from the gesture recognition model 621 (e.g., enables an authentication algorithm to perform facial authentication), thereby enabling the subscriber to obtain an indication of the gesture. In this way, context sensitive gating and other context sensitive controls are used, reducing false positives that stick out and grab.
Other of the sensors 108, such as ambient light sensors, barometers, location sensors, optical sensors, infrared sensors, etc., may provide signals to the UE102 to further define the context of the UE102 to improve gesture recognition and other described techniques. At 1706, determining that the context meets the requirements of radar-based gesture recognition may be in response to location information, time of day, barometric pressure, ambient light, ambient audio, and other sensor information used to define a context of gated or ungated radar system 104. For example, a context that designates UE102 as a location near a movie theater and in low light conditions while detecting large and frequent environmental noise is not a context suitable for radar-based gesture recognition. While the simultaneous detection of low-light conditions and noisy ambient noise in the vicinity of a train station is a context suitable for radar-based (touch-independent) gesture recognition.
In operation 1706, when the context does not meet the requirements of radar-based gesture recognition using the radar system, radar data obtained by the radar system is gated, and the method proceeds to B (described below in the description of fig. 18). When the context meets the requirements of radar-based gesture recognition using the radar system at operation 1706, radar data obtained by the radar system is input to a model that determines a radar-based gesture from the input radar data at operation 1708.
At 1708, radar data obtained by radar system 104 is input into gesture recognition model 621 such that gesture recognition model 621 performs gesture recognition techniques. The radar system 104 may operate in a high power gesture recognition mode to obtain radar data with sufficient resolution, frequency, detail, and quality for radar-based (e.g., touch independent) gesture recognition. The radar system 104 may further operate in other modes, including a proximity mode or a standby mode. If multi-mode operation is supported, radar system 104 may continue to operate in one or more modes even if a different mode is disabled. For example, disabling radar-based gesture recognition may have no effect on the radar-based collision avoidance operations performed by radar system 104. Some examples of radar system 104 may not be multi-modal, so disabling radar-based gesture recognition may disable radar system 104 entirely.
In addition to being context sensitive, gesture recognition model 621 may also adjust gating sensitivity based on the identity of the subscriber. The subscriber may be an application, service, or component that receives output from gesture recognition model 621. For example, the gesture recognition model 621 provides an interface through which applications or components of the UE102 (e.g., authentication system 114, operating system functions or services, applications, drivers) can register with the gesture recognition model 621 and be assigned identities. The subscriber indicates gating sensitivity to apply to different contexts. The subscriber may indicate the type of gesture or the type of radar-based gesture to apply gating. For example, the operating system may provide access to functionality through a widget on a lock screen user interface of the UE 102. Widgets may recognize radar-based gestures and may subscribe to gesture recognition output from gesture recognition model 621. In some contexts, the output from gesture recognition model 621 is gated to prevent the subscriber from using the indication of the gesture. Output from gesture recognition model 621 is permitted in other contexts, and an indication of the gesture is sent to the subscriber. In some contexts, the output from gesture recognition model 621 may be gated for one subscriber and not gated for another. For example, the same gesture recognition used by widget subscribers in a particular context may not be available to different subscribers that select a gating gesture for that context. For example, a facial authentication application may not be able to use gesture information in some cases, but a widget on a lock screen may.
At operation 1406, the gesture recognition model 621 selects a gating sensitivity based on the identity of the subscriber. Gesture recognition model 621 determines whether the context meets the requirements of radar-based gesture recognition with radar system 104 based on gating sensitivity associated with the subscriber identity.
At 1710, an operation is performed in response to the model determining a radar-based (e.g., touch-independent) gesture. The output of gesture recognition model 621 may indicate a gesture recognized from the radar data and output an indication of the gesture to the subscriber.
The UE102 may provide user interface feedback of the gating state of the radar system 104. The UE102 may output an audible or visual indication to the user, such as an audible or visual alarm (e.g., "you moving the device to music and the radar detecting your gesture)", control the lighting elements of the UE102, provide haptic feedback, or provide some other user interface feedback. The UE102 may output an indication of the gating state as "gated" or "ungated" to indicate whether the UE102 gated the output from the gesture recognition model 621. The indication of gating status may indicate a reason for gating (e.g., provide an indication of a contextual or environmental characteristic that necessitates gating). The indication of gating state may indicate a gating level (e.g., see fig. 18 for gating levels including soft gating, hard gating, and no gating).
The UE102 may change the user interface and otherwise provide user interface feedback. For example, if the UE102 is being used, the display is on and the UE102 is operating in a high power state, the user interface feedback output from the UE102 may only depend on sensor data from motion sensors or other non-radar sensors. If the display is turned off or the UE102 is in a lower power state, then operation of the motion sensor or other non-radar-based sensor in the always-on state may be inhibited. Except in contexts that meet the requirements of touch-independent gesture recognition, the UE102 may avoid monitoring motion sensors or other non-radar sensors. In this manner, the user interface feedback is adjusted depending on whether the gesture recognition model 621 can determine a radar-based gesture.
For example, the UE102 may provide a "gesture" user interface feedback element when the radar system 104 is soft or hard gated and/or when gating is stopped and radar-based gesture recognition resumes. The gesture user interface feedback element is a user-perceptible element, such as a visual element that appears on an active area of the display. The gesture feedback elements may also be (or include) light elements, tactile elements (e.g., vibration elements), and/or audio elements (e.g., user-perceptible sounds) that are not on the display, may be presented at or along the edges of the display, and may have any of a variety of shapes, sizes, colors, and other visual parameters or attributes. Examples of other visual parameters or attributes include brightness, color, contrast, shape, saturation, or opacity.
Gesture recognition gating
Fig. 18 depicts an example method 1800 for radar-based gesture recognition with context-sensitive gating and other context-sensitive controls. Method 1800 is illustrated as a collection of blocks that specify operations performed, but is not necessarily limited to the operations shown, for performing the order or combination of operations performed by the various blocks. Further, one or more of any of the operations may be repeated, combined, re-combined, or linked to provide a wide variety of additional and/or alternative methods, such as methods 1000, 1200, 1400, and 1700. In portions of the following discussion, reference may be made to entities or processes described in detail in the example operating environment 100 of FIG. 1 or other figures, by way of example only. The techniques are not limited to being performed by one entity or multiple entities operating on one device.
There are two common scenarios for performing operations 1802, 1804, and 1806 to employ gating of a radar-based detection system. One scenario is when the radar system 104 is covered or occluded by an object. The radar system 104 may be covered or obscured when the UE102 is located face down on a surface, or in a pocket, purse, bag, or other enclosure. Another scenario is when the UE102 is experiencing significant motion. For example, if the user 120 carrying the UE102 in hand goes to run, the UE102 should not erroneously interpret touch-independent gestures using the radar system 104.
At 1802, it is determined whether radar-based gesture recognition is hard gated by radar system 104. A context is determined indicating whether the radar system is occluded by an object (e.g., from a user). UE102 selects from a plurality of gating levels, including hard gating and soft gating, based on context, and then gates gesture recognition model 621 accordingly.
As used herein, the term "soft-gating" refers to an operation that prevents an indication of a radar-based gesture from being output by radar system 104 to a subscriber. Unlike hard gating, where radar system 104 operates in a low power mode or an intermediate power mode, soft gating occurs regardless of the power level of radar system 104. Soft gating may be performed by disabling output from the gesture recognition model 621, and in other cases, soft gating may be performed by disabling input to the gesture recognition model 621. The gesture recognition model 621 may continue to recognize radar-based gestures during soft gating. During soft gating, however, radar system 104 does not share recognized gestures with subscribers (e.g., applications, threads, activities, user interface objects). The subscriber does not receive an indication of recognized gestures to use them in performing higher level functions.
During soft gating, gesture recognition model 621 may be masked (shield) from radar data collected by radar system 104, and at other times during soft gating, radar-based gesture determinations, although made by gesture recognition model 621, are used internally by radar system 104 for some other purpose, e.g., system services or hidden functions. During soft gating, UE102 may still perform lower-level support functions based on the indication of the gesture recognized by gesture recognition model 621, however, the support functions may be transparent to the subscriber and user of UE 102. Support functions include learning, understanding, and acting upon gestures, even during a gating context, to minimize potential latency from soft gating the gesture recognition model 621 in the future.
Soft gating, as compared to the term "hard gating," as used herein, refers to an operation that triggers radar system 104 to function in a state where radar system 104 does not recognize a gesture from radar data. The gesture recognition model 621 is disabled during hard gating. During hard gating, radar system 104 may be used for other tasks besides gesture recognition. Other components of radar system 104 may or may not also be disabled during hard gating contexts depending on whether UE102 requires radar system 104 for any other capabilities. Thus, while the radar system 104 may continue to perform other functions unrelated to radar-based gesture recognition, such as obstacle avoidance, the gesture recognition model 621 of the radar system 104 does not output an indication of the recognized gesture when hard gated, thereby providing greater power consumption savings than soft gated or no gating of the radar system 104 at all. In addition to providing savings in power consumption, hard gating is particularly useful for improving the user experience by preventing subscribers of radar system 104 from performing higher level functions in response to erroneous or unintended inputs.
If the UE102 is soft gating the radar system 104, the UE102 may have improved latency for recovery from an inactive gesture recognition state. With hard gating, the increased latency of recovering from an inactive gesture recognition state (e.g., where the gesture recognition features of radar system 104 may have been powered down) is offset by the power saved by not performing complex gesture recognition functions or disrupting high-level functions due to erroneous inputs. That is, although hard gating radar system 104 during a context in which UE102 is unlikely to receive input from a user prevents unnecessary power consumption to interpret gestures from radar data, UE102 may be slower than if radar system 104 was soft gated to transition back to a normal operating mode when gating is no longer necessary.
At 1804, UE102 performs hard gating by setting radar system 104 to an intermediate or low power mode to output no data or other data that gesture recognition model 621 cannot use to determine touch-independent gestures. When the radar system 104 is occluded, the output from the radar system 104 is hard gated at 1804 by disabling the gesture recognition model 621.
At 1802, for example, when the radar system 104 is not occluded, the output from the radar system is soft gated at 1806. UE102 soft-gates radar system 104 by avoiding input of radar data obtained by radar system 104 to gesture recognition model 621. Alternatively, UE102 soft-gates radar system 104 by preventing gesture recognition model 621 from outputting an indication of the recognized gesture.
During subsequent executions of operations 1700 and 1800, radar system 104 may transition between no gating, soft gating, and hard gating, depending on the context. For example, after soft or hard gating the radar system 104, the method of fig. 18 returns to "a" and the beginning of operation 1700 of fig. 17. If, after soft gating of the radar system, it is determined at 1706, 1802 that the context indicates that the radar system 104 is occluded by a proximate object, the radar system 104 is hard gated.
Sensitivity to gating
Fig. 19 illustrates a decision tree implementing the method of fig. 17 and 18. Portions of the scheme 1900 may be performed by the processor 608, the computer processor 402, or other hardware circuitry. Scheme 1900 can be customized to support different types of electronic devices and radar-based applications.
The sensor data reception 1902 occurs when the UE102 performs operation 1702. From operation 1702, the UE102 performs motion detection 1904 and proximity detection algorithms on the sensor data using the sensor data to develop a context during operation 1704, including determining whether the radar system 104 is occluded, or determining an increased rate of motion.
The sensitivity of the motion detection 1904 and proximity detection 1906 may be selected to balance motion gating behavior while being able to account for device motion. Two common scenarios illustrate the need for sensitivity adjustment. The first scenario is when the user 120 is walking slowly and swinging through their body with the UE102 carried on the user side. Without persistent gating, the first scenario may lead to severe false triggers. The second scenario is when the user 120 lifts the UE102 to act. When the UE102 is lifted for interaction (from the side, from a table, from a pocket, etc.), the subsequent detection of natural body motion should invoke a fast gating response from the UE 102. In order to respond satisfactorily quickly and without causing any delayed interference to the user, a lower gating sensitivity is required. Gating decision 1908 is made during operation 1706, which results in one of three gating modes: shutdown 1910, soft gating 1912, or hard gating 1914. For more detailed information on varying the gating sensitivity, see the "motion-based gating" section and the description of FIG. 21 below.
Gated state machine
Fig. 20 shows a state diagram of a state machine 2000 for implementing the methods of fig. 17 and 18. State machine 2000 is a gated state machine and may be implemented as part of radar system 104.
The state machine 2000 includes a plurality of states 2002, 2004, and 2006, each linked by a respective context-sensitive transition function 2008-1 through 2008-6 (collectively "functions 2008"). Each function 2008 receives at least a portion of the sensor data or a derivative thereof as a variable input. For ease of illustration, the state machine 2000 includes only three states: 2002. 2004 and 2006. In other examples, more than three states are used by state machine 2000. The state machine 2000 transitions between states 2004, 2006 and is based on a function 2008.
The state machine 2000 includes an ungated state 2002 in which radar-based gesture recognition using the radar system 104 is enabled. The soft gating state 2004 is a result in which radar-based gesture recognition using the radar system 104 is enabled, but is withheld from applications and other subscribers executing at the UE 102. For the hard gating state 2006, the radar-based gesture recognition functionality of radar system 104 is disabled, although other functionality of radar system 104 may remain enabled (e.g., radar system 104 may perform collision avoidance functionality during hard gating while gesture recognition is disabled).
Each function 2008 computes a respective context score that indicates compatibility between the current context and each of the states 2002, 2004, and 2006. For example, function 2008-3 computes a context score that indicates whether state machine 2000 should transition to soft-gated state 2004 based on sensor data defining the current context. The function 2008-6 computes a context score that indicates whether the state machine 2000 should transition to the hard gated state 2006 based on the sensor data defining the current context. The state machine 2000 transitions from the non-gated state 2000 to the soft-gated state 2004 or the hard-gated state 2006 based on which of the two states 2004 or 2006 has a context score that satisfies a transition threshold. If each of functions 2008-3 and 2008-6 calculates a context score that satisfies a transition threshold to transition state machine 2000 to the next state, state machine 2000 may transition to the next state with the highest context score.
When in the ungated state 2002, the state machine 2000 of the radar system 104 receives sensor data from the sensors 108. Functions 2008-3 and 2008-6 take sensor data as input and compute a contextual score that indicates whether the sensor data meets the requirements for entering a soft gating state 2004 or a hard gating state 2006, respectively. Function 2008-3 corresponds to the "no" result from operation 1802 of FIG. 18. Function 2008-6 corresponds to a "yes" result from operation 1802 of FIG. 18. If neither context score derived from functions 2008-3 and 2008-6 satisfies the respective transition threshold, state machine 2000 remains in the ungated state 2002.
In the context where the sensor data indicates that the user 120 is holding the UE102 and viewing the UE102, the state machine 2000 maintains the radar system 104 in a gesture recognition mode operating in the ungated state 2002. When the user 120 moves the line of sight away from the UE102 to talk to another person without dropping the UE102 or maintaining the UE102 substantially stable, the function 2008-3 may calculate a context score that exceeds a corresponding transition threshold for transitioning to the soft-gated state 2004. UE102 may want to remain ready to resume detecting radar-based user input, so in such situations as when the user is temporarily not involved with UE102, if user 120 returns to looking at UE102, UE102 can quickly return to the ungated state 2002; soft gating thus enhances the user experience with the UE 102. The state machine 2000 transitions to the soft-gated state 2004 and continues to enable radar-based gesture recognition using the radar system 104, but the state machine 2000 prevents the radar system 104 from outputting results of the gesture recognition to applications executing at the UE 102.
Again, starting from the ungated state 2002, in a slightly different context, where the sensor data indicates that the user 120 is looking away from the UE102 to talk to another person, while also putting the UE102 to the side of the user 120, or otherwise not maintaining the UE102 substantially stationary. Function 2008-6 may calculate context scores that exceed respective transition thresholds for transitioning to hard gated state 2006. Radar system 104 may continue to perform other radar operations for UE102, but the radar-based gesture-recognition functionality of radar system 104 is disabled in the hard-gated state. When gesture recognition may not be needed, hard gating thereby promoting power savings places the radar state 104 in a state where gesture recognition is disabled.
After transitioning to soft-gated state 2004, updated sensor data is received from sensor 108 and radar system 104. The state machine 2000 computes a corresponding context score using functions 2008-1 and 2008-4. Function 2008-1 corresponds to the "yes" result from operation 1706 of FIG. 17. Function 2008-4 corresponds to a "yes" result from operation 1802 of FIG. 18. If the context score of the function 2008-1 exceeds the transition threshold for transitioning to the ungated state 2002, the state machine 2000 transitions to the ungated state 2002. If the context score of function 2008-4 exceeds the transition threshold for transitioning to the hard-gated state 2006, the state machine 2000 transitions to the hard-gated state 2006. If both context scores of functions 2008-1 and 2008-1 exceed their respective transition thresholds, state machine 2000 can transition to a state 2002 or 2006 that is associated with a higher scene score than the context score of the other function. Assume that the context score of function 2008-4 exceeds the context score of function 2008-1 and the transition threshold associated with transitioning from soft gated state 2004 to hard gated state 2006.
After transitioning to the hard gating state 2006, updated sensor data is received from the sensors 108 and the radar system 104. The state machine 2000 computes a corresponding context score using functions 2008-2 and 2008-5. Function 2008-2 corresponds to the "no" result from operation 1802 of FIG. 18. Function 2008-5 corresponds to the "yes" result from operation 1706 of FIG. 17. If the context score of the function 2008-5 exceeds the transition threshold for transitioning to the ungated state 2002, the state machine 2000 transitions to the ungated state 2002. If the context score of function 2008-2 exceeds the transition threshold for transitioning to soft gating state 2004, state machine 2000 transitions to soft gating state 2004. If both context scores of functions 2008-2 and 2008-5 exceed their respective transition thresholds, state machine 2000 may transition to state 2002 or 2004 associated with a higher context score than the context score of the other function.
The state machine 2000 may be machine learned or driven based on inferences made by the machine learning model. The machine learning model is trained to predict a suitable gating state of the radar system 104 based on sensor data or other inputs defining a current context. For example, function 2008 may be a machine-learned rule or application or a machine-learned model for the current context to compute a context score. In other words, each function 2008 may be a machine-learned model, or an instance of a machine-learned model, trained to predict the next radar state or equate the current context to a context score of the next radar state.
Other context sensitive controls
As described in more detail above, radar system 104 gates radar system 104 or does not gate radar system 104 depending on the context of UE102 and awareness of the location and position of user 120. These same techniques applied to context sensitive gating may be applied to other context-related controls that rely on radar system 104 and radar functionality.
The UE102 may also use the radar system 104 and other sensors 108 to predict the intended involvement of the user 120. The context of UE102 may indicate, relative to user 120, a distance from UE102 to user 120, indicate whether user 120 is moving toward or away from UE102, indicate whether user 120 is reaching UE120, and a pose or orientation of user 120 relative to UE 102.
The state machine 2000 may pause (e.g., soft-gated, hard-gated) the radar system 104 (or put the radar system 104 into a sleep mode) based on inertial data generated by the IMU of the sensors 108. Inertial data indicating that UE102 is moving in a manner that may reduce the accuracy or efficiency of radar system 104's ability to perform other radar functions that are not only radar-based gesture recognition. Inertial data from the IMU may include X, Y and Z-axis movement information. The state machine 2000 combines these three movements into a floating point value, which the state machine 2000 inputs into function 20008 to transition between states 2002, 2004, and 2006.
The state machine 2000 also controls the radar system 104 (or puts the radar system 104 into a sleep mode) based on other non-IMU sensor data generated by the sensors 108 or any other useful information generated by any other data source. For example, the UE102 may include a calendar application, a clock application, a location service, a proximity service, a communication service, a financial service, or any other context data source. A subscriber application executing at UE102 may provide context information to radar system 104 as if the subscriber application may receive an indication of a gesture input recognized by radar system 104.
All of these potential sources of information may feed state machine 2000 and function 2008 to determine whether radar system 104 should be paused or gated. In addition, the system may know what applications are running, which may further improve the context awareness of the UE102 and help the UE102 make decisions about the suspended mode.
Context awareness of the radar system 104 further enables the UE102 to change the number of radar states or patterns available depending on the context. For example, in an automotive context, radar system 104 need only be in an ungated or soft gated mode, since maximum responsiveness in an automotive mode (if the power supply of the automobile is turned on) without regard to power consumption is a desirable characteristic of UE 102. For example, only two states are necessary because the radar system 104 assumes that the user 120 is only within a few feet away (car only), so hard gating when the user is not present or saving power when interaction with the UE102 is unlikely is not necessary.
Contextual awareness of radar system 104 relies on dynamic functions 2008 and even machine-learned models to adjust trigger parameters between gating states and other radar modes of radar system 104, such as the size of an area of awareness or recognition, sensitivity to changes in distance or velocity of extensions or other gestures, and so forth. Other functionality of radar system 104 may be based on context. Consider a user in a car alone versus a user on a subway or in a crowded conference room. Radar system 104 may use different sensitivities, feedbacks, and features to determine radar-based gestures, as certain settings such as these may be more effective in different contexts.
Context awareness for controlling radar system 104 may be used in other ways. For example, in response to detecting UE102 in a storage context, e.g., on a bicycle, radar system 104 may automatically configure itself for collision avoidance radar mode and disable gesture recognition.
The source of context information for UE102 may be remote from UE102, e.g., a sensor or input component of a computing watch paired with UE102 may be another source of sensor information that supplements sensor data collected from sensors 108. In this case, radar system 104 may gate or otherwise control radar functionality based on sensor data from the communicatively coupled watch. The sensor data may include heart rate information. When the user's heart rate exceeds a particular threshold for indicating exercise or intense physical movement, radar system 104 may disable radar-based gesture recognition or other features of radar system 104 because the user is less likely to make gestures at the UE while exercising.
Ambient light sensors from the sensors 108 capture sensor data that indicates when the context of the UE102 is in the low light region. In such a context, radar system 104 operates under the assumption that user 120 will have difficulty interacting with UE102, and thus radar system 104 makes its interface more forgiving to errant inputs.
Proximity sensors from sensors 108, such as optical proximity sensors, may trigger radar system 104 to turn off or enter a state that disables gesture recognition when radar system 104 is occluded. Wireless signals, power connections, network connections, and other connections to the UE102 may provide additional context information to control the radar system 104. In response to detecting a charging cable, docking station, or wireless charging system that powers UE102, radar system 104 avoids entering hard-gated state 2006 because UE102 does not need to handle power consumption while charging and user 120 is more likely to desire a faster response rate from radar system 104. In a related example, when connected to a wireless charging system, the radar system 104 may disable most of its functionality to avoid interference with the wireless charger. The radar system 104 may operate in an inactive mode to avoid interfering with communications and other signals transmitted or received by the UE 102.
The radar system 104 may be turned on or off in coordination with other input components. For example, user 120 may provide input to a touchscreen of UE102, and while detecting the input on the touchscreen, radar system 104 may disable gesture recognition. In other cases, the radar system 104 enhances touchscreen functionality by remaining on and sending information about recognized gestures to an input decoder that processes touchscreen data and radar data simultaneously to infer user intent. In this way, even if the user 120 is wearing gloves while providing touch input, which may interfere with some presence-sensitive screens, the radar system 104 and touch screen may recognize typing on a soft keyboard or other input to the GUI.
Mobile based gating
Fig. 21 illustrates a block diagram 2100 for motion-based gating to implement radar-based gesture recognition. Portions of the block diagram 2100 may be performed by the processor 608, the computer processor 402, or other hardware circuitry. Block diagram 2100 may be customized to support different types of electronic devices and radar-based applications.
Block diagram 2100 includes a low pass filter (e.g., a fourth order butterworth filter) and a digital blocker 2102. The inertial sensor data (e.g., from IMU 408) is filtered for all three axes (e.g., X, Y and Z). The filtering may occur at a different rate than the output rate from the IMU 408. For example, IMU408 outputs acceleration at fifty hertz, but low pass filter and digital blocker 2102 filters acceleration at twelve hertz. Low pass filter and digital blocker 2102 outputs acceleration measurements to significant motion detector 2120 and phone orientation detector 2122.
The significant motion detector 2120 uses the absolute value component 2104 to determine the absolute value of the inertial sensor data for each axis (e.g., X, Y and Z). The envelope component 2106 buffers the filtered and normalized acceleration measurements for evaluation by an adjustable threshold component 2108, which adjustable threshold component 2108 detects significant motion (backset) relative to historical observed motion over time.
The phone orientation detector 2122 determines the orientation of the UE 102. The sensitivity of the gating function applied to the radar system 104 varies according to changes in the orientation of the UE 102. The sensitivity of the gating function is also based on the amount of movement of the UE102 for a given orientation.
The moving average component 112 calculates the average motion for each axis (e.g., X, Y and Z). A "dot product with reference vector" (DPRV) component 2114 determines a value from the average motion representing the orientation and movement of the UE 102. The orientation and movement values are received by an adjustable threshold component 2116. The orientation and movement values received by the adjustable threshold component 2116 indicate a particular orientation or movement, and the adjustable threshold component 2116 sets the adjustable threshold component 2108 to a high sensitivity or a low sensitivity. For example, if phone orientation detector 2122 determines that UE102 may be in a landscape or portrait-down orientation, threshold component 2108 may be set to high sensitivity by threshold component 2116, so radar system 104 is typically gated more to prevent small movements or orientation changes from being used for gesture recognition. If phone orientation detector 2122 determines that UE102 is likely to be in a different orientation, threshold component 2108 may be set to a lower sensitivity by threshold component 2116, thus radar system 104 is gated less to enable even small movements or orientation changes to be used in gesture recognition. In other words, the output from adjustable threshold 2116 may act like a switch that directs adjustable threshold 2108 to have high or low sensitivity depending on the movement and orientation.
The output of block 2100 is a gating decision determined from the combination of significant motion detector 2120 and phone orientation detector 2122. The logic OR component 2110 outputs a particular value 104 depending on whether the radar system is gated. The radar system 104 may soft gate OR not gate the output depending on the gating decision from the logical OR component 2110.
The sensitivity of significant motion detector 2120 is correlated with phone orientation detector 2122 to balance the motion gating behavior of radar system 104 while also being able to account for device motion. As previously mentioned, walking slowly and swinging across their body with the UE102 carried by the user 120 side may result in significant false triggers without adjusting the gating sensitivity of the radar system 104. If the user 120 lifts the UE102 (from the side, from a desk, from a pocket, etc.) to act, the subsequent detection of natural body motion will invoke a fast gating response from the UE102 and therefore a lower gating sensitivity is required for the response from the radar system 104 to be satisfactorily rapid and not to cause any delayed annoyance to the user 120.
Examples of the invention
In the following paragraphs, examples are provided.
Example 1. a method, comprising: receiving sensor data from a plurality of sensors of a user device; determining a context of a user device based on the sensor data; determining whether the context meets requirements for radar-based gesture recognition; and in response to determining that the context does not meet the requirements of the radar-based gesture recognition, gating the radar system to prevent the radar system from outputting an indication of the radar-based gesture to an application subscriber of the user device.
Example 2. the method of example 1, wherein gating the radar system comprises hard gating the radar system by triggering the radar system to operate in a state in which the radar system does not recognize gestures from the radar data.
Example 3 the method of example 2, wherein hard gating the radar system is further in response to determining that the context indicates that the radar system is occluded by an object.
Example 4. the method of example 1, wherein gating the radar system comprises soft gating the radar system by triggering the radar system to operate in a state in which the radar system does not output an indication of a radar-based pose.
Example 5 the method of example 4, wherein soft gating the radar system is further responsive to determining that the context indicates that the radar system is not occluded by an object.
Example 6. the method of example 4, wherein soft-gating the radar system to prevent the radar system from outputting an indication of the radar-based gesture to an application subscriber of the user device does not inhibit the radar system from recognizing the radar-based gesture from the radar data.
Example 7. the method of example 4, further comprising: after soft-gating the radar system, determining that the context indicates that the radar system is occluded by an object; and in response to determining that the context indicates that the radar system is occluded by the object, hard gating the radar system by triggering the radar system to operate in a state in which the radar system does not recognize gestures from the radar data.
The method of example 8, wherein the context is a first context and the sensor data is first sensor data, the method further comprising: receiving second sensor data from the plurality of sensors; determining a second context of the user device based on the second sensor data; determining whether the second context meets a requirement for radar-based gesture recognition; responsive to determining that the second context satisfies a requirement of radar-based gesture recognition, inputting radar data obtained by the radar system into a model that determines radar-based gestures from the input radar data; and performing an operation in response to the model determining the radar-based pose, the operation associated with the determined radar-based pose.
Example 9. the method of example 8, wherein inputting radar data obtained by the radar system into the model of radar-based gesture recognition includes avoiding gating the radar system and setting the radar system to an active state of radar-based gesture recognition.
Example 10 the method of any of examples 1 to 9, wherein the radar system is configured as a proximity sensor for generating at least part of the sensor data.
Example 11 the method of any of examples 1 to 10, wherein determining whether the context meets requirements for radar-based gesture recognition with a radar system comprises: it is determined whether the context indicates that the user is holding the user device or whether the context indicates that the user is walking.
Example 12. the method of example 11, further comprising: in response to determining that the user is not holding the user device and that the user is walking; or in response to determining that the radar system is occluded by the object, determining that the context does not meet the requirements of radar-based gesture recognition.
Example 13. the method of example 11, further comprising: whether the user is holding the user device, how the user is holding the user device, or whether the user is walking is determined based on whether the sensor data indicates a particular movement.
Example 14. the method of any of examples 1 to 13, further comprising: determining an identity of an application subscriber based on radar-based gesture recognition; based on the identity of the subscriber, selecting a gating sensitivity for determining whether the context meets a requirement for radar-based gesture recognition, wherein determining whether the context meets the requirement for radar-based gesture recognition with the radar system is based on the gating sensitivity associated with the identity of the subscriber.
Example 15. the method of example 14, wherein the gating sensitivity is specific to a type of radar-based gesture preselected by one of the application subscribers.
Example 16. the method of any of examples 1 to 15, further comprising: changing a state of the user device in response to the model determining the radar-based pose, the state of the user device comprising an access state, a power state, or an information state.
The method of any of examples 1-16, wherein determining whether the context meets the requirements of the radar-based gesture recognition comprises: a state machine is executed that includes a plurality of states linked by respective context-sensitive transfer functions that receive at least portions of the sensor data as variable inputs.
Example 18. the method of example 17, wherein the state machine comprises: an ungated state in which radar-based gesture recognition with a radar system is enabled; a soft gating state in which radar-based gesture recognition with a radar system is enabled, but results of the radar-based gesture recognition are withheld from applications executing at the user device and other subscribers; and a hard-gated state, wherein radar-based gesture recognition with the radar system is disabled.
Example 19 the method of any of examples 1 to 18, wherein the plurality of sensors includes an inertial measurement unit.
Example 20 the method of any of examples 1 to 19, wherein the plurality of sensors does not include a camera sensor.
Example 21 the method of any of examples 1 to 20, wherein the plurality of sensors includes a proximity sensor, an ambient light sensor, a microphone, or a barometer.
Example 22 the method of example 21, wherein the proximity sensor is an optical proximity sensor.
Example 23. an apparatus, comprising: a radar system that detects radar-based gestures on behalf of application subscribers; an inertial measurement unit receiving inertial sensor data; and a state machine that transitions between a plurality of states based on the inertial sensor data and the context sensitive transfer function to control the radar system, the state machine comprising: an ungated state in which the state machine enables the radar system to output an indication of a radar-based gesture to an application subscriber; a soft gating state in which the state machine prevents the radar system from outputting an indication of a radar-based pose to an application subscriber; and a hard gated state in which the state machine prevents the radar system from detecting radar-based gestures.
The apparatus of example 24. the apparatus of example 23, wherein at least one of the context sensitive transfer functions receives at least a portion of the inertial sensor data as a variable input.
Example 25 the apparatus of examples 23 or 24, wherein the state machine enables the radar system to detect the radar-based gesture while preventing output of an indication of the radar-based gesture to the application subscriber.
The apparatus of any of examples 23 to 25, wherein: a first function from the context-sensitive transfer functions outputs a first context score that indicates whether to transition from the ungated state to the soft gated state based on the inertial sensor data; and a state machine transitions from the ungated state to the soft gated state in response to determining that the first context score satisfies a first threshold.
Example 27. the apparatus of example 26, wherein: a second function from the context-sensitive transfer functions outputs a second context score that indicates whether to transition from the non-gated state to the hard-gated state based on the inertial sensor data; and transition, by the state machine, from the non-gated state to the hard-gated state in response to determining that the second context score satisfies the second threshold.
The apparatus of example 28, wherein the state machine transitions from the non-gated state to the hard-gated state in response to determining that the second context score satisfies a second threshold and that the second context score exceeds the first context score.
Example 29 the apparatus of example 28, wherein the state machine transitions from the ungated state to the soft gated state in response to determining that the first context score satisfies a first threshold and that the first context score exceeds a second context score.
Example 30 the apparatus of any of examples 23 to 29, wherein the apparatus consumes a different amount of power when the state machine operates in the soft gated state than when the state machine operates in the hard gated state.
Example 31 the apparatus of any of examples 23 to 30, wherein the apparatus consumes more power due to detecting the radar-based pose when the state machine is operating in the soft-gated state than when the state machine is operating in the hard-gated state.
The apparatus of any of examples 23 to 31, wherein at least one of the context sensitive transfer functions outputs a context score based on a comparison between a position, orientation, or movement inferred from inertial sensor data and a position, orientation, and movement threshold.
Example 33 the apparatus of any of examples 23 to 32, wherein a first function from the context sensitive transfer functions outputs the context score based on whether the radar system is occluded by an object.
Example 34 the apparatus of example 33, wherein the state machine transitions from the ungated state to the soft gated state in response to a contextual score indicating that the apparatus is not occluded by an object.
Example 35 the apparatus of any of examples 33 or 34, wherein the state machine transitions from the non-gated state to the hard-gated state in response to a contextual score indicating that the apparatus is occluded by an object.
The apparatus of any of claims 23-35, wherein at least one of the context sensitive transfer functions receives at least a portion of the inertial sensor data as a variable input after filtering the inertial sensor data by a low pass filter.
The apparatus of any of claims 23 to 36, wherein at least one of the context sensitive transfer functions receives as a variable input an indication of an orientation of the apparatus, and the state machine transitions between a plurality of states to control the radar system based on the inertial sensor data, the context sensitive transfer function, and the orientation.
The apparatus of any of claims 23 to 37, wherein at least one of the context sensitive transfer functions receives as a variable input an indication of proximity from the apparatus to an object, and the state machine transitions between a plurality of states to control the radar system based on the inertial sensor data, the context sensitive transfer function, and the proximity.
Example 39. a user equipment comprising the apparatus according to any one of examples 23 to 38 and a processor configured to execute a state machine.
Example 40 a system comprising a device to execute a state machine of the apparatus according to any one of examples 23 to 38.
Conclusion
Although implementations of techniques and apparatus for radar-based gesture recognition with context-sensitive gating and other context-sensitive controls have been described in language specific to features and/or methods, it is to be understood that the subject of the appended claims is not necessarily limited to the specific features or methods described. Rather, certain features and methods are disclosed as example implementations to enable radar-based gesture recognition with context-sensitive gating and other context-sensitive controls.
Claims (15)
1. An apparatus, comprising:
a radar system that detects radar-based gestures on behalf of an application subscriber;
an inertial measurement unit that receives inertial sensor data; and
a state machine that transitions between a plurality of states based on the inertial sensor data and a context sensitive transfer function to control the radar system, the state machine comprising:
an ungated state in which the state machine enables the radar system to output an indication of the radar-based pose to the application subscriber;
a soft gating state in which the state machine prevents the radar system from outputting an indication of the radar-based pose to the application subscriber; and
a hard gated state in which the state machine prevents the radar system from detecting the radar-based pose.
2. The apparatus of claim 1, wherein at least one of the context-sensitive transfer functions receives at least a portion of the inertial sensor data as a variable input after filtering the inertial sensor data through a low-pass filter.
3. The apparatus of claim 1 or 2, wherein at least one of the context-sensitive transfer functions receives as a variable input an indication of an orientation of the apparatus, and the state machine transitions between a plurality of states based on the inertial sensor data, the context-sensitive transfer function, and the orientation to control the radar system.
4. The apparatus of claims 1-3, wherein at least one of the context-sensitive transfer functions receives as a variable input an indication of proximity from the apparatus to an object, and the state machine transitions between the plurality of states based on the inertial sensor data, the context-sensitive transfer function, and the proximity to control the radar system.
5. The apparatus of any of claims 1 to 4, wherein:
a first function from the context-sensitive transfer functions outputting a first context score that indicates whether to transfer from the ungated state to the soft gated state based on the inertial sensor data; and
the state machine transitions from the ungated state to the soft gated state in response to determining that the first context score satisfies a first threshold.
6. The apparatus of claim 5, wherein:
a second function from the context-sensitive transfer functions outputs a second context score that indicates whether to transfer from the ungated state to the hard-gated state based on the inertial sensor data; and
the state machine transitions from the ungated state to the hard-gated state in response to determining that the second context score satisfies a second threshold.
7. The apparatus of claim 6, wherein the state machine transitions from the ungated state to the hard gated state in response to determining that the second contextual score satisfies the second threshold and that the second contextual score exceeds the first contextual score.
8. The apparatus of claim 7, wherein the state machine transitions from the ungated state to the soft gated state in response to determining that the first context score satisfies the first threshold and that the first context score exceeds the second context score.
9. The apparatus of any of claims 1-8, wherein the apparatus consumes more power due to detecting the radar-based gesture when the state machine is operating in the soft-gated state than when the state machine is operating in the hard-gated state and not detecting the radar-based gesture.
10. The apparatus of any of claims 1-9, wherein at least one of the context-sensitive transfer functions outputs a context score based on a comparison between a position, orientation, or movement inferred from the inertial sensor data and a position, orientation, or movement threshold.
11. The apparatus of any of claims 1 to 10, wherein a first function from the context sensitive transfer function outputs a context score based on whether the radar system is occluded by an object.
12. The apparatus of claim 11, wherein the state machine transitions from the ungated state to the soft gated state in response to the contextual score indicating that the apparatus is not occluded by the object.
13. The apparatus of any of claims 11 or 12, wherein the state machine transitions from the ungated state to the hard gated state in response to the contextual score indicating that the apparatus is occluded by the object.
14. A user equipment comprising the apparatus of any of claims 1 to 13 and a processor configured to execute the state machine.
15. A system comprising means for executing a state machine of an apparatus according to any one of claims 1 to 14.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202210329665.1A CN114827344B (en) | 2019-07-26 | 2019-10-10 | Robust radar-based gesture recognition by user devices |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962879361P | 2019-07-26 | 2019-07-26 | |
US62/879,361 | 2019-07-26 | ||
US201962894566P | 2019-08-30 | 2019-08-30 | |
US62/894,566 | 2019-08-30 | ||
PCT/US2019/055731 WO2021021227A1 (en) | 2019-07-26 | 2019-10-10 | Robust radar-based gesture-recognition by user equipment |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202210329665.1A Division CN114827344B (en) | 2019-07-26 | 2019-10-10 | Robust radar-based gesture recognition by user devices |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112655188A true CN112655188A (en) | 2021-04-13 |
CN112655188B CN112655188B (en) | 2022-04-08 |
Family
ID=68296680
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980006096.3A Active CN112655188B (en) | 2019-07-26 | 2019-10-10 | Robust radar-based gesture recognition by user equipment |
Country Status (4)
Country | Link |
---|---|
US (1) | US20220413620A1 (en) |
EP (2) | EP3791563B1 (en) |
CN (1) | CN112655188B (en) |
WO (2) | WO2021021224A1 (en) |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2017200571A1 (en) | 2016-05-16 | 2017-11-23 | Google Llc | Gesture-based control of a user interface |
EP3991067A1 (en) | 2019-06-26 | 2022-05-04 | Google LLC | Radar-based authentication status feedback |
EP4004686A1 (en) | 2019-07-26 | 2022-06-01 | Google LLC | Authentication management through imu and radar |
US11385722B2 (en) | 2019-07-26 | 2022-07-12 | Google Llc | Robust radar-based gesture-recognition by user equipment |
US11868537B2 (en) | 2019-07-26 | 2024-01-09 | Google Llc | Robust radar-based gesture-recognition by user equipment |
KR20220005081A (en) | 2019-07-26 | 2022-01-12 | 구글 엘엘씨 | State reduction based on IMU and radar |
US11467672B2 (en) | 2019-08-30 | 2022-10-11 | Google Llc | Context-sensitive control of radar-based gesture-recognition |
CN112753005B (en) | 2019-08-30 | 2024-03-01 | 谷歌有限责任公司 | Input method of mobile device |
WO2021040742A1 (en) | 2019-08-30 | 2021-03-04 | Google Llc | Input-mode notification for a multi-input node |
CN113892072A (en) | 2019-08-30 | 2022-01-04 | 谷歌有限责任公司 | Visual indicator for paused radar gestures |
US11394417B1 (en) * | 2021-07-14 | 2022-07-19 | Qualcomm Incorporated | Human proximity sensor using short-range radar |
US20230418356A1 (en) * | 2022-06-27 | 2023-12-28 | Qualcomm Incorporated | Power optimization for smartwatch |
US20230418385A1 (en) * | 2022-06-28 | 2023-12-28 | Snap Inc. | Low-power hand-tracking system for wearable device |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120235790A1 (en) * | 2011-03-16 | 2012-09-20 | Apple Inc. | Locking and unlocking a mobile device using facial recognition |
CN103502911A (en) * | 2011-05-06 | 2014-01-08 | 诺基亚公司 | Gesture recognition using plural sensors |
CN104919393A (en) * | 2012-11-20 | 2015-09-16 | 三星电子株式会社 | Transition and interaction model for wearable electronic device |
CN106062777A (en) * | 2014-03-28 | 2016-10-26 | 英特尔公司 | Radar-based gesture recognition |
CN106339076A (en) * | 2015-10-22 | 2017-01-18 | 北京智谷睿拓技术服务有限公司 | Control method and control device based on action recognition |
CN106371569A (en) * | 2015-10-22 | 2017-02-01 | 北京智谷睿拓技术服务有限公司 | Movement recognition method and movement recognition device |
CN106537173A (en) * | 2014-08-07 | 2017-03-22 | 谷歌公司 | Radar-based gesture recognition |
CN107710012A (en) * | 2015-10-06 | 2018-02-16 | 谷歌有限责任公司 | Support the sensor fusion of radar |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
TW201419036A (en) * | 2012-11-06 | 2014-05-16 | Pixart Imaging Inc | Sensor array and method of controlling sensing device and related electronic apparatus |
EP3158427B1 (en) * | 2014-06-19 | 2022-12-28 | Robert Bosch GmbH | System and method for speech-enabled personalized operation of devices and services in multiple operating environments |
US10914834B2 (en) * | 2017-05-10 | 2021-02-09 | Google Llc | Low-power radar |
-
2019
- 2019-09-27 WO PCT/US2019/053676 patent/WO2021021224A1/en unknown
- 2019-10-10 EP EP19797449.6A patent/EP3791563B1/en active Active
- 2019-10-10 WO PCT/US2019/055731 patent/WO2021021227A1/en unknown
- 2019-10-10 CN CN201980006096.3A patent/CN112655188B/en active Active
- 2019-10-10 EP EP23203038.7A patent/EP4283443A3/en active Pending
-
2022
- 2022-08-25 US US17/822,277 patent/US20220413620A1/en active Pending
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120235790A1 (en) * | 2011-03-16 | 2012-09-20 | Apple Inc. | Locking and unlocking a mobile device using facial recognition |
CN103502911A (en) * | 2011-05-06 | 2014-01-08 | 诺基亚公司 | Gesture recognition using plural sensors |
CN104919393A (en) * | 2012-11-20 | 2015-09-16 | 三星电子株式会社 | Transition and interaction model for wearable electronic device |
CN106062777A (en) * | 2014-03-28 | 2016-10-26 | 英特尔公司 | Radar-based gesture recognition |
CN106537173A (en) * | 2014-08-07 | 2017-03-22 | 谷歌公司 | Radar-based gesture recognition |
CN107710012A (en) * | 2015-10-06 | 2018-02-16 | 谷歌有限责任公司 | Support the sensor fusion of radar |
CN106339076A (en) * | 2015-10-22 | 2017-01-18 | 北京智谷睿拓技术服务有限公司 | Control method and control device based on action recognition |
CN106371569A (en) * | 2015-10-22 | 2017-02-01 | 北京智谷睿拓技术服务有限公司 | Movement recognition method and movement recognition device |
Also Published As
Publication number | Publication date |
---|---|
EP4283443A3 (en) | 2024-02-21 |
US20220413620A1 (en) | 2022-12-29 |
EP3791563B1 (en) | 2023-12-06 |
CN114827344A (en) | 2022-07-29 |
CN112655188B (en) | 2022-04-08 |
EP3791563A1 (en) | 2021-03-17 |
WO2021021224A1 (en) | 2021-02-04 |
WO2021021227A1 (en) | 2021-02-04 |
EP4283443A2 (en) | 2023-11-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN112655188B (en) | Robust radar-based gesture recognition by user equipment | |
US11385722B2 (en) | Robust radar-based gesture-recognition by user equipment | |
US11467672B2 (en) | Context-sensitive control of radar-based gesture-recognition | |
JP7292437B2 (en) | Degradation based on IMU and radar | |
JP7316383B2 (en) | Authentication management via IMU and radar | |
KR102639579B1 (en) | Stay verified | |
WO2021021220A1 (en) | Authentication management through imu and radar | |
US11868537B2 (en) | Robust radar-based gesture-recognition by user equipment | |
CN114827344B (en) | Robust radar-based gesture recognition by user devices | |
JP7346595B2 (en) | Context-sensitive control with radar-based gesture recognition | |
US20240161542A1 (en) | Authentication Management Through IMU and Radar |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
CN112585594A - Intelligent unexpected document discovery notification - Google Patents
Intelligent unexpected document discovery notification Download PDFInfo
- Publication number
- CN112585594A CN112585594A CN201880096801.9A CN201880096801A CN112585594A CN 112585594 A CN112585594 A CN 112585594A CN 201880096801 A CN201880096801 A CN 201880096801A CN 112585594 A CN112585594 A CN 112585594A
- Authority
- CN
- China
- Prior art keywords
- documents
- user
- document
- cloud
- collaborators
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 73
- 238000012545 processing Methods 0.000 claims description 46
- 230000003993 interaction Effects 0.000 claims description 33
- 238000010801 machine learning Methods 0.000 claims description 27
- 230000004044 response Effects 0.000 claims description 18
- 230000009471 action Effects 0.000 claims description 13
- 238000007726 management method Methods 0.000 description 99
- 238000012552 review Methods 0.000 description 26
- 238000012549 training Methods 0.000 description 17
- 238000010586 diagram Methods 0.000 description 15
- 230000015654 memory Effects 0.000 description 10
- 230000000699 topical effect Effects 0.000 description 5
- 238000013459 approach Methods 0.000 description 4
- 238000013528 artificial neural network Methods 0.000 description 4
- 238000004590 computer program Methods 0.000 description 4
- 238000004519 manufacturing process Methods 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 238000004891 communication Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000013500 data storage Methods 0.000 description 2
- 230000007812 deficiency Effects 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 230000008569 process Effects 0.000 description 2
- 238000012706 support-vector machine Methods 0.000 description 2
- 230000001154 acute effect Effects 0.000 description 1
- 230000001174 ascending effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000007717 exclusion Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 230000007274 generation of a signal involved in cell-cell signaling Effects 0.000 description 1
- 238000011524 similarity measure Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 230000002123 temporal effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9035—Filtering based on additional data, e.g. user or group profiles
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90324—Query formulation using system suggestions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9038—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/907—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/907—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/908—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/101—Collaborative creation, e.g. joint development of products or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/103—Workflow collaboration or project management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q50/00—Systems or methods specially adapted for specific business sectors, e.g. utilities or tourism
- G06Q50/01—Social networking
Abstract
A method of notifying a user of a cloud-based content management platform of documents includes identifying a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user; identifying one or more target documents from a first set of documents of a user based on an amount of topicality overlap between the respective documents and a currently working set of documents of the user, a number of viewing events for the respective documents, and a number of collaboration events associated with the respective documents, wherein the currently working set of documents of the user includes documents accessed by the user via the cloud-based content management platform within a last predetermined time period; and providing, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
Description
Technical Field
Aspects and embodiments of the present disclosure relate to cloud-based content management platforms, and more particularly, to document discovery notifications from cloud-based content management platforms.
Background
A cloud-based content management platform provides cloud storage for storing documents and editing applications (e.g., word processors, presentations, and spreadsheet applications) for collaborative editing of documents. Thus, users of the cloud-based content management platform can collaborate over a network to create and store documents in cloud storage and to edit, comment on, or share documents. The user will first access documents associated with the user account via a home screen provided by the cloud-based content management platform. From the home screen, the user can locate one of the documents and access the located document. The cloud-based content management platform can additionally provide one or more applications, such as online calendar, email, and messenger applications. Thus, users can schedule meetings for projects and communicate with each other via email or instant messaging to facilitate online collaboration.
Disclosure of Invention
The following presents a simplified summary of the disclosure in order to provide a basic understanding of some aspects of the disclosure. This summary is not an extensive overview of the disclosure. It is intended to neither identify key or critical elements of the disclosure nor delineate any scope of particular embodiments of the disclosure or any scope of the claims. Its sole purpose is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.
In some implementations, a system and method for notifying a user of a cloud-based content management platform of a change in status of an electronic document associated with the user or a comment made in an electronic document associated with the user is disclosed. In an embodiment, a set of reviews associated with a document accessed by the user via the cloud-based content management platform is determined. The set of comments includes one or more comments added to each document by other users within the last predetermined time period. Selecting one or more comments from the set of comments to notify the user. The selection is based on the user's interaction with a comment topic associated with each comment from the set of comments and the characteristics of the comment topic. The comment topic is a group of a plurality of comments including a first comment and a second comment added in reply to the first comment. Determining one or more documents associated with the one or more selected comments. Providing, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform. The GUI identifies the one or more documents. For each identified document, a respective selected comment is associated with the identified document.
When the GUI identifying the one or more electronic documents and corresponding selected comments is presented to the user, the user may provide, via the GUI, one or more inputs related to one or more of the documents and/or comments identified in the GUI, thereby enabling continued interaction between the user and the documents stored in the cloud-based content management platform.
In some other implementations, a system and method for notifying a cloud-based content management platform of a document is disclosed. A first set of documents is identified. The first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user. Identifying one or more target documents from a first set of documents of a user based on an amount of topicality overlap between the respective documents and a currently working set of documents of the user, a number of viewing events for the respective documents, and a number of collaboration events associated with the respective documents. The set of documents that the user is currently working on includes documents that the user accessed via the cloud-based content management platform within a last predetermined time period. A cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform is provided for presentation to the user. The GUI identifies the one or more target documents.
The present disclosure provides a method of notifying a user of a cloud-based content management platform of a document. The method may include identifying, by a processor, a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user. The method may include identifying, by the processor, one or more target documents from a first set of documents of a user based on an amount of topicality overlap between the respective document and a currently working set of documents of the user, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the currently working set of documents of the user includes documents accessed by the user via the cloud-based content management platform within a most recent predetermined time period. The method may include providing, by the processor, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
Identifying the first set of documents may include determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators; determining a third set of documents that are related to documents in the user's currently working set of documents; generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user. Determining the second set of documents associated with the one or more collaborators based on recent events of the one or more collaborators of the user and importance weights assigned to the one or more collaborators may include determining the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provided at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform for a predetermined period of time; determining an importance weight for each collaborator in a social network associated with the cloud-based content management platform based on the importance of the collaborator; and determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators. Determining the third set of documents that are relevant to documents in the user's currently working set of documents may include: identifying key text for each document in the user's currently working set of documents; and determining the third set of documents that includes one or more documents having the key text. At least one of the second set of documents or the third set of documents may include one or more documents that have not been accessed by the user.
Generating the first set of documents may include at least one of: eliminating one or more documents that have not been accessed by the user and that have events less than a predetermined number of one or more collaborators; and/or eliminate one or more documents that are not discoverable by a search performed via the cloud-based content management platform. The one or more target documents identifying the user may include at least one of: determining a number of viewing events associated with respective documents of the other users or the one or more collaborators; and/or determining a number of collaborative events in view of a number of interaction events of the user with the respective document, a number of interaction events of the one or more other users with the respective document, and a likelihood of the user performing an interaction event of the one or more other users involved in the respective document, wherein an interaction event is an event generated in response to an event of another user. Identifying the one or more target documents for the user may include: for each document in the first set of documents, applying as input to a machine learning model an amount of topicality overlap between the respective document and a set of documents of the user's current work, a number of viewing events for the respective document, and a number of the collaboration events associated with the respective document; and obtaining an output from the machine learning model, the output indicating a probability of the user being interested in the respective document.
The GUI may include one or more suggestion cards. Each suggestion card may identify a corresponding or each target document. Each suggestion card may include at least one of: title information including a document type and a title of a corresponding document; an image representation of the respective document; an action button providing access to the corresponding document; and/or reason text describing a reason for identifying the corresponding document.
When the GUI identifying the one or more electronic documents and corresponding selected comments is presented to the user, the user may provide, via the GUI, one or more inputs related to one or more of the documents and/or comments identified in the GUI. In this manner, the GUI may enable continuous interaction between the user and the documents stored in the cloud-based content management platform.
The present disclosure provides a system comprising a memory device and a processing device operatively coupled to the memory device. The processing device may be configured to identify a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user. The processing device may be configured to identify one or more target documents from the first set of documents of the user based on an amount of topical overlap between a respective document and a user's currently working set of documents, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the user's currently working set of documents includes documents accessed by the user via the cloud-based content management platform within a recent predetermined time period. The processing device may be configured to present to the user a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
The processing device may be configured such that, identifying the first set of documents, the processing device is configured to: determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators; determining a third set of documents that are related to documents in the user's currently working set of documents; and generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user.
The processing device may be configured such that, based on recent events of one or more collaborators of the user and importance weights assigned to the one or more collaborators, determining the second set of documents associated with the one or more collaborators, the processing device may be configured to determine the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provided at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform within a predetermined time period; determining an importance weight for each collaborator based on the importance of the respective collaborator in a social network associated with the cloud-based content management platform; and determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators.
The processing device may be configured such that, determining the third set of documents that are relevant to documents in the user's currently working set of documents, the processing device may be configured to identify key text for each document in the user's currently working set of documents; and determining the third set of documents that includes one or more documents having the key text. The processing device may be configured such that, identifying the one or more target documents of the user, the processing device may be configured to at least one of: determining a number of viewing events associated with respective documents of the other users or the one or more collaborators; or determining the number of collaboration events in view of the number of interaction events of the user with the respective document, the number of interaction events of the one or more other users with the respective document, and the likelihood of the user performing an interaction event of one or more other users involved in the respective document, wherein an interaction event is an event generated in response to an event of another user.
The GUI may include one or more suggestion cards, each suggestion card may identify each or a corresponding target document. Each suggestion card may include at least one of: title information including a document type and a title of a corresponding document; an image representation of the respective document; an action button providing access to the corresponding document; and/or reason text describing a reason for identifying the corresponding document.
The present disclosure provides a non-transitory computer-readable medium storing instructions that, when executed, cause a processing device to: identifying a first set of documents, wherein the first set of documents is hosted by the cloud-based content management hosting platform and does not include one or more documents recently opened by the user; identifying one or more target documents from the first set of documents of the user based on an amount of topicality overlap between a respective document and a currently working set of documents of the user, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the currently working set of documents of the user includes documents accessed by the user via the cloud-based content management platform within a last predetermined time period; and providing, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
The instructions, when executed, may cause the processing device to: determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and the weight importance assigned to the one or more collaborators; determining a third set of documents related to documents in the user's currently working set of documents; and generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user.
The instructions, when executed, to determine the second set of documents associated with the one or more collaborators based on recent events of the one or more collaborators of the user and importance weights assigned to the one or more collaborators, may cause the processing device to: determining the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provide at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform within a predetermined time period; determining an importance weight for each collaborator in a social network associated with the cloud-based content management platform based on the importance of the collaborator; and determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators.
The instructions, when executed, determine the third set of documents that relate to documents in the user's currently working set of documents, cause the processing device to: identifying key text for each document in the user's currently working set of documents; and determining the third set of documents that includes one or more documents having the key text.
The GUI may comprise one or more suggestion cards, each suggestion card identifying a respective target document or each target document. Each suggestion card may include at least one of: title information including a document type and a title of a corresponding document; and an image representation of the respective document; an action button providing access to the corresponding document; and/or reason text describing a reason for identifying the corresponding document.
Drawings
Aspects and embodiments of the present disclosure will be understood more fully from the detailed description given below and from the accompanying drawings of aspects and embodiments of the disclosure, which, however, should not be taken to limit the disclosure to the specific aspects or embodiments, but are for explanation and understanding only.
Fig. 1 illustrates an example of a system architecture implementing some aspects of the present disclosure.
FIG. 2 illustrates an example user interface of a suggestion card notifying a user of an electronic document and/or events or other state changes of the electronic document.
FIG. 3 illustrates a flow diagram of aspects of a method for selecting documents to notify a user of a cloud-based content management platform according to one embodiment of the present disclosure.
FIG. 4 depicts a flow diagram of aspects of a method for determining a document associated with a selected one or more comments in accordance with one implementation of the present disclosure.
FIG. 5 depicts a flow diagram of aspects of a method for predicting documents for users of a cloud-based content management platform according to another embodiment of the present disclosure.
FIG. 6 depicts a flow diagram of aspects of a method for predicting documents for a user based on multiple predictive context models, according to one embodiment of the present disclosure.
FIG. 7 illustrates a flow diagram of aspects of a method for selecting documents for suggestion according to one embodiment of the present disclosure.
Fig. 8 depicts a block diagram of an example computing system operating in accordance with one or more aspects of the present disclosure.
Detailed Description
The cloud-based content management platform may provide, among other things, cloud storage for electronic documents and editing applications such as word processors, presentations, and spreadsheet applications. A user may log into the cloud-based content management platform and be presented with a home screen of the cloud-based content management platform. A home screen, as used herein, refers to a Graphical User Interface (GUI) that lists documents stored in cloud storage that are associated with a user account. Cloud storage, as used herein, refers to a repository of online electronic documents associated with a user account. Such documents may include documents owned or created by, and/or shared with, the user and/or one or more groups of users of which the user is a member. The user may select a document from the home screen and access the document using an editing application provided by the cloud-based content management platform. Accessing a document as used herein refers to, among other things, opening, viewing, editing, or adding comments to the document. A comment, as used herein, refers to, among other things, a post added to a particular portion of a document, a post added in association with a suggested edit on a portion of a document, or a post that assigns a task to a user in association with a particular portion of a document.
The number of documents stored in cloud storage has grown exponentially as more users collaborate via a cloud-based content management platform. Accordingly, it may take a significant amount of time for a user to locate and retrieve documents of interest to the user from the home screen of the cloud-based content management platform. Further, the user may even forget the documents that the user has previously opened or needed, or the user may not be fully aware of all the documents that are available to the user. This is especially acute in collaborative work systems where multiple users can potentially create, edit, share, or comment on documents, and the number of documents for a cloud-based content management platform can be so large that users are only aware that a small percentage of the documents are available.
Aspects and embodiments of the present disclosure address the above deficiencies, among others, by predicting documents that may be of interest to a user among documents associated with a user account. Documents associated with a user account refer to documents that may be accessed and/or viewed by a user. The prediction technology of the present disclosure can predict documents containing comment topics that may be of interest to a user due to comments recently added to the comment topics. The prediction technique may take into account user interaction with the comment topic and characteristics of the comment topic. Moreover, the prediction techniques of the present disclosure may predict unexpected documents. Unexpected documents, as used herein, refer to documents that have not been recently visited or viewed by a user (i.e., that the user may not know (e.g., because the user has not previously visited the document)) or that are no longer remembered (e.g., because it has been longer than a determined or predetermined period of time since the user last interacted with the document) and that may be of interest to the user. The unexpected document may also be referred to as a target document. To predict target or unexpected documents, the prediction techniques may consider the relevance level of the document to the document at which the user is working, the popularity level of the document among other users, and/or the level of collaboration involving the document. The prediction technique may be implemented using, among other things, heuristic methods or machine learning methods.
Aspects and embodiments of the present disclosure also address the above deficiencies by notifying a user of a predicted document using a GUI component that explains the cause of the notification and provides quick access to the document. The notification techniques of this disclosure may produce a suggestion card (a GUI component that presents information about the respective document) for each predicted document. The notification technique may involve extracting a predicted reason and inserting the reason into a recommendation card. Additionally, notification techniques may provide a user with user interface components, such as smart buttons, for quick access to documents.
Accordingly, aspects and embodiments of the present disclosure provide users with quick access to documents that may be of interest to the users. As a result, the need for time consuming searches is eliminated, thereby reducing processing and network resources for the searches.
A technical problem that may be solved by aspects and embodiments of the present disclosure is that the continuing growth in the number of documents accessible to users via a cloud-based content management platform over computer networks has made the process of locating and retrieving documents more resource intensive. For example, locating a particular document in cloud storage may involve a user manually reviewing a large corpus of documents until a desired document is found. This may result in inefficient use of network resources and processing resources. For example, network resources may be consumed by transferring each document in the corpus from cloud storage to the user device, whereupon processing resources may be consumed by opening each document at the user device to allow manual review by the user. This may be a particular problem in the case of mobile user equipment having limited network resources and/or processing resources.
Another technical problem is that the content of a document is not fixed, but can change over time, so that users, even if they are aware of the existence of a particular document, cannot be sure what the document contains, and whether the content of the document may be of interest to the user. Even if the user has previously accessed the document, they do not know whether the current content of the document is the same as the content when they last accessed the document. This means that users may have to retrieve and access the document to see if the content of the document has been modified and the user is still interested in the current content since their last access to the document, and this again requires the use of network resources and processing resources (which are wasted if, for example, there is no significant change in the document since the user last accessed the document).
To address the above-identified technical problem, aspects and embodiments of the present disclosure may inform a user about documents that may be of interest to the user without requiring explicit action by the user. This may significantly reduce the network resources and processing resources required to locate and retrieve documents from cloud storage. Also, this may provide notifications to the user regarding the status of electronic documents stored, for example, in cloud storage and/or regarding status changes. Alternatively or additionally, aspects and embodiments of the present disclosure may provide a limited number of notifications (i.e., advice cards), thereby reducing the amount of network resources and processing resources required to send the notifications. Alternatively or additionally, aspects and embodiments of the present disclosure may allow users to more easily and reliably locate particular documents of interest, thereby significantly reducing network bandwidth and processing resources required when retrieving documents from cloud-based storage.
Aspects and embodiments of the present disclosure may notify a user of information about a document only to the extent that the document is predicted to be likely to be of interest to the user. This may reduce the resources required to send notifications, and may result in a more user-friendly or less intrusive user interface, at least compared to the case where each document event is notified to the user.
Accordingly, aspects and embodiments of the present disclosure reduce or save the computational resources and network bandwidth required for document searching, while providing users with a wider range of documents than conventional search engines are capable of providing.
Fig. 1 illustrates an example of a system architecture 100 implementing some aspects of the present disclosure.
The system architecture 100 includes a cloud-based environment 110 connected to user devices 120A-120Z via a network 130. The cloud-based environment 110 refers to a collection of physical machines hosting applications that provide one or more services (e.g., content management) to a plurality of user devices 120A-120Z via a network 130. The network 130 may be a public network (e.g., the internet), a private network (e.g., a Local Area Network (LAN) or a Wide Area Network (WAN)), or a combination thereof. The network 130 may include a wireless infrastructure that may be provided by one or more wireless communication systems, such as a wireless fidelity (WiFi) hotspot connected to the network 130 and/or a wireless carrier system that can be implemented using various data processing equipment, communication towers, and the like. Additionally or alternatively, the network 130 may include a wired infrastructure (e.g., ethernet).
Cloud-based environment 110 may include server 112 and data store 114. Data store 114 may be separate from server 112 and communicatively coupled to server 112, or data store 114 may be part of server 112. In some implementations, the data store 114 can be included as part of the user devices 120A-120Z. Data store 114 may include cloud storage for storing documents for each user. Data store 114 may store metadata associated with documents stored in cloud storage. Such metadata may include an access control list of users (e.g., who the creator or owner is, who can view and edit, who has shared the document with), and events associated with the document. An event, as used herein, refers to a user activity (e.g., an open event, a view event, an edit event, or a comment event) that results from accessing a document. For each event, the data store 114 may store metadata associated with the event, such as the type of event, the creator of the event, the content, and a timestamp. For a comment event, the data store 114 may additionally store information about the associated comment topic. A comment topic is a set of multiple comments having a first comment and a second comment added as a reply to the first comment. Some examples of such information include the number of comments in a topic, the user associated with each comment in a comment topic, the status of the comment topic (e.g., open, closed, if open, how long) and the relationship between comments in the comment topic (e.g., which comment is the initial comment that started the comment topic and which comment is a reply to the comment). The data store 114 may also store predictive scene models and their outputs, as explained in detail below with respect to the prediction engine 116.
The server 112 may include a physical machine (e.g., a server machine, a desktop computer, etc.) that includes one or more processing devices communicatively coupled to memory devices and input/output (I/O) devices. The server 112 may host a cloud-based content management platform 115 and may include one or more processing devices. In an alternative embodiment, the cloud-based content management platform 115 may be hosted by the user devices 120A-120Z (e.g., as standalone applications) and operate as peers in a peer-to-peer environment. In other alternative implementations, applications on the user devices 120A-120Z may interact with the cloud-based content management platform 115 and may perform some of the functionality of the content management platform 115.
The cloud-based content management platform 115 may enable a user to access documents and view the home screen User Interfaces (UIs) of the cloud-based content management platform as respective UIs 124A-124Z. Additionally, in some embodiments, cloud-based content management platform 115 may provide UIs 124A-124Z, which include suggestion card 200 to inform a user of documents of interest to the user. The cloud-based content management platform 115 may further provide a suggestion card 200 to enable a user to quickly access a document or perform an action on a document without opening the document.
In an implementation, the UIs 124A-124Z of the cloud-based content management platform 115 may be web pages rendered by a web browser and displayed in a web browser window on the user devices 120A-120Z. In another embodiment, the UIs 124A-124Z may be provided by a mobile application or a desktop application. For example, the UIs 124A-124Z may be displayed by native applications executing on the user devices 120A-120Z. The native application may be separate from the web browser.
The server 112 includes a prediction engine 116 to predict documents to be suggested to the user and to notify the user of the documents. In an embodiment, the prediction engine 116 may use a predictive context model to determine documents to suggest to the user. The prediction engine 116 may employ heuristic methods or machine learning methods to implement the predictive scenario model, as discussed in detail with respect to fig. 3-5.
The predictive scenario model may be a model for predicting notified documents or events that may be of interest to the user. The prediction engine 116 may utilize multiple prediction scenario models in predicting which document or event the user should be notified of. Some examples of predictive scene models may be related to regular, target, or unexpected document findings and/or comments. Each predictive scene model may be customized to a particular scene. For example, a predictive context model based on conventional document discovery may be designed to predict documents in the context of a user routinely accessing documents via the cloud-based content management platform 115. In this case, the prediction engine 116 may obtain output from a prediction schema model based on conventional document discovery, with a higher probability of documents that are frequently accessed and recently accessed by the user compared to other documents that are not frequently accessed and recently accessed by the user. The predictive context model based on target or unexpected findings may operate in scenarios where the user is unaware or forgets documents that may be helpful to the user (i.e., target or unexpected documents) because there are too many documents available via the cloud-based content management platform 115. Documents that may be helpful to a user may include documents that are related to the document that the user is currently working on, that the user's collaborators have recently worked on, and that are popular among other users. The use of a predictive scenario model based on object or unexpected findings by the prediction engine 116 is further described below with respect to FIG. 5.
Additionally, the comment-based predictive context model may operate in the context of a user interacting with comments from a particular comment topic (e.g., a comment topic that the user is actively involved in (e.g., a comment topic that the user has created, or the user has subscribed to replies), a comment topic in which many users are involved). The use of this predictive scenario model by the prediction engine 116 based on comments is further described below with respect to fig. 3-4. Additionally, there may be predictive context models for scenarios in which a user responds to email, chat, or calendar events that mention the user or from other users with whom the user frequently interacts. In such a scenario, the predictive context model may rank calendar events for meetings with other users with whom the user frequently interacts higher than other calendar events open to the ordinary user of the cloud-based content management platform 115.
The prediction engine 116 may provide input data to a predictive scene model and obtain output data from the model. The input data may vary among the predictive scene models, as further described with respect to fig. 3-5. As will be discussed in more detail below, the input to the predictive context model may be data from various signals associated with the document that represent the particular context on which the model is based. The output data of the predictive scene model may be a predictive scene score representing a probability that the user is interested in the document according to the corresponding scene. If suggested, the prediction scheme score may also indicate how the user is likely to interact with the document. Where multiple predictive context models are used, the prediction engine 116 may obtain a predictive context score from each model and determine an overall document score based on the predictive scores from different types of predictive context models as described in detail below with respect to fig. 7. The prediction engine 116 may then use the overall document score to determine one or more documents for notification.
In some implementations, the prediction engine 116 can generate a suggestion card for each document selected for the notification based on the overall document score and/or the prediction score (e.g., see fig. 2). The suggestion card may include reason text 209 describing a reason for notifying the user of the document and one or more smart buttons 210(210A, 210B) that enable the user to quickly access the document.
User devices 120A-120Z may include one or more processing devices communicatively coupled to memory devices and I/O devices. The user devices 120A-120Z may be desktop computers, laptop computers, tablet computers, mobile phones (e.g., smart phones), or any suitable computing device. As discussed above, the user devices 120A-120Z may each include a web browser and/or a client application (e.g., a mobile application or a desktop application). The user may view the suggestion card 200 or a cloud-stored home screen including the suggestion card 200 via a web browser or client application using the cloud-based content management platform 115. For example, once the user logs into the cloud storage, the user may be presented with a suggestion card 200 to make notifications on the home screen. The user may select the suggestion card 200 to access the document represented by the suggestion card 200, or select a smart button (e.g., 210A or 210B of FIG. 2) to respond to events associated with the document directly from the suggestion card 200 without opening the document. In this way, the user device 120A associated with the user may send a request to display the advisory card 200 and communicate the user's selection. In general, the functions described in one embodiment as being performed by the cloud-based content management platform 115 and/or prediction engine 116 may also be performed on the user devices 120A-120Z in other embodiments, where appropriate. In addition, the functionality attributed to a particular component may be performed by different or multiple components operating together.
Fig. 2 illustrates an example of a user interface presenting a suggestion card 200 to notify a user of events and/or other state changes of an electronic document and/or electronic documents stored in a cloud storage of the user. The cloud storage is hosted by the cloud-based content management platform 115. In one implementation, the suggestion card 200 may be presented to the user as part of a home screen of the cloud-based content management platform. Such a home screen may be provided to the user after the user successfully logs into the cloud storage of the cloud-based content management platform 115.
In some embodiments, the recommendation card 200 may take the form of a card (i.e., a box similar to a card), as shown in fig. 2, in addition to other possible forms such as a list or table. The suggestion card 200 represents a document and events associated with the document. The prediction engine 116 may build a suggestion card 200 to inform the user of suggestions for documents predicted to be of interest to the user. The recommendation card 200 may allow a user to quickly access documents represented in the recommendation card 200. In other embodiments, the prediction engine 116 may constitute a suggestion card 200 to notify the user and enable the user to respond to events represented by the suggestion card 200. When the prediction engine 116 uses a predictive context model, the prediction engine 116 may select the document with the highest predictive context score to generate the suggestion card 200. Where the prediction engine 116 uses multiple prediction scenario models, the prediction engine 116 may determine which documents to notify the user based on the overall document score, which is determined using, for example, the method shown and described with respect to fig. 7, which incorporates all available prediction scheme scores for the documents. The prediction engine 116 may limit the number of suggestion cards 200 to be presented to the user. In an embodiment, the prediction engine 116 may constrain the number and location of suggestion cards 200 based on a particular type of predictive scene model. For example, prediction engine 116 may take up at most one document from the predictive context model based on objective or unexpected findings and place such document only after the third location. The prediction engine 116 may also incorporate temporal diversity (e.g., showing that some documents are now open and some documents are open within the next few hours when the advice card is presented). A detailed description of various embodiments of a method for selecting documents for suggestion or notification to a user is described below with reference to FIGS. 3-7. As illustrated in FIG. 2, the suggestion card 200 includes a plurality of portions, such as a document information portion 202, a document thumbnail portion 204, and an event portion 206.
The event section 206 may include details of the event. In some implementations, the prediction engine 116 can add information of other users associated with the event (e.g., name and profile pictures), the content of the event, and reason text describing the reason the user was notified of the event and/or document. For example, in FIG. 2, the events section 206 includes a profile picture and content that creates comment events and comment events- "This is looking good + SimmonSmith, could you take a look at This while you have a minute? (this looks nice, + SimoSmith, do you have time you can see it?). Under the name "Ben DuPree", the event section 206 further includes a reason text ("Suggested by you creating a comment topic for the comment") 209 and a timestamp of the comment event.
In an embodiment, the prediction engine 116 may determine the event and reason text based on the data used as input to the predictive context model that contributes most to the output of the model (i.e., the predictive context score). For example, the prediction engine 116 may use a predictive context model based on comments that employ data that specifies whether a user has created a comment topic associated with a comment event. The prediction engine 116 may then compose the event section 206 based on the information from the reviews. In addition, if the prediction engine 116 determines that the criterion scores the highest of the other criteria, the prediction engine 116 may compose a reason text, such as "surveyed captured you rated the comment thread of the comment," to explain why the user is notified about the comment event. In another example, the prediction engine 116 may use a prediction scheme model based on objective or unexpected findings that utilize data specifying the topicality of the document and the amount of document set overlap that the user is currently working on. Topical overlap may represent a metric or similarity score of how a document relates to the set of documents that the user is currently working on, and may be determined, for example, according to a predefined set of criteria, such as the level of overlap, the incidence of words or phrases in a stored database identified as being related to a common field or topic, Jaccard similarity, cosine distance, euclidean distance, and the like.
If the prediction engine 116 determines that the score from the criterion is the highest among the other criteria, the prediction engine 116 may compose a reason text, such as "Suggested based on a document for Project X". In another embodiment, the prediction engine 116 may compose the reason text based on the latest events of the document. For example, if the latest event associated with a document is a calendar event to which the document has been attached, the prediction engine 116 may take "12: 30pm today" as the scheduled meeting time for the calendar text as the reason text.
The prediction engine 116 may determine the cause text based on a predictive context model that causes the document to be selected for notification. In an embodiment, when the prediction engine 116 uses multiple prediction context models and the document has a high overall document score from fig. 7 and the contribution to the overall document score from a particular prediction context model is greatest, then the prediction engine 116 may mention the description of a particular prediction scheme model in a reason text such as "surveyed based on a continued relevance discovery".
The event section 206 may further include one or more smart buttons 210(210A, 210B) to enable a user to quickly access documents or respond to events suggested to the user via the suggestion card 200. In an embodiment, the prediction engine 116 may include an open button (enabling a user to open a document) or a preview button (enabling a user to preview a document without opening the document using an application of the cloud-based content management platform 115) in the event portion 206. The prediction engine 116 may also enable the user to open a document for the suggestion card 200 in response to detecting a user selection (e.g., double-click) of any portion of the suggestion card 200. In another embodiment, the prediction engine 116 may select one or more smart buttons 210(210A, 210B) based on the type of event included in the suggestion card 200. For example, if the event that the user is notified via the advisory card 200 is a comment event, the prediction engine 116 may select either the reply smart button 210A or the resolve smart button 210B. The prediction engine 116 may enable the user to directly reply to a commented event within the suggestion card 200 without opening the document via the reply smart button 210A. In an embodiment, in response to the prediction engine 116 detecting the user's selection of the reply smart button 210A, the prediction engine 116 may provide a text box within the suggestion card 200 for the user to enter the content of the reply and an add button to add the reply content to the respective comment topic.
Additionally, the prediction engine 116 may enable the user to turn off the comment topics from the suggestion card 200 without requiring the user to open the document. In another example, if the user is notified of an email or chat event via the suggestion card 200, the prediction engine 116 may include a reply button and a locate item button. The locate item button may enable the user to find an email or chat message that is being notified to the user by presenting a highlighted email inbox or a highlighted chat window of chat messages. Thus, the prediction engine 116 may generate any other smart button that provides a shortcut to the user's response to the event described in the event section 206. In some implementations, the prediction engine 116 can limit the number of smart buttons 210 of a particular type (210A, 210B) (e.g., up to one calendar event action can be included in the last set of suggestion cards to be presented).
FIG. 3 illustrates a flow diagram of aspects of a method 300 for predicting or selecting documents for notifying a user of the cloud-based content management platform 115 according to one embodiment of the present disclosure.
The method 300 may be performed by the prediction engine 116 of fig. 1. In another embodiment, the method 300 may be performed by a client application executed by one or more processing devices of the user device 120. The method 300 may be performed for each user of the cloud-based content management platform 115. Further, the method 300 may be performed when a user requests the server 112 to access the user's cloud storage or home screen via the cloud-based content management platform 115. In some implementations, the method 300 may be performed to notify a user of comments made in a document associated with the user via the cloud-based content management platform 115 using a comment-based predictive context model.
For simplicity of explanation, the methodologies are depicted and described herein as a series of acts. However, acts in accordance with the present disclosure may occur in various orders and/or concurrently, and other acts are not presented and described herein at the same time. Moreover, not all illustrated acts may be required to implement a methodology in accordance with the disclosed subject matter. Further, those skilled in the art will understand and appreciate that the methodologies could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally, it should be appreciated that the methodologies disclosed herein are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computing devices. The term "article of manufacture" as used herein is intended to encompass a computer program accessible from any computer-readable device or storage media.
At block 302, the prediction engine 116 may determine a set of reviews associated with a document accessed by a user via the cloud-based content management platform 115. The prediction engine 116 may identify documents that have been shared with the user or documents created by the user as documents to which the user has access. To identify such documents, prediction engine 116 may query an access control list for the document that lists the user as a creator, viewer, editor, or subscriber (i.e., a user shared with the document). From the identified documents, the prediction engine 116 may determine comments that other users add to each document. For each comment, prediction engine 116 may determine information related to the respective document, such as a timestamp and the user that created the respective comment. The prediction engine 116 may then compile a set of reviews that include reviews (i.e., recent reviews) added by other users to the documents accessed by the user within the recent predetermined time period. For example, a user may be working on multiple projects and collaborating via a document using the cloud-based content management platform 115. In this case, when a user logs into the cloud storage via the cloud-based content management platform 115, the prediction engine 116 may determine documents that the user has accessed (e.g., documents that the user is working on). The prediction engine 116 may then identify reviews made by collaborators on the document, and among those reviews, determine reviews made within the last two days. In this way, the prediction engine 116 can determine candidates for comments in which the user may be interested in responding.
At block 304, the prediction engine 116 may select one or more reviews from the set of reviews determined at block 302 to notify the user based on information about the review topic to which the respective review under consideration pertains. The comment topic is a group of multiple comments having a first comment and a second comment added in response to the first comment. The prediction engine 116 may select comments from the collection based on user interactions with the comment topics associated with each comment. In one implementation, the prediction engine 116 may identify, for each comment in the set of comments from block 302, a comment topic associated with the respective comment. The prediction engine 116 may then determine the user's interactions with the comment topics in order to select comments to notify the user. For example, in some implementations, the prediction engine 116 can determine whether the user has added an initial comment in a comment topic (i.e., started a comment on a comment topic). The prediction engine 116 may also determine whether the user has added any comments to the comment topic as a reply to the initial comment in the comment topic or any other comments in the comment topic.
At block 304, the prediction engine 116 may further perform selection of comments for the notification based on characteristics of the comment topics associated with each comment. The characteristics of the comment topic can be measured in various ways. Some examples of characteristics of a comment topic are the status of the comment topic (whether the comment topic is on or off), the number of comments included in the comment topic, the number of different users involved in the comment topic, the proportion of comments in the comment topic that a user adds or closes, the proportion of comments in the comment topic that other users add, and the length of the period of time that the comment topic remains on.
The prediction engine 116 may further perform the selection of comments at 304 for notification based on the importance weights assigned to each user (i.e., any other user) that added or generated the comments. The prediction engine 116 may determine importance weights based on the importance of respective users in a social network associated with the cloud-based content management platform 115. Some examples of social networks may be, among others, an organizational chart of users of the cloud-based content management platform 115 (i.e., higher user weights associated with higher positions in the chart), a collaborator chart based on frequency and recency from the user response history (i.e., higher weights for more frequent collaborators), an affinity chart including affinity scores (e.g., similarity measure based on affinity) of other users (i.e., higher weights for users with higher affinity scores), and a reputation chart (i.e., higher weights for more popular users).
Upon selecting a comment at block 304, the prediction engine 116 may determine a comment score for each comment from the set of block 302 based on the user's interaction with the comment topic and the characteristics of the comment topic. In another embodiment, the prediction engine 116 may further incorporate an importance weight for each user that adds a respective comment. The comment score may indicate a probability that the user is interested in the respective comment or the document containing the respective comment. The prediction engine 116 may select one or more reviews for notification based on the review score. The prediction engine 116 may use a predictive context model to determine a review score based on the review. The prediction engine 116 may employ heuristic methods or machine learning methods to build the predictive scene model. In a heuristic approach, the prediction engine 116 may apply a weighted sum to the predictive scene model and further normalize the weighted sum to be between 0 and 1. The prediction engine 116 may assign a weight and a value between 0 and 1 to each criterion, which represents the user's interaction with and characteristics of the comment topic. The prediction engine 116 can update the assigned weights and values to better reflect the user's interests.
In a machine learning approach, the prediction engine 116 may train a machine learning model. In the following, the comment-based predictive scene model may also be referred to as a machine learning model. The prediction engine 116 may include a training engine capable of training a predictive scene model. The predictive scenario model may be a machine learning model corresponding to a model artifact created by a training engine using training data that includes training inputs and corresponding target outputs (i.e., correct answers to the respective training inputs). In some implementations, the prediction engine 116 may generate training data that includes one or more training inputs and one or more target outputs. For comments added by other users to a document involving the user, the training input may include data indicative of the user's interactions with the comment topic and characteristics of the comment topic. In another embodiment, the target input may additionally include data indicating importance weights of other users who added comments. The targeted output may include responses, such as replies to the comments, closing the comment topics to which the respective comments pertain, accepting or rejecting suggested edits associated with the comments, marking the to-do task assigned in the comments as completed by the user, or no response. In another embodiment, the training data may not be specific to a particular user, but rather specific to various users of the cloud-based content management platform 115.
The training engine may find patterns in the training data that map the training inputs to the target outputs (i.e., answers to predict) and provide a machine learning model that captures these patterns. The machine learning model may consist of, for example, a single level of linear or nonlinear operation (e.g., support vector machine [ SVM ]), or may be a deep network (i.e., a machine learning model consisting of multiple levels of nonlinear operation). An example of a deep network is a neural network with one or more hidden layers, and such a machine learning model may be trained by adjusting weights of the neural network, e.g., according to a back-propagation learning algorithm or the like. For convenience, the remainder of this disclosure will also be referred to as a neural network, although some embodiments may employ SVMs or other types of learning machines instead of or in addition to neural networks. Once the prediction engine 116 determines that the machine learning model is ready for use, the prediction engine 116 may provide data for the user's interaction with and characteristics of the commentary topics as input to the trained machine learning model (i.e., the predictive scene model). The prediction engine 116 may then obtain an output from the trained machine learning model that indicates a likelihood that the user will be interested in a particular comment from the comment topic, e.g., as a comment score having a numerical value between 0 and 1.
In some implementations, at block 304, the prediction engine 116 may further consider information about the documents associated with the comments, the comments themselves, and user activity in determining the comment score. Some examples of information about the document associated with each comment from the set of block 302 may include the number of users involved in the respective document, the number of users having different types of access to the respective document, recency of events in the document, recency of particular types of events (e.g., edits, views, or comments), a proportion of topics of comments in the document that are started or closed by the user. For information about comments, the prediction engine 116 may further consider the length of the comment text and whether the comment is for the user by explicitly mentioning the user in the comment text.
After obtaining the comment score, the prediction engine 116 may rank each comment in the set of comments from block 302 based on the comment score. In one implementation, the prediction engine 116 may assign a higher comment score with a higher ranking to a comment than a comment with a lower comment score. The prediction engine 116 may then select a subset of the reviews from the set of reviews based on the rankings.
At block 306, prediction engine 116 may determine one or more documents associated with the one or more selected comments from block 304. An embodiment of the determination document of block 306 will be described in detail below with respect to FIG. 4.
At block 308, the prediction engine 116 may provide a GUI for presentation to the user based on the user account using the cloud-based content management platform 115. The user account may define which documents stored on the cloud-based content management platform 115 are associated with the user (the user has access to). The storage of such documents is referred to herein as the cloud storage of the user. The prediction engine 116 may provide a GUI when a user logs into the cloud-based content management platform 115. In another implementation, the prediction engine 116 may provide the GUI as part of a home screen of the cloud-based content management platform. The GUI may identify documents associated with the selected comments. For each document identified in the GUI, the GUI may further identify a respective selected comment associated with the respective document. If multiple selected reviews are associated with a document, prediction engine 116 may select the most recent review or the review with the highest ranking from the multiple reviews. In another implementation, the prediction engine 116 may determine the comment with the highest rank from the comment topic with the highest rank among the other comment topics in the document. The ranking of the comment topics will be described in detail below with respect to fig. 4.
In some implementations, the GUI may include one or more of the suggested cards 200 of fig. 2 to identify documents and comments. The suggestion card may identify a document and comments associated with the document, as described in detail above with respect to FIG. 2. For example, the suggestion card 200 may include header information for a document, such as a document type and title of the document in the document information portion 202, an image representation (e.g., thumbnail) of the document in the document thumbnail portion 204, and one or more smart buttons 210(210A, 210B) for replying to comments from the suggestion card without opening the document, another one or more smart buttons 210(210A, 210B) for closing comments from the suggestion card without opening the document, text for the content of the comment, and text describing a reason for selecting the corresponding comment in the event portion 206.
Thus, when the GUI identifying the one or more electronic documents and corresponding selected comments is presented to the user, the user may provide, via the GUI (e.g., via the smart buttons 210A, 210B), one or more inputs related to one or more of the documents and/or comments identified in the GUI. This enables interaction between the user and documents stored in the cloud storage via the cloud-based content management platform 115.
FIG. 4 depicts a flow diagram of aspects of a method 400 for determining, at block 306 of FIG. 3, a document associated with the comment selected at block 304 of FIG. 3 in accordance with one implementation of the present disclosure. The method 400 may be performed using a comment-based predictive scene model.
At block 402, the prediction engine 116 may identify a set of documents associated with at least one of the comments selected at block 304 of fig. 3. Prediction engine 116 may query data store 114 for documents containing any comments selected at block 304 of fig. 3.
Once the documents have been identified, prediction engine 116 may determine a document score for each document based on the comment scores of the comments selected from block 304 at block 404. The document score may indicate a probability that the user may be interested in interacting with the document. In an embodiment, the prediction engine 116 may assign the highest document score to the document with the comment having the highest comment score according to a predictive context model. In another example where a document is associated with multiple comments selected from block 304 and the multiple comments may belong to different comment topics in the document, the prediction engine 116 may identify a set of comment topics from each document, where each comment topic is associated with at least one of the selected comments from block 304. The prediction engine 116 may then determine a comment topic score for each comment topic based on the comment score of the selected comment associated with the comment topic. The comment topic score may indicate a probability that the user is interested in the comment topic. In one implementation, the prediction engine 116 may use a weighted sum as a predictive scene model based on the reviews to calculate a review topic score. In another implementation, the prediction engine 116 may assume each comment score as an independent event according to a comment-based predictive scenario model and determine the probability of an independent event as a comment topic score. Once the prediction engine 116 determines the comment topic score for the comment topic in each document, the prediction engine 116 may determine the document score for each document based on a weighted sum of the comment topic scores as a comment-based prediction scheme model.
At block 406, the prediction engine 116 may rank each document in the set of documents identified at block 402 based on the document score. At block 408, prediction engine 116 may select one or more documents from the set of documents of block 402 based on the ranking. At block 308 of fig. 3, the prediction engine 116 may present the selected document to the user for notification via the suggestion card 200.
FIG. 5 depicts a flow diagram of aspects of a method 500 for predicting documents for users of the cloud-based content management platform 115, according to another embodiment of the present disclosure.
The method 500 may be performed by the prediction engine 116 of fig. 1. In another embodiment, the method 500 may be performed by a client application executed by one or more processing devices of the user device 120. The method 500 may be performed for each user of the cloud-based content management platform 115. Further, the method 500 may be performed when a user requests the server 112 to access the user's cloud storage or home screen via the cloud-based content management platform 115. In some implementations, the method 500 may be performed to notify a user of the cloud-based content management platform 115 of suggested documents via the cloud-based content management platform 115 using a goal-based or unexpected discovery predictive scenario model. In one embodiment, method 500 may be performed concurrently with method 300.
At block 502, the prediction engine 116 may identify a first set of documents. In some implementations, the documents in the first set are hosted by the cloud-based content management platform 115. Further, the first set of documents may exclude documents that have been recently opened by the user. Thus, the prediction engine 116 may select documents of the cloud-based content management platform 115 that the user may not remember or may not open at all as candidates for suggestion. For example, a document that a user may no longer remember may include, for example, at least one of: documents that have expired from the cache or history or may have not taken any action, such as being opened, read, edited, modified, or otherwise interacted with by the user within a determined or predetermined period of time.
In some implementations, the prediction engine 116 can determine the first set of documents based on events (i.e., collaboration levels) from collaborators of the cloud-based content management platform 115. For example, the prediction engine 116 may identify a set of documents associated with collaborators, or documents that collaborators may open, view, or edit. The prediction engine 116 may further determine documents from the document set that have recent events (e.g., open, view, edit, or comment events) by collaborators as candidate documents for suggestion. In an embodiment, the prediction engine 116 may define any user of the cloud-based content management platform 115 that has worked on the same document as a collaborator. For example, the prediction engine 116 may determine the collaborator by identifying another user of the cloud-based content management platform 115 who has performed a viewing, editing, or commenting event with respect to a document shared with the user via the cloud-based content management platform 115 within a predetermined time period. In one embodiment, the prediction engine 116 may determine the first set of documents based on the number of views (i.e., popularity level) of collaborators or any other users. In some implementations, the prediction engine 116 may further identify candidate documents for suggestion based on the importance weights assigned to each collaborator, as described in detail with respect to block 304 of fig. 3.
Upon determining the first set of documents as candidates for suggestion, the prediction engine 116 may further incorporate documents relevant to the documents into the user's currently working set of documents (i.e., relevance level). The prediction engine 116 may determine the set of documents that the user is currently working on. The set of documents that the user is currently working on may include documents that the user accessed via the cloud-based content management platform 115 within the last predetermined period of time. For example, any document that a user has opened, viewed, or edited via the cloud-based content management platform 115 within the past week may be considered a set of documents that the user is currently working on. In another embodiment, the prediction engine 116 may define the user's currently working set of documents using only certain types of access (e.g., editing). Once the prediction engine 116 identifies the user's currently working set of documents, the prediction engine 116 may determine the key text of each document in the user's currently working set. The key text may be indexed and represent topics of document content. The key text may be extracted from the title or content of the corresponding document. The key text may be a word, phrase or sentence. The key text may be manually entered by a user associated with the document or may be automatically generated via the cloud-based content management platform 115. The key text may be used to query the associated documents stored in the data store 114. The prediction engine 116 may query the data store 114 for any documents associated with the key text of the user's currently working set of documents. In this way, the prediction engine 116 may determine a set of documents that are relevant to the documents in the user's currently working set as candidates for suggestion.
In some implementations, the set of documents associated with the collaborators and another set of documents related to the set of the user's current work may include documents that the user has not yet accessed. In this way, the prediction engine 116 may select documents that the user is unaware of because the user has never visited those documents as candidates for suggestion. In an embodiment, prediction engine 116 may filter out the documents that the user has recently opened from these two sets in order to select documents that the user may no longer remember as candidates for suggestion. Thus, the prediction engine 116 may generate a merged set of documents (i.e., the first set of documents) for suggestion by combining the set of documents associated with the collaborators and the set of documents related to the user's currently working set and filtering out the documents that the user has recently opened. In embodiments, the prediction engine 116 may further filter out documents that may not be meaningful to the user because less than a threshold number of collaborators are working on the document. Thus, the prediction engine 116 may exclude documents from the first set that are not accessed by the user and that have events performed by less than a predetermined number of collaborators. In another implementation, the prediction engine 116 may also eliminate documents that are set to be not discoverable by searches performed via the cloud-based content management platform 115 (e.g., via tags in the metadata of the documents).
At block 504, the prediction engine 116 may identify one or more target documents from the first set of documents to suggest to the user. A target or unexpected document may be a document that the user may not be aware of (e.g., because the user may not open, edit, or otherwise interact with) or no longer remembered (e.g., because it took longer than a determined or predetermined period of time since the user last interacted with the document), and may be of interest to the user. In one implementation, the prediction engine 116 may identify the target document based on at least one of a relevance level of the respective document from the set of blocks 502 to a currently working set of documents of the user, a popularity level of the respective document among the users, a collaboration level associated with the respective document, and the like.
The prediction engine 116 may measure the relevance level as the amount of topical overlap between the respective document and the user's currently working set of documents. Topical overlap may represent a metric or similarity score of how a document relates to the user's currently working set of documents, and may be determined, for example, according to a predefined set of criteria, such as overlap level, incidence of words or phrases identified in a stored database related to common fields or topics, Jaccard similarity, cosine distance, euclidean distance, and so forth. The prediction engine 116 may identify, among other things, the topicality of the document from the key text assigned to the document or from particular terms repeated in the document or document content. The prediction engine 116 may then measure how similar the topicality of the respective document is to the documents in the user's currently working set.
The prediction engine 116 may determine the popularity level of a document based on the number of viewing events within a predetermined time period. The viewing event may be by any user, or may be by a user in the user's social network (e.g., collaborator, friend, or group member) via the cloud-based content management platform 115.
In some implementations, the prediction engine 116 may determine a goal score or an unexpected score for each document in the first set from block 502 based on at least one of a relevance level, a popularity level, or a collaboration level. The prediction engine 116 may then use the target score or the unexpected score to select a document with a high score as the target document to suggest to the user. The target score or the unexpected score may indicate a probability that the user is interested in the respective document that may be helpful to the user if the user is not aware of or has forgotten the respective document. The prediction engine 116 may employ heuristic methods or machine learning methods in determining the goal score or the surprise score. In a heuristic approach, the prediction engine 116 may apply a weighted sum as the predictive context model and further normalize the weighted sum to be between 0 and 1. The prediction engine 116 may assign a weight and a numerical value between 0 and 1 to each of the relevance level, the popularity level, and the collaboration level.
In a machine learning approach, the prediction engine 116 may train a machine learning model. In some implementations, the prediction engine 116 may generate training data that includes one or more training inputs and one or more target outputs. In the following, a predictive scene model based on object or unexpected findings may also be referred to as a machine learning model. The training input may include data indicating a relevance level, a popularity level, and/or a collaboration level for each document in the first set from block 502. The target output may include a response by the user, such as opening, viewing, editing, or sharing a response document, or no response. In another implementation, the training data may not be specific to a particular user, but rather specific to various users of the cloud-based content management platform 115. Once the prediction engine 116 determines that the machine learning model is ready for use, the prediction engine 116 may provide current inputs to the trained machine learning model (e.g., current data for relevance, popularity, and collaboration levels for documents from the first set of blocks 502). The prediction engine 116 may then obtain an output from the trained machine learning model as a goal score or an unexpected score with a value between 0 and 1. In one implementation, the prediction engine 116 may apply, for each document in the first set from block 502, the amount of topical overlap between the respective document and the user's currently working set of documents, the number of viewing events for the respective document, and/or the number of collaboration events associated with the respective document as inputs to the trained machine learning model. The prediction engine 116 may then obtain output from the trained machine learning model. The output may indicate a likelihood that the user is interested in the corresponding document.
At block 506, the prediction engine 116 may provide the user's cloud stored GUI 200 hosted by the cloud-based content management platform 115 for presentation to the user. GUI 200 may identify one or more target documents. In some implementations, the GUI 200 can include one or more suggestion cards. Each suggestion card may identify each target document. In addition, each suggestion card may include header information (e.g., type and title of the respective document) in the document information portion 202, an image representation (e.g., thumbnail) of the respective document in the document thumbnail portion 204, and one or more smart buttons 210(210A, 210B) that provide access to the respective document (e.g., open, view, edit) and reason text that describes the reason why the respective document was identified in the event portion 206, as described in detail above with respect to fig. 2.
FIG. 6 depicts a flow diagram of aspects of a method 600 for predicting documents for a user based on multiple predictive context models, according to one embodiment of the present disclosure.
The method 600 may be performed by the prediction engine 116. In another embodiment, the method 600 may be performed by a client application executed by one or more processing devices of the user device 120. The method 600 may be performed when a user requests the server 112 to access cloud storage or a home screen via the cloud-based content management platform 115. The method 600 may be performed when the prediction engine 116 utilizes multiple predictive context models to predict documents for suggestion to a user. Examples of predictive solution models include predictive solution models based on conventional, targeted, or unexpected findings and comments described above with respect to fig. 2. In an embodiment, in response to receiving a request from a user to access a cloud storage or home screen of a cloud-based content management platform, the prediction engine 116 may run a plurality of predictive scene models in real-time. In another embodiment, prediction engine 116 may run all or some of the predictive scene models periodically and store the prediction scores in data store 114.
The prediction engine 116 may obtain an output (e.g., a predicted scene score) from each predicted scene model. In embodiments where the prediction engine 116 utilizes two predictive context models, at block 602, the prediction engine 116 may determine a first predictive context score for the first set of documents from the first predictive context model. In some implementations, the prediction engine 116 can identify a set of documents associated with the input data required for the first predictive context model as the first set of documents. The prediction engine 116 may run the first prediction scenario model by providing as input the required information associated with each document from the first set and obtain a prediction score for each document. The predicted scene score may represent a probability that the user is interested in the respective document under the respective scene of the predicted scene model. Such a prediction score may be in the range of 0 to 1. In an embodiment, the prediction engine 116 may run a comment-based prediction schema model by providing as input data representing user interactions with comment topics in documents and characteristics of the comment topics for each document. The prediction engine 116 may then obtain a predicted scenario score for the document.
At block 604, the prediction engine 116 may determine a second predicted scenario score for the second set of documents using the second predicted scenario model. The prediction engine 116 may run a prediction scheme model based on objective or unexpected findings by providing data representing the level of relevance, collaboration, and popularity of each document as input. The prediction engine 116 may then obtain a predicted scenario score for the document. In some implementations, the set of documents used in one predictive context model may be different from the set of documents of another model, as the different models may be based on different contexts. For example, in running a comment-based predictive scenario model, the prediction engine 116 may use data from documents that have comments recently added by other users; however, for predictive context models based on objective or unexpected findings, the prediction engine 116 may use data from documents with comments recently added by other users, but exclude those recently opened by the user. In another example, the set of documents used in the target-based or unexpected-discovery predictive solution model and the set of documents in the conventional model may be mutually exclusive, in that the previous model is built with explicit exclusion of documents recently opened by the user; while the latter model considers documents that the user has recently opened or accessed in any other way.
At block 606, the prediction engine 116 may select documents from the first set of documents and the second set of documents for suggestion based on the respective first predicted scenario scores and second predicted scenario scores. An implementation of block 606 will be discussed in detail with respect to fig. 7. In some implementations, prediction engine 116 may further provide a plurality of suggestion cards on the home screen GUI for documents selected from block 606.
FIG. 7 illustrates a flow diagram of aspects of a method 700 for selecting documents for suggestion at block 606 of FIG. 6, according to one embodiment of the invention.
At block 702, the prediction engine 116 may identify a weight for each scene used in the plurality of predictive scene models from blocks 602 and 604 of fig. 6. At block 704, the prediction engine 116 may also identify any attenuation factors for each scene. In some implementations, the value of the attenuation factor may be initially preset by the prediction engine 116. For example, the prediction engine may initially set the attenuation factor for a target or unexpected discovery scenario with a small value (e.g., 0.01). In calculating the overall document score in block 708, a decay factor may be used to exponentially reduce the contribution of the predicted scene score from the particular predicted scene model. In some implementations, the prediction engine 116 can update the weight and attenuation factor for each scene. At block 706, the prediction engine 116 may determine the predicted scenario score assigned to each document in the first and second sets of documents from blocks 602 and 604 of fig. 6. Each predictive context score is associated with a different predictive context model. In an embodiment, some documents may have only one predictive score assigned, while other documents may have more than one predictive score.
At block 708, the prediction engine 116 may calculate an overall document score for each document based on the predicted scene scores and the weights and attenuation factors corresponding to each scene. The prediction engine 116 may add the product of the predicted scene score, the weight, and any attenuation factors for each scene to determine an overall document score. In an embodiment, the prediction engine 116 may further consider the standard deviation of the different predicted scenario scores when calculating the overall document score.
At block 710, the prediction engine 116 may rank the documents based on the overall document score. In an embodiment, the prediction engine 116 may rank the documents in ascending or descending order of overall document score. The prediction engine 116 may select a limited number of documents for suggestion based on the ranking at block 712.
Fig. 8 depicts a block diagram of an example computing system operating in accordance with one or more aspects of the present disclosure. In various illustrative examples, computer system 800 may correspond to any of the computing devices within system architecture 100 of fig. 1. In one embodiment, the computer system 800 may be a server 112. In another embodiment, computer system 800 may be each of user devices 120A-120Z.
In some embodiments, computer system 800 may be connected to other computer systems (e.g., via a network such as a Local Area Network (LAN), intranet, extranet, or the internet). The computer system 800 may operate in the capacity of a server or a client computer in a client-server environment, or as a peer computer in a peer-to-peer or distributed network environment. Computer system 800 may be provided by a Personal Computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a server, a network router, switch or bridge, or any device capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that device. Additionally, the term "computer" shall include any collection of computers that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies described herein.
In another aspect, computer system 800 may include a processing device 802, a volatile memory 804 (e.g., Random Access Memory (RAM)), a non-volatile memory 806 (e.g., read-only memory (ROM) or electrically erasable programmable ROM (eeprom)), and a data storage device 816, which may communicate with each other via a bus 808.
The processing device 802 may be provided by one or more processors, such as: a general-purpose processor (such as, for example, a Complex Instruction Set Computing (CISC) microprocessor, a Reduced Instruction Set Computing (RISC) microprocessor, a Very Long Instruction Word (VLIW) microprocessor, a microprocessor implementing other types of instruction sets, or a microprocessor implementing a combination of various types of instruction sets) or a special-purpose processor (such as, for example, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a Digital Signal Processor (DSP), or a network processor).
The computer system 800 may also include a network interface device 822. Computer system 800 may also include a video display unit 810 (e.g., an LCD), an alphanumeric input device 812 (e.g., a keyboard), a cursor control device 814 (e.g., a mouse), and a signal generation device 820.
The data storage 816 may include a non-transitory computer-readable storage medium 824 on which may be stored instructions 826 encoding any one or more of the methods or functions described herein, including instructions implementing the prediction engine 116 of fig. 1 for implementing the methods described herein.
The instructions 826 may also reside, completely or partially, within the volatile memory 804 and/or within the processing device 802 during execution thereof by the computer system 800, and thus, the volatile memory 804 and the processing device 802 may also constitute machine-readable storage media.
While the computer-readable storage medium 824 is shown in an illustrative example to be a single medium, the term "computer-readable storage medium" should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of executable instructions. The term "computer-readable storage medium" shall also be taken to include any tangible medium that is capable of storing or encoding a set of instructions for execution by the computer to cause the computer to perform any one or more of the methodologies described herein. The term "computer readable storage medium" shall include, but not be limited to, solid-state memories, optical media, and magnetic media.
In the description above, numerous details are set forth. However, it will be apparent to one of ordinary skill in the art having the benefit of the present disclosure that the present disclosure can be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present disclosure.
Some portions of the detailed descriptions have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.
It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions, it is appreciated that throughout the specification discussions utilizing terms such as "receiving," "displaying," "ranking," "identifying," "determining," "notifying," "predicting," "suggesting," "providing," "presenting," or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (e.g., electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.
For simplicity of explanation, the methodologies are depicted and described herein as a series of acts. However, acts in accordance with the present disclosure may occur in various orders and/or concurrently, and other acts are not presented and described herein at the same time. Moreover, not all illustrated acts may be required to implement a methodology in accordance with the disclosed subject matter. Further, those skilled in the art will understand and appreciate that the methodologies could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally, it should be appreciated that the methodologies disclosed herein are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computing devices. The term "article of manufacture" as used herein is intended to encompass a computer program accessible from any computer-readable device or storage media.
Certain embodiments of the present disclosure also relate to an apparatus for performing the operations herein. This apparatus can be constructed for the intended purpose, or it can comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program can be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), Random Access Memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions.
Reference throughout this specification to "one embodiment" or "an embodiment" means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. Thus, the appearances of the phrases "in one embodiment" or "in an embodiment" in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the term "or" is intended to mean an inclusive "or" rather than an exclusive "or". Moreover, the word "example" or "exemplary" is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as "exemplary" is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the word "example" or "exemplary" is intended to present concepts in a concrete fashion.
It is to be understood that the above description is intended to be illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the disclosure should, therefore, be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.
In addition to the above, the user may be provided with controls that allow the user to make selections as to whether and when the systems, programs, or features described herein may enable the collection of user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location) and whether the user has been sent content or communications from a server. In addition, certain data may be processed in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, the identity of the user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user may be generalized where location information is obtained (such as to a city, zip code, or state level) such that a particular location of the user cannot be determined. Thus, the user may have control over what information is collected about the user, how the information is used, and what information is provided to the user.
Claims (20)
1. A method of notifying a user of a cloud-based content management platform of a document, the method comprising:
identifying, by a processor, a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user;
identifying, by the processor, one or more target documents from the first set of documents of the user based on an amount of topicality overlap between a respective document and a user's currently working set of documents, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the user's currently working set of documents includes documents accessed by the user via the cloud-based content management platform within a most recent predetermined time period; and
providing, by the processor, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
2. The method of claim 1, wherein identifying the first set of documents comprises:
determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators;
determining a third set of documents that are related to documents in the user's currently working set of documents; and
generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user.
3. The method of claim 2, wherein determining the second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators comprises:
determining the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provide at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform within a predetermined time period;
determining an importance weight for each collaborator in a social network associated with the cloud-based content management platform based on the importance of the collaborator; and
determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators.
4. The method of claim 2 or 3, wherein determining the third set of documents that are related to documents in the user's currently working set of documents comprises:
identifying key text for each document in the user's currently working set of documents; and
determining the third set of documents that includes one or more documents having the key text.
5. The method of claim 2, 3, or 4, wherein at least one of the second set of documents or the third set of documents includes one or more documents that have not been accessed by the user.
6. The method of claim 2, 3, 4, or 5, wherein generating the first set of documents comprises one of:
eliminating one or more documents that the user does not have access to and that have events less than a predetermined number of one or more collaborators; or
Eliminating one or more documents that are set as not discoverable by a search performed via the cloud-based content management platform.
7. The method of any preceding claim, wherein identifying the one or more target documents of the user comprises one of:
determining a number of viewing events associated with the respective document for other users or the one or more collaborators; or
Determining a number of collaboration events in view of the number of interaction events of the user with the respective document, the number of interaction events of the one or more other users with the respective document, and a likelihood of the user performing interaction events with one or more other users involved in the respective document, wherein an interaction event is an event generated in response to an event of another user.
8. The method of any of claims 1-6, wherein identifying the one or more target documents of the user comprises:
for each document in the first set of documents,
applying, as inputs, an amount of topicality overlap between the respective document and a set of documents currently working for the user, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document to a machine learning model; and
obtaining an output from the machine learning model, the output indicating a probability that the user is interested in the respective document.
9. The method of any preceding claim, wherein the GUI comprises one or more suggestion cards, each suggestion card identifying each target document, and each suggestion card comprising:
title information including a document type and a title of a corresponding document;
an image representation of the respective document;
an action button that provides access to the corresponding document; and
reason text describing a reason for identifying the corresponding document.
10. A system, comprising:
a memory device; and
a processing device operatively coupled to the memory device, the processing device to:
identifying a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user;
identifying one or more target documents from the first set of documents of the user based on an amount of topicality overlap between a respective document and a currently working set of documents of the user, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the currently working set of documents of the user includes documents accessed by the user via the cloud-based content management platform within a most recent predetermined time period; and
providing, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
11. The system of claim 10, wherein to identify the first set of documents, the processing device is further to:
determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators;
determining a third set of documents that are related to documents in the user's currently working set of documents; and is
Generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user.
12. The system of claim 10, wherein to determine the second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators, the processing device is further to:
determining the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provide at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform within a predetermined time period; and is
Determining an importance weight for each collaborator in a social network associated with the cloud-based content management platform based on the importance of the collaborator;
determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators.
13. The system of claim 10, wherein to determine the third set of documents that are related to documents in the user's currently working set of documents, the processing device is further to:
identifying key text for each document in the user's currently working set of documents; and is
Determining the third set of documents that includes one or more documents having the key text.
14. The system of claim 10, wherein to identify the one or more target documents of the user, the processing device is further to one of:
determining a number of viewing events associated with the respective document for other users or the one or more collaborators; or
Determining a number of collaboration events in view of the number of interaction events of the user with the respective document, the number of interaction events of the one or more other users with the respective document, and a likelihood of the user performing interaction events with one or more other users involved in the respective document, wherein an interaction event is an event generated in response to an event of another user.
15. The system of claim 10, wherein the GUI includes one or more suggestion cards, each suggestion card identifying each target document, and each suggestion card including:
title information including a document type and a title of a corresponding document;
an image representation of the respective document;
an action button that provides access to the corresponding document; and
reason text describing a reason for identifying the corresponding document.
16. A non-transitory computer-readable medium storing instructions that, when executed, cause a processing device to:
identifying a first set of documents, wherein the first set of documents is hosted by the cloud-based content management platform and does not include one or more documents recently opened by the user;
identifying one or more target documents from the first set of documents of the user based on an amount of topicality overlap between a respective document and a user's currently-working set of documents, a number of viewing events for the respective document, and a number of collaboration events associated with the respective document, wherein the user's currently-working set of documents includes documents accessed by the user via the cloud-based content management platform within a most recent predetermined time period; and is
Providing, for presentation to the user, a cloud-stored Graphical User Interface (GUI) of the user hosted by the cloud-based content management platform, the GUI identifying the one or more target documents.
17. The computer-readable medium of claim 16, wherein to identify the first set of documents, the instructions further cause the processing device to:
determining a second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators;
determining a third set of documents that are related to documents in the user's currently working set of documents; and is
Generating the first set of documents by combining the second set of documents and the third set of documents and eliminating one or more documents recently opened by the user.
18. The computer-readable medium of claim 16, wherein to determine the second set of documents associated with one or more collaborators of the user based on recent events of the one or more collaborators and importance weights assigned to the one or more collaborators, the instructions further cause the processing device to:
determining the one or more collaborators by identifying one or more other users of the cloud-based content management platform that provide at least one of a view event, an edit event, or a comment event to a document shared with the user in the cloud-based content management platform within a predetermined time period;
determining an importance weight for each collaborator in a social network associated with the cloud-based content management platform based on the importance of the collaborator; and is
Determining the second set of documents including one or more documents having recent events of the one or more collaborators and importance weights assigned to the one or more collaborators.
19. The computer-readable medium of claim 16, wherein to determine the third set of documents that are related to documents in the user's currently working set of documents, the instructions further cause the processing device to:
identifying key text for each document in the user's currently working set of documents; and is
Determining the third set of documents that includes one or more documents having the key text.
20. The computer-readable medium of claim 16, wherein the GUI includes one or more suggestion cards, each suggestion card identifying each target document, and each suggestion card including:
title information including a document type and a title of a corresponding document;
an image representation of the respective document;
an action button that provides access to the corresponding document; and
reason text describing a reason for identifying the corresponding document.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862702252P | 2018-07-23 | 2018-07-23 | |
US62/702,252 | 2018-07-23 | ||
PCT/US2018/047370 WO2020023066A1 (en) | 2018-07-23 | 2018-08-21 | Intelligent serendipitous document discovery notifications |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112585594A true CN112585594A (en) | 2021-03-30 |
Family
ID=63586899
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201880096801.9A Pending CN112585594A (en) | 2018-07-23 | 2018-08-21 | Intelligent unexpected document discovery notification |
Country Status (4)
Country | Link |
---|---|
US (1) | US20210165829A1 (en) |
EP (1) | EP3827394A1 (en) |
CN (1) | CN112585594A (en) |
WO (1) | WO2020023066A1 (en) |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP7298208B2 (en) * | 2019-03-13 | 2023-06-27 | 富士フイルムビジネスイノベーション株式会社 | Information processing device and program |
US20220237387A1 (en) * | 2019-05-18 | 2022-07-28 | Exxonmobil Upstream Research Company | Method And System For Generating A Surprisingness Score For Sentences Within Geoscience Text |
US11048383B2 (en) * | 2019-08-16 | 2021-06-29 | Dropbox, Inc. | Contact cards with dynamic interaction information |
US11729122B2 (en) * | 2020-12-23 | 2023-08-15 | Atlassian Pty Ltd. | Content suggestion system for real-time communication environments |
Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101023426A (en) * | 2004-07-23 | 2007-08-22 | 联邦科学和工业研究组织 | Method and system for integrating browsing histories with media playlists |
CN101631311A (en) * | 2008-07-17 | 2010-01-20 | 科塔企业有限责任公司 | Profile service for sharing rights-enabled mobile profiles |
CN101702795A (en) * | 2008-07-17 | 2010-05-05 | 多明戈企业有限责任公司 | System and method for sharing authority enabled user simple files |
US20140372526A1 (en) * | 2013-06-12 | 2014-12-18 | Cloudon Ltd | Systems and methods for supporting social productivity using thresholding |
US20150262069A1 (en) * | 2014-03-11 | 2015-09-17 | Delvv, Inc. | Automatic topic and interest based content recommendation system for mobile devices |
CN105074741A (en) * | 2012-12-20 | 2015-11-18 | 微软技术许可有限责任公司 | Suggesting related items |
US9230014B1 (en) * | 2011-09-13 | 2016-01-05 | Sri International | Method and apparatus for recommending work artifacts based on collaboration events |
CN105359138A (en) * | 2013-06-14 | 2016-02-24 | 微软技术许可有限责任公司 | Related content display associated with browsing |
US20160371258A1 (en) * | 2015-06-22 | 2016-12-22 | Microsoft Technology Licensing, Llc | Systems and methods for creating unified document lists |
CN106663242A (en) * | 2014-07-18 | 2017-05-10 | 微软技术许可有限责任公司 | Identifying and surfacing relevant report artifacts in documents |
US20170235820A1 (en) * | 2016-01-29 | 2017-08-17 | Jack G. Conrad | System and engine for seeded clustering of news events |
CN107111803A (en) * | 2015-01-09 | 2017-08-29 | 微软技术许可有限责任公司 | Action for personalized activity and content discovery in enterprise's social context |
US20180081503A1 (en) * | 2016-09-19 | 2018-03-22 | Google Inc. | Recommending a document for a user to access |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7440943B2 (en) * | 2000-12-22 | 2008-10-21 | Xerox Corporation | Recommender system and method |
US8688673B2 (en) * | 2005-09-27 | 2014-04-01 | Sarkar Pte Ltd | System for communication and collaboration |
US7693836B2 (en) * | 2005-12-27 | 2010-04-06 | Baynote, Inc. | Method and apparatus for determining peer groups based upon observed usage patterns |
US20090216734A1 (en) * | 2008-02-21 | 2009-08-27 | Microsoft Corporation | Search based on document associations |
US8666961B1 (en) * | 2010-03-19 | 2014-03-04 | Waheed Qureshi | Platform for generating, managing and sharing content clippings and associated citations |
US9519883B2 (en) * | 2011-06-28 | 2016-12-13 | Microsoft Technology Licensing, Llc | Automatic project content suggestion |
US20130275429A1 (en) * | 2012-04-12 | 2013-10-17 | Graham York | System and method for enabling contextual recommendations and collaboration within content |
US8959109B2 (en) * | 2012-08-06 | 2015-02-17 | Microsoft Corporation | Business intelligent in-document suggestions |
US20150019559A1 (en) * | 2013-07-11 | 2015-01-15 | Salesforce.Com, Inc. | Systems and methods for identifying categories with external content objects in an on-demand environment |
US9842113B1 (en) * | 2013-08-27 | 2017-12-12 | Google Inc. | Context-based file selection |
US20150193521A1 (en) * | 2014-01-09 | 2015-07-09 | Google Inc. | Methods for Generating an Activity Stream |
US9420017B2 (en) * | 2014-01-10 | 2016-08-16 | Kuhoo Edson | Information organization, management, and processing system and methods |
US20160042080A1 (en) * | 2014-08-08 | 2016-02-11 | Neeah, Inc. | Methods, Systems, and Apparatuses for Searching and Sharing User Accessed Content |
US9569728B2 (en) * | 2014-11-14 | 2017-02-14 | Bublup Technologies, Inc. | Deriving semantic relationships based on empirical organization of content by users |
US10114824B2 (en) * | 2015-07-14 | 2018-10-30 | Verizon Patent And Licensing Inc. | Techniques for providing a user with content recommendations |
US10839136B2 (en) * | 2016-09-07 | 2020-11-17 | Box, Inc. | Generation of collateral object representations in collaboration environments |
US10607273B2 (en) * | 2016-12-28 | 2020-03-31 | Google Llc | System for determining and displaying relevant explanations for recommended content |
US10970679B2 (en) * | 2016-12-29 | 2021-04-06 | Dropbox, Inc. | Presenting project data managed by a content management system |
US11334596B2 (en) * | 2018-04-27 | 2022-05-17 | Dropbox, Inc. | Selectively identifying and recommending digital content items for synchronization |
-
2018
- 2018-08-21 CN CN201880096801.9A patent/CN112585594A/en active Pending
- 2018-08-21 US US17/262,697 patent/US20210165829A1/en active Pending
- 2018-08-21 WO PCT/US2018/047370 patent/WO2020023066A1/en unknown
- 2018-08-21 EP EP18769928.5A patent/EP3827394A1/en active Pending
Patent Citations (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101023426A (en) * | 2004-07-23 | 2007-08-22 | 联邦科学和工业研究组织 | Method and system for integrating browsing histories with media playlists |
CN101631311A (en) * | 2008-07-17 | 2010-01-20 | 科塔企业有限责任公司 | Profile service for sharing rights-enabled mobile profiles |
CN101702795A (en) * | 2008-07-17 | 2010-05-05 | 多明戈企业有限责任公司 | System and method for sharing authority enabled user simple files |
US9230014B1 (en) * | 2011-09-13 | 2016-01-05 | Sri International | Method and apparatus for recommending work artifacts based on collaboration events |
CN105074741A (en) * | 2012-12-20 | 2015-11-18 | 微软技术许可有限责任公司 | Suggesting related items |
US20140372526A1 (en) * | 2013-06-12 | 2014-12-18 | Cloudon Ltd | Systems and methods for supporting social productivity using thresholding |
CN105359138A (en) * | 2013-06-14 | 2016-02-24 | 微软技术许可有限责任公司 | Related content display associated with browsing |
US20150262069A1 (en) * | 2014-03-11 | 2015-09-17 | Delvv, Inc. | Automatic topic and interest based content recommendation system for mobile devices |
CN106663242A (en) * | 2014-07-18 | 2017-05-10 | 微软技术许可有限责任公司 | Identifying and surfacing relevant report artifacts in documents |
CN107111803A (en) * | 2015-01-09 | 2017-08-29 | 微软技术许可有限责任公司 | Action for personalized activity and content discovery in enterprise's social context |
US20160371258A1 (en) * | 2015-06-22 | 2016-12-22 | Microsoft Technology Licensing, Llc | Systems and methods for creating unified document lists |
US20170235820A1 (en) * | 2016-01-29 | 2017-08-17 | Jack G. Conrad | System and engine for seeded clustering of news events |
US20180081503A1 (en) * | 2016-09-19 | 2018-03-22 | Google Inc. | Recommending a document for a user to access |
Non-Patent Citations (2)
Title |
---|
王妍;唐杰;: "基于深度学习的论文个性化推荐算法", 中文信息学报, no. 04, 15 April 2018 (2018-04-15), pages 118 - 123 * |
邬登峰;白琳;王涛;李慧;许舒人;: "基于多粒度特征和混合算法的文档推荐系统", 计算机系统应用, no. 03, 15 March 2018 (2018-03-15), pages 11 - 19 * |
Also Published As
Publication number | Publication date |
---|---|
US20210165829A1 (en) | 2021-06-03 |
WO2020023066A1 (en) | 2020-01-30 |
EP3827394A1 (en) | 2021-06-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11914947B2 (en) | Intelligent document notifications based on user comments | |
US20220391051A1 (en) | Intelligent people-centric predictions in a collaborative environment | |
CN111615712B (en) | Multi-calendar coordination | |
US9076125B2 (en) | Visualization of participant relationships and sentiment for electronic messaging | |
US10387840B2 (en) | Model generator for historical hiring patterns | |
CN111512328B (en) | Collaborative document access records and management | |
US20210165829A1 (en) | Intelligent serendipitous document discovery notifications | |
US20170068906A1 (en) | Determining the Destination of a Communication | |
US20190179878A1 (en) | Generating organization-specific tags for communications from various sources of an organization using an expanded knowledge graph for organization-specific content | |
US20130227020A1 (en) | Methods and systems for recommending a context based on content interaction | |
US11922188B2 (en) | Intelligent home screen of cloud-based content management platform | |
US10783181B1 (en) | Systems and methods for digital content provision | |
CN107660295B (en) | Episode timely notification | |
US9553902B1 (en) | Story development and sharing architecture: predictive data | |
US20140143685A1 (en) | Automatic discovery of how and when people met | |
US20180247214A1 (en) | Network node analysis and link generation system | |
US20200012727A1 (en) | Organizing objects in a feed to facilitate interaction between fans and content owners | |
US11074515B2 (en) | Query and ranking prediction using network action | |
US20180329909A1 (en) | Instructional content query response | |
US11797880B1 (en) | Systems and methods for digital content provision | |
EP3433731A1 (en) | Computerized content recommendation based on container interactions | |
US10713267B1 (en) | Network analysis system | |
US20190236719A1 (en) | Selective identification of social network connections |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US7924763B2 - Method and appratus for rate matching within a communication system - Google Patents
Method and appratus for rate matching within a communication system Download PDFInfo
- Publication number
- US7924763B2 US7924763B2 US11/953,922 US95392207A US7924763B2 US 7924763 B2 US7924763 B2 US 7924763B2 US 95392207 A US95392207 A US 95392207A US 7924763 B2 US7924763 B2 US 7924763B2
- Authority
- US
- United States
- Prior art keywords
- stream
- interleaved
- permutation
- sys
- circular buffer
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1812—Hybrid protocols; Hybrid automatic repeat request [HARQ]
- H04L1/1819—Hybrid protocols; Hybrid automatic repeat request [HARQ] with retransmission of additional or different redundancy
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0056—Systems characterized by the type of code used
- H04L1/0067—Rate matching
- H04L1/0068—Rate matching by puncturing
- H04L1/0069—Puncturing patterns
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/004—Arrangements for detecting or preventing errors in the information received by using forward error control
- H04L1/0056—Systems characterized by the type of code used
- H04L1/0071—Use of interleaving
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1867—Arrangements specially adapted for the transmitter end
- H04L1/1874—Buffer management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/18—Automatic repetition systems, e.g. Van Duuren systems
- H04L1/1867—Arrangements specially adapted for the transmitter end
- H04L1/189—Transmission or retransmission of more than one copy of a message
Definitions
- the present invention relates generally to communication systems and in particular, to a method and apparatus for rate matching within a communication system.
- error control techniques are used to protect a signal against impairment during transmission over a channel.
- a codeword is produced for every information block.
- the codeword is resized via a rate matching algorithm before being sent over the physical channel.
- the rate matching algorithm provides a desired number of bits to be sent over the channel where puncturing or repetition of the codeword may be applied.
- the rate matching algorithm is important in that it can significantly impact the system performance and implementation efficiency.
- FEC forward error correction
- HARQ Hybrid Automatic Repeat reQuest
- IR incremental redundancy
- One way to perform the rate matching function is to define puncturing/repetition patterns for every information block size and code rate the system may encounter.
- this method is inflexible.
- it becomes impractical if the system involves a large number of information block size and code rate combinations, such as in a 3rd Generation Partnership Project (3GPP) communication system.
- 3GPP 3rd Generation Partnership Project
- Another way to perform rate matching is to define a rule that steps through the codeword bits one by one and determines if a codeword bit should be punctured (removed) or repeated.
- Such a method has the benefit of flexibility and is defined in 3GPP Rel-99.
- Such a method suffers from implementation inefficiency.
- a circular buffer based rate matching algorithm may be designed to provide good performance with low implementation complexity.
- the codeword bits are rearranged to form a circular buffer. If N desired coded bits are needed for transmission, a length-N desired block of consecutive useful bits (skipping dummy or filler bits, for example) are taken from the circular buffer (wrapped around to the beginning if last bit of the circular buffer is reached). Therefore, puncturing and repetition can be achieved using a single method.
- the circular-buffer technique has advantages in flexibility, performance, and ease of implementation.
- a key in designing a circular buffer based rate matching algorithm is to generate puncturing patterns to puncture the output of the turbo coder, while ensuring good performance at the desired code rate (or rates) of operation. Therefore, a need exists for a method and apparatus for circular buffer based rate matching within a communication system that ensures good performance at desired code rates.
- FIG. 1 is a block diagram of a transmitter.
- FIG. 2 illustrates sub-block interleaving and interlacing.
- FIG. 3 is a block diagram of a transmitter.
- FIG. 4 illustrates a redundancy version
- FIG. 5 is a flow chart showing operation of the transmitter of FIG. 3 .
- FIG. 6 illustrates a block diagram of a receiver.
- FIG. 7 is a flow chart showing operation of the receiver of FIG. 6
- a method and apparatus for circular buffer based rate matching is provided herein.
- multiple data streams are received and each data stream is individually interleaved with a permutation of a same length K ⁇ .
- a permutation ( ⁇ p0 ) of a second stream is the same as a permutation ( ⁇ sys ) of a first stream and a permutation ( ⁇ p1 ) of a third stream is different from the permutation of the first stream.
- Each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- the plurality of interleaved streams are multiplexed to form a circular buffer.
- data is transmitted from the circular buffer.
- the present invention enhances the performance of circular buffer rate-matching by a joint optimization of the sub-block interleavers that are components in circular buffer design.
- the design has a performance advantage because it allows further flexibility in puncturing pattern design by allowing puncturing of some systematic bits in a first transmission without degrading performance.
- the invention enhances the performance of the circular buffer rate-matching in a wide-range of coding rates and these enhancements are more prominent at higher coding rates (as high as rate-0.9 or higher). From an implementation perspective, the invention proposes a simple way of generating the subblock interleavers.
- the present invention encompasses a method for operating a transmitter.
- the method comprises the steps of receiving a first, second, and third data stream and individually interleaving each data stream with a permutation of a same length K ⁇ to produce first, second, and third interleaved streams.
- a permutation ( ⁇ p0 ) used to produce the second interleaved stream is the same as a permutation ( ⁇ sys ) used to produce the first interleaved stream and a permutation ( ⁇ p1 ) used to produce the third interleaved stream is different from ⁇ sys , and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- the interleaved streams are multiplexed to form a circular buffer and then the bits are transmitted from the circular buffer.
- the present invention additionally encompasses a method for operating a receiver.
- the method comprises the steps of receiving a signal comprising contents of a circular buffer over a channel, de-multiplexing the signal to form a plurality of interleaved streams, and individually de-interleaving each stream according to a permutation to form a plurality of de-interleaved data streams.
- a permutation ( ⁇ p0 ) used to de-interleave a second stream is the same as a permutation ( ⁇ sys ) used to de-interleave a first stream and a permutation ( ⁇ p1 ) used to de-interleave a third stream is different from ⁇ sys , and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- the plurality of de-interleaved data streams are then passed to a decoder.
- the present invention additionally encompasses an apparatus comprising an encoder outputting a plurality of data streams, interleaving circuitry individually interleaving each data stream, bit-collection circuitry multiplexing the interleaved streams to form a circular buffer, and transmission circuitry transmitting bits from the circular buffer.
- a first, second, and third interleaved stream is formed by using a permutation of a same length K ⁇ , wherein a permutation ( ⁇ p0 ) used to form the second interleaved stream is the same as a permutation ( ⁇ sys ) used to form the first interleaved stream and a permutation ( ⁇ p1 ) used to form the third interleaved stream is different from ⁇ sys and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- the present invention additionally encompasses an apparatus for operating a receiver.
- the apparatus comprises receiving circuitry receiving contents of a circular buffer over a channel, a de-multiplexer de-multiplexing the signals to form a plurality of interleaved streams, and a de-interleaver individually de-interleaving each interleaved stream according a permutation to form a first, second, and third de-interleaved data stream.
- a permutation ( ⁇ p0 ) used to form the second de-interleaved data stream is the same as a permutation ( ⁇ sys ) used to form the first de-interleaved data and a permutation ( ⁇ p1 ) used to form the third de-interleaved data stream is different from ⁇ sys , and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- interleave and “permute”, “interleaver” and “permutation” are used interchangeably.
- sub-block interleaver is sometimes referred to as “interleaver” or “permutation”. Additionally, all modulo operations are indicated by either “%” or “mod”.
- FIG. 1 and FIG. 2 illustrate the functionality of a circular buffer based rate matching method. More particularly, FIG. 1 is a block diagram of a transmitter and FIG. 2 illustrates sub-block interleaving and interlacing.
- encoder 101 outputs a systematic bit stream and at least two parity streams.
- encoder 101 comprises a rate-1 ⁇ 3 turbo coder adopted in the 3GPP standardization. It is noted that the following concepts can be adapted to other types of error correction codes, such as turbo codes with other code rates, non-systematic turbo codes, low-density parity check (LDPC) codes, Reed Solomon codes, convolutional codes, etc.
- the data streams comprise symbol streams or bit streams. While the discussion assumes the streams contain binary bits, in general the streams may contain symbols and the procedures may be operated on symbols instead. For example, a symbol is composed of two bits for duo-binary turbo codes.
- Encoder 101 outputs three streams corresponding to the systematic bit stream and the two parity streams.
- the systematic stream may contain several (e.g., 4) bits that are not systematic, e.g., due to tail bits as for the 3GPP turbo code. (Tail bits are absent when tail-biting encoding is used.)
- the streams may also contain filler bits inserted prior to turbo encoding. For simplicity, all the bits in the systematic stream are referred to as systematic bits, and all the bits in the respective parity streams are referred to as parity 0 bits and parity 1 bits, respectively.
- These three streams are also referred to as a first stream, second stream and a third stream in the discussion.
- the first stream comprises a systematic stream
- the second stream comprises a first parity stream
- the third stream comprises a second parity stream.
- the streams output from encoder 101 are passed to the rate matching circuitry 102 .
- S′, P 0 ′ and P 1 ′ are systematic bit stream, parity 0 bit stream (i.e., the first parity bit stream) and parity 1 bit stream (i.e., the second parity bit stream), respectively.
- Logic circuitry 104 receives the bit streams output from encoder 101 and performs interleaving on each stream individually.
- the interleaving step comprises the step of interleaving via a sub-block interleaver.
- Each stream is rearranged (or interleaved, or permuted) with its own sub-block interleaver to produce streams S, P 0 and P 1 .
- a subblock interleaver that selects bits evenly distributed over the trellis is desired.
- a permutation is needed such that the first l (1 ⁇ l ⁇ L) bits of the subblock interleaved sequence are always approximately evenly distributed in the non-interleaved bit stream regardless of l.
- L is the length of the bit stream.
- K the length of the bit sequence input to the turbo encoder
- 4 tail bits are appended to each bit stream at the output of turbo encoder due to trellis termination. This ensures that the code bits selected by the rate matcher are approximately evenly distributed in both constituent code trellises, regardless of the target code rate.
- Several subblock interleaving schemes can be used to achieve this purpose.
- Streams S, P 0 and P 1 are then multiplexed to produce a circular buffer which contains the multiplexed streams.
- One way of multiplexing P 0 and P 1 is to interlace the streams on a bit-by-bit basis. It is also possible to interlace the streams on the granularity of groups of bits.
- interleaved streams P 0 and P 1 are interlaced with each other to produce an intermediate stream which is the interlaced P 0 and P 1 portion 201 .
- interlacing of P 0 and P 1 produces sequence [P 0 (0), P 1 (0), P 0 (1), P 1 (1), . . .
- a single output buffer 105 (also called circular buffer) is formed by storing the rearranged systematic bits S in the beginning followed by interlaced P 0 and P 1 portion 201 .
- the multiplexing of the plurality of interleaved streams to form the circular buffer comprises the steps of interlacing the interleaved second stream and interleaved third stream to form an intermediate stream; and concatenating the interleaved first stream with the intermediate stream.
- a buffer 105 is illustrated in FIG. 1 .
- the buffer may be virtual in that the functionality of such a buffer is realized without actually storing the multiplexed bits in a physical buffer.
- the number of coded bits N desired to be selected for transmission is passed to logic circuitry 104 as an input.
- Logic circuitry 104 simply reads out a length-N desired block of consecutive useful bits from the circular buffer (wrapped around to the beginning if last bit of the circular buffer is exceeded) from a certain starting point. Therefore, puncturing and repetition can be achieved using a single method.
- Useful data bits are any bits in the circular buffer that are deemed worthwhile to transmit over the channel. For example, data bits other than (a) dummy bits or (b) filler bits in S and P 0 may be considered as useful bits. It is noted that while dummy or filler bits may be necessary from an implementation perspective, it might be wasteful to actually transmit these bits over the channel.
- the circular-buffering technique has an advantage in flexibility (in code rates achieved) and granularity (in streams sizes). Circular buffer rate matching selects parity bits approximately evenly distributed over the code trellis irrespective of desired code rate of operation if the sub-block interleavers are designed properly.
- FIG. 3 is a block diagram of transmitter 300 employing the rate matching technique described above.
- Transmitter 300 comprises encoder 301 , rate matching circuitry 303 , and the transmission circuitry 311 .
- Rate matching circuitry 303 additionally comprises sub-block interleavers 305 , bit-collection unit 307 , and a bit-selection and pruning unit 309 .
- Elements 305 , 307 , and 309 are preferably logic circuitry embodied in a microprocessor, microcontroller, digital signal processors (DSPs), or such other devices known to those having ordinary skill in the art.
- DSPs digital signal processors
- interleavers 305 the particular operations/functions of interleavers 305 , collection unit 307 , and bit selection and pruning unit 309 , and thus of transmitter 300 are determined by an execution of software instructions and routines.
- Memory may be utilized to assist the operations of elements 305 , 307 , and 309 , where the memory comprises a random access memory (RAM), dynamic random access memory (DRAM), and/or read only memory (ROM) or equivalents thereof.
- RAM random access memory
- DRAM dynamic random access memory
- ROM read only memory
- Encoder 301 is preferably a rate-1 ⁇ 3 3GPP turbo coder, however, the techniques described herein for operating transmitter 300 may be applied to other encoders, including, but not limited to turbo coders performing turbo coding with other code rates, with tail bits or no tail bits, tail-biting, binary or duo-binary turbo coders, with or without filler bits insertion, convolutional codes, . . . , etc.
- Sub-block interleavers 305 may use any permutation that reorders the bits in a length-L input bit stream to form a length-L output stream, not counting any dummy bits which may exist in the output stream. Denote the permutation for S′, P′ 0 and P′ 1 streams by ⁇ sys , ⁇ p0 , and ⁇ p1 , respectively.
- a block interleaver based (also called “rectangle” or “row-column”) permutation may be used for permuting each of the three input streams.
- the block interleaver may utilize permuting columns (or rows) based on a permutation as explained below.
- L be the length of the input stream to a sub-block interleaver, the dimensions of the block interleaver being C columns and R rows.
- ⁇ ⁇ ( i ) ( P ⁇ ( ⁇ i R ⁇ ) + C ⁇ ( i ⁇ ⁇ mod ⁇ ⁇ R ) ) ⁇ ⁇ mod ⁇ ⁇ K ⁇ , where ‘mod’ indicates modulo operation, and sequence ⁇ P(0), . . . , P(C ⁇ 1) ⁇ is the inter-column permutation pattern.
- dummy bits (denoted by ⁇ NULL>) are attached to fill up the ⁇ L/C ⁇ C ⁇ L positions in the rectangle, and these dummy bits are discarded at the end of rate matching.
- the dummy bits may reside in any predefined locations in the rectangle.
- the dummy bits may be attached to the front or the end of the input stream before writing into the rectangle.
- the dummy bits in each stream need not be differentiated from the non-dummy bits in the stream.
- the sub-block interleaver may be defined for length K ⁇ , regardless of presence of dummy bits.
- the step of individually interleaving each data stream may comprise the step of adding dummy bits to each stream before individually interleaving so that each stream has length K ⁇ .
- the discussion assumes that the sub-block interleaver length is K ⁇ .
- the permutation for P′ 0 and P′ 1 streams may be different from the permutation of S′.
- ⁇ p0 (i) and ⁇ p1 (i) may be related to ⁇ sys (i) via a function for each 0 ⁇ i ⁇ K ⁇ .
- the functions may be different for ⁇ p0 and ⁇ p1 . It is possible that all three permutations ⁇ sys , ⁇ p0 , and ⁇ p1 are different; or two of the permutations are the same, but the third permutation is different.
- the permutation of the second stream ⁇ p0 can be chosen as the same as that of the first stream ⁇ sys .
- ⁇ p0 and ⁇ p1 may be derived from ⁇ sys via a function with non-null constant offset.
- the offset value may be set as a constant. This constant may be determined based on the block size or other factors.
- ⁇ sys is a block interleaver with column permutation ⁇ P(0), . . . , P(C ⁇ 1) ⁇ , then
- ⁇ p ⁇ ⁇ 1 ⁇ ( i ) ( P ⁇ ( ⁇ i R ⁇ ) + C ⁇ ( i ⁇ ⁇ mod ⁇ R ) + 1 ) ⁇ ⁇ mod ⁇ ⁇ K ⁇ .
- d (0) represents the systematic bit stream S′
- d (1) represents the first parity bit stream P 0 ′
- d (2) represents the second parity bit stream P 1 ′
- ⁇ (0) represents the interleaved systematic bit stream S
- ⁇ (1) represents the interleaved first parity bit stream P 0
- ⁇ (2) represents the interleaved second parity bit stream P 1 .
- ⁇ ⁇ ( k ) ( P ( ⁇ k R ⁇ ) + C ⁇ ( k ⁇ ⁇ mod ⁇ ⁇ R ) + 1 ) ⁇ ⁇ mod ⁇ ⁇ K ⁇ .
- bit-collection unit 307 After interleaving, bit-collection unit 307 then collects bits from stream S, P 0 and P 1 . In a preferred embodiment, bit-collection unit 307 interlaces the bits of P 0 and P 1 , and places the interlaced bits behind stream S.
- K ⁇ ⁇ 1 Sequence W may be stored in a buffer such as 105 , and thus called a “circular buffer”.
- the description shows that the dummy bits are kept in the circular buffer W, thus it is called a dummy-padded circular buffer.
- the size of the dummy-padded circular buffer is equal to the summation of the input stream sizes and the total number of dummy bits inserted.
- bit selection and pruning circuitry 309 During operation of transmitter 300 , a number of coded bits N desired to be selected for transmission is calculated and passed to bit selection and pruning circuitry 309 .
- Bit selection and pruning circuitry 309 simply reads out a length-N desired block of consecutive useful bits from the sequence W (wrapped around to the beginning if last bit of the sequence is exceeded) from a certain starting point. Note that only non-dummy bits are kept for transmission, while dummy bits (if any) are taken from W, are discarded. Also, if filler bits are present in the input stream, some or all of them can be also treated similar to dummy bits (e.g., denoted by ⁇ NULL> and not transmitted). In some implementations however, the dummy bits or filler bits might be considered useful for transmission. In general the useful bits correspond to any data bits that are worthwhile to transmit over the channel. Thus, while transmitting, consecutive useful bits from the circular buffer are outputted.
- a parameter (redundancy version (RV)) is provided to bit selection and pruning circuitry 309 to define a starting point (as shown in FIG. 4 ) within the circular buffer W so that different sections of the buffer may be selected for transmission. Since FEC is equivalent to HARQ with one transmission only, FEC may also be defined with an RV value, denoted by RV 0 .
- bit selection and pruning circuitry 309 receives an RV value and the number of coded bits N desired to be selected for transmission. The N desired non-dummy bits are read out of the circular buffer starting at the position defined by RV. These bits are typically output to transmitter 311 for subsequent processing such as channel interleaving, modulation and transmission from an antenna.
- the step of transmitting bits from the circular buffer comprises the steps of: receiving a redundancy version (RV) and a number of desired bits; and transmitting the number of desired bits starting at the RV position.
- the particular format for W, S, P 0 and P 1 are given above for illustration purposes, and may be formatted in several ways.
- the circular buffer is represented using a single dimension array (i.e., of sequence format), it can be represented in a two dimensional matrix format via the block-interleavers used for sub-block interleaving.
- the sequence W may not need to be stored in a physical circular buffer, as long as the correct output bits are provided to transmitter 311 .
- the sequence W is sometimes called “virtual circular buffer”.
- bit-collection unit 307 may be removed by bit-collection unit 307 and sequence W does not contain any non-useful bits.
- the bit-collection unit can also collect groups of bits.
- FIG. 5 is a flow chart showing operation of the transmitter of FIG. 3 .
- the logic flow of FIG. 5 shows the steps for sub-block interleaving and forming the circular buffer, and the subsequent transmission of bits/data from circular buffer.
- the logic flow begins as step 501 where interleavers 305 receives a first, second, and third data stream, which may be symbol or a bit streams. These streams comprise a systematic bit stream, a first parity bit stream, and a second parity bit stream.
- the bits are output from encoder 301 .
- Interleavers 305 individually sub-block interleaves (via a sub-block interleaver) the systematic bit stream, the first parity bit stream, and the second parity bit stream (step 503 ).
- each data stream with is individually interleaved with a permutation of a same length K ⁇ to produce first, second, and third interleaved streams, wherein a permutation ( ⁇ p0 ) used to produce the second interleaved stream is the same as a permutation ( ⁇ sys ) used to produce the first interleaved stream and a permutation ( ⁇ p1 ) used to produce the third interleaved stream is different from ⁇ sys and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys ;
- the systematic bit stream, the first parity bit stream, and the second parity bit stream may have dummy bits appended during sub-block interleaving so that each stream has length K ⁇ .
- the interleaved streams are multiplexed by bit-collection unit 307 to form a circular buffer.
- bit-collection unit 307 interlaces the interleaved first parity bit stream with the interleaved second parity bit stream and prepends the interleaved systematic bit stream to the interlaced parity bits to create the circular buffer.
- the second interleaved stream and third interleaved stream are interlaced to form an intermediate stream, and the first interleaved stream is concatenated with the intermediate stream.
- Bit selection and pruning circuitry 309 receives a redundancy version and a number of desired bits (step 509 ) and outputs to the transmitting circuitry 311 the number of desired bits starting at the RV bit position, and transmits the bits from the circular buffer starting at the RV position (step 511 ).
- using the redundancy version results in a portion of the first stream not being transmitted.
- the bits transmitted from the circular buffer are preferably consecutive bits from the circular buffer.
- FIG. 6 is a block diagram of receiver 600 employing the rate matching technique described above with HARQ operation.
- Receiver 600 comprises receiver circuitry 601 , de-rate matching circuitry 611 , and the decoding circuitry 607 .
- De-rate matching circuitry 611 additionally comprises a HARQ combining and de-multiplexing circuitry 603 and sub-block de-interleavers 605 .
- Receiver circuitry 601 receives signals from the channel, where the signals correspond to bits transmitted from a circular buffer. The signals may have been processed and are represented in a format appropriate for subsequent receiver processing, for example, in the format of amplitudes or in the format of log-likelihood ratios (LLRs).
- LLRs log-likelihood ratios
- the HARQ combining circuitry is used to combine the bits received from the channel with any previous transmissions for HARQ operation.
- the de-rate matching circuitry also comprises a HARQ buffer 609 to store the received values for combining with future retransmissions for supporting HARQ operation.
- the de-multiplexing circuitry de-multiplexes the signals to form a plurality of interleaved streams, which correspond to streams S, P 0 , and P 1 in the transmitter.
- the circular buffer bits not transmitted do not have corresponding received signals and may be assigned a given value such as zero by the de-multiplexer.
- Elements 603 , 605 , and 607 are preferably logic circuitry embodied in a microprocessor, microcontroller, digital signal processors (DSPs), or such other devices known to those having ordinary skill in the art.
- DSPs digital signal processors
- the particular operations/functions of circuitry 603 , 605 , 607 , and 609 thus of receiver 600 are determined by an execution of software instructions and routines.
- Memory may be utilized to assist the operations of elements 603 , 605 , 607 , and 609 , where the memory comprises a random access memory (RAM), dynamic random access memory (DRAM), and/or read only memory (ROM) or equivalents thereof.
- RAM random access memory
- DRAM dynamic random access memory
- ROM read only memory
- Decoder 607 is preferably a rate-1 ⁇ 3 3GPP turbo decoder, however, the techniques described herein for operating receiver 600 may be applied to other decoders, including, but not limited to turbo decoders performing turbo coding with other code rates, with tail bits or no tail bits, tail-biting, binary or duo-binary turbo coders, with or without filler bits insertion, convolutional code decoder, . . . , etc.
- the apparatus of the receiver can be described as containing a receiving circuitry receiving signals of a circular buffer from the channel, a de-multiplexer de-multiplexing the signals to form a plurality of interleaved streams; a de-interleaver to individually de-interleaving each stream according to its permutation to form a plurality of data streams, wherein a permutation ( ⁇ p0 ) of a second stream is the same as a permutation ( ⁇ sys ) of a first stream and a permutation ( ⁇ p1 ) of a third stream is different from the permutation of the first stream, and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys , and passing the plurality of data streams to a decoder.
- the steps described in the above receiver structure can be rearranged for reasons such as implementation benefits, etc.
- the sub-block de-interleaving step can be combined along with the multiplexing operation.
- the HARQ buffer may store the LLRs values in the natural (i.e., de-interleaved) order rather than interleaved order.
- the receiver 600 may be used in the context of FEC as well with slight modification, where the HARQ combining step and the HARQ buffer are not necessary and circuitry 603 is simply a de-multiplexer.
- FIG. 7 is a flow chart showing operation of the receiver of FIG. 6 .
- the logic flow of FIG. 7 shows the steps for forming the circular buffer of received signals, de-multiplexing, sub-block de-interleaving to form streams, and inputting the streams to the decoder.
- the logic flow begins as step 701 where combining and de-multiplexing circuitry 603 receives a signal (from receiver 601 ) that comprises contents of a circular buffer transmitted over a channel.
- the contents of the circular buffer correspond to transmitted bits specified by a redundancy version and a number of desired bits.
- circuitry 603 performs HARQ combining to combine the received signals with previous transmissions to form a circular buffer, where the combining is performed according to the redundancy version and the number of desired bits.
- the de-multiplexer within circuitry 603 de-multiplexes the signal to form a plurality of interleaved streams, corresponding to a block of interleaved systematic bits, a first block of interleaved parity bits and a second block of interleaved parity bits.
- the de-multiplexing step comprise the steps of de-concatenating an interleaved first stream with an intermediate stream; and de-interlacing the intermediate stream to form an interleaved second stream and an interleaved third stream.
- the interleaved systematic bit stream, the interleaved first parity bit stream, and the interleaved second parity bit stream may have dummy bits appended to facilitate sub-block de-interleaving.
- each stream is de-interleaved individually by de-interleaver 605 .
- This step comprises individually de-interleaving each stream according to a permutation to form a plurality of de-interleaved data streams, wherein a permutation ( ⁇ p0 ) used to de-interleave a second stream is the same as a permutation ( ⁇ sys ) used to de-interleave a first stream and a permutation ( ⁇ p1 ) used to de-interleave a third stream is different from ⁇ sys , and each element of ⁇ p1 is derived from the corresponding element of ⁇ sys .
- Decoder 607 receives the three streams for further decoder processing (step 711 ).
- quadratic permutation polynomial (QPP) interleaver adopted for the 3GPP Long Term Evolution (LTE) turbo code has an even-even property.
- a permutation with even-even property maps all even (odd) positions in the input to all even (odd) positions in the output.
- the even-indexed parity symbols from parity stream 0 and parity stream 1 are related to the even-indexed symbols from the systematic stream (here the effect of tail bits in the streams is neglected). Therefore, a puncturing that only keeps even-indexed symbols from both parity streams might lead to performance loss as some odd-indexed symbols might receive little protection.
- the sub-block interleaver for the systematic stream i.e., a permutation ⁇ sys of length K ⁇
- the parity 0 stream i.e., a permutation ⁇ p0 of length K ⁇
- the subblock interleaver ⁇ sys has an even-even property and hence there is likelihood of performance loss at high code rates. This performance loss is avoided by defining the subblock interleaver for parity 1 stream with an odd-valued offset.
- a key idea of the sub-block interleaver design is to ensure that in an initial transmission (especially at high coding rates), the parity bits (i.e., from the two parity streams) are selected from the circular buffer in a careful fashion.
- the present invention is considered as a key performance enhancement method for circular buffer design and the same idea is integrated with techniques that are geared towards providing implementation benefits (such as virtual circular buffer with dummy bit insertions)
- the RVs are defined in the dummy-padded circular buffer for ease of HARQ operation. Assuming the dummy-padded circular buffer size is a multiple of 8, it is possible to define four (or eight or two) RVs that are equally spaced for any stream size L.
- the RVs can be defined to always start at positions which lie in the same row of the constituent sub-block interleavers, where each sub-block interleaver is based on a block interleaver.
- the four RVs can be defined to start at the top of a sub-block interleaver column. It is convenient, in general, to assign the RVs to any positions in the first row (i.e., at the top of a column) of the sub-block interleaver.
- the redundancy versions start at positions R ⁇ j, 0 ⁇ j ⁇ 3 ⁇ C ⁇ 1, for the rate 1 ⁇ 3 turbo code.
- the starting positions of the RVs are all located in a particular row r of the dummy-padded circular buffer, where 0 ⁇ r ⁇ R.
- the redundancy versions can start at (R ⁇ j+r) % 3K ⁇ , 0 ⁇ j ⁇ 3 ⁇ C ⁇ 1.
- the starting positions of each RV may be located in a different row r (that is simple to calculate, e.g., via a lookup table, or a function of the RV, or block size, etc) of the dummy-padded circular buffer.
- the rate matching algorithm initializes its address generator to an appropriate starting value based on the input parameters (RV number and number of desired bits). Then it directly starts outputting the bits by following the address generation rule as described by the sub-block permutations of the input streams.
- the address generation rule defines the sequence of positions in the encoder output stream from which the bits are outputted.
- the RV definition discussed above can be refined to accommodate a performance-enhancing technique called systematic puncturing.
- the proposed method works well for circular buffer operation in many scenarios, including full virtual circular buffer, limited virtual circular buffer (i.e., with 1 st stage rate matching), etc.
- limited virtual circular buffer the wrap-around point in the circular may be defined as a function of available soft buffer.
- Systematic bit puncturing could be combined directly into the definition of the circular buffer.
- the systematic bit puncturing can be accommodated by defining a first redundancy version (RV) appropriately.
- RV redundancy version
- the first RV (RV 0 ) is assigned to start at j-th column, j>0, instead of 0 th column. Since RV 0 is always used in the first transmission of an information block, 0-th through (j ⁇ 1)-th columns of the systematic stream may be punctured in the first transmission. If the wraparound in circular buffer occurs in the first transmission, the amount of systematic bits that is punctured may becomes variable or is switched off.
- systematic bit puncturing in the circular buffer can be facilitated by defining a redundancy version position for the initial transmission from the circular buffer such that a portion of the first stream is not transmitted.
- the first stream corresponds to the systematic stream.
- the same circular buffer can be used in the context of HARQ with multiple transmissions per information block.
- Different redundancy versions for HARQ transmission may be obtained by taking different sections of the circular buffer, where the section size is equal to the length required for the current physical channel transmission (i.e., number of desired bits).
- RV redundancy versions
- a simple way is to define Y different starting points (A 0 , A 1 , . . . , A Y ⁇ 1 ) within the circular buffer, one for a redundancy version.
- N desired is the number of bits required for transmission
- N CB is the length of the circular buffer, where non-useful bits such as dummy and filler bits are excluded.
- N desired bits are read starting with position A i , wrap around to the beginning of the circular buffer if the end the buffer is reached. For a given information block, N desired may be different for each transmission.
- the systematic bit puncturing can be enabled by defining a first redundancy version to skip ⁇ , ⁇ >1, systematic columns while outputting bits from the dummy padded circular buffer.
- the bits may be transmitted from position R ⁇ (N col ⁇ RV idx + ⁇ ) of the circular buffer, wherein RV idx is an integer denoting the redundancy version, ⁇ , R and N col are integers.
- R is the number of rows in the block interleaver
- N col is of the column spacing
- ⁇ is an offset number of columns.
- Mapping the starting points to their location within the subblock interleaver may be more convenient for certain implementation, while defining the RV starting points in the circular buffer in sequence format may be more convenient for other implementations.
Abstract
Description
S(i)=S′(πsys(i)), 0≦i<L,
P 0(i)=P′ 0(πp0(i)), 0≦i<L,
P 1(i)=P′ 1(πp1(i)) 0≦i<L.
where ‘mod’ indicates modulo operation, and sequence {P(0), . . . , P(C−1)} is the inter-column permutation pattern.
πp0(i)=πsys(i), 0≦i<K Π
πp1(i)=πsys(i), 0≦i<K Π
However, for certain turbo codes, such rate matching algorithm exhibits undesirable performance at high coding rates such as code rate 0.9.
πp1(i)=(πsys(i)+δ1)mod K Π, 0≦i<K Π
where mod denotes the modulo operation. The offset value may be set as a constant. This constant may be determined based on the block size or other factors.
πp1(i)=(πsys(i)+1)mod K Π, 0≦i<K Π.
In particular, if πsys is a block interleaver with column permutation {P(0), . . . , P(C−1)}, then
-
- (1) Assign C to be the number of columns of the matrix. The columns of the matrix are numbered 0, 1, 2, . . . , C−1 from left to right.
- (2) Determine the number of rows of the matrix, R, by finding minimum integer R such that:
L≦(R×C).- The rows of rectangular matrix are numbered 0, 1, 2, . . . , R−1 from top to bottom.
- (3) If R×C>L, then ND=(R×C−D) dummy bits are padded such that yk=<NULL> for k=0, 1, . . . , ND−1. Then, write the input bit sequence, i.e., yN
D +k=dk (i), k=0, 1, . . . , L−1, into the R×C matrix row by row starting with bit y0 incolumn 0 of row 0:
-
- For dk (0) and dk (1):
- (4) Perform the inter-column permutation for the matrix based on the pattern
-
- (5) The output of the block interleaver is the bit sequence read out column by column from the inter-column permuted R×C matrix. The bits after sub-block interleaving are denoted by ν0 (i), ν1 (i), ν2 (i), . . . , νK
Π −1 (i), where ν0 (i) corresponds to yP(0), ν1 (i) to yP(0)+C, . . . and KΠ=(R×C). - For dk (2):
- (4) The output of the sub-block interleaver is denoted by ν0 (2), ν1 (2), ν2 (2), . . . , νK
Π −1 (2), where νk (2)=yπ(k) and where
- (5) The output of the block interleaver is the bit sequence read out column by column from the inter-column permuted R×C matrix. The bits after sub-block interleaving are denoted by ν0 (i), ν1 (i), ν2 (i), . . . , νK
W(k)=S(k) for k=0, . . . , K Π−1
W(K Π+2k)=P 0(k) for k=0, . . . , K Π−1
W(K Π+2k+1)=P 1(k) for k=0, . . . , K Π−1
Sequence W may be stored in a buffer such as 105, and thus called a “circular buffer”. The description shows that the dummy bits are kept in the circular buffer W, thus it is called a dummy-padded circular buffer. The size of the dummy-padded circular buffer is equal to the summation of the input stream sizes and the total number of dummy bits inserted.
Claims (18)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/953,922 US7924763B2 (en) | 2007-12-11 | 2007-12-11 | Method and appratus for rate matching within a communication system |
US13/079,136 US8520496B2 (en) | 2007-12-11 | 2011-04-04 | Method and apparatus for rate matching within a communication system |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/953,922 US7924763B2 (en) | 2007-12-11 | 2007-12-11 | Method and appratus for rate matching within a communication system |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/079,136 Continuation US8520496B2 (en) | 2007-12-11 | 2011-04-04 | Method and apparatus for rate matching within a communication system |
Publications (2)
Publication Number | Publication Date |
---|---|
US20090147724A1 US20090147724A1 (en) | 2009-06-11 |
US7924763B2 true US7924763B2 (en) | 2011-04-12 |
Family
ID=40721583
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/953,922 Active 2030-02-08 US7924763B2 (en) | 2007-12-11 | 2007-12-11 | Method and appratus for rate matching within a communication system |
US13/079,136 Active 2027-12-28 US8520496B2 (en) | 2007-12-11 | 2011-04-04 | Method and apparatus for rate matching within a communication system |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/079,136 Active 2027-12-28 US8520496B2 (en) | 2007-12-11 | 2011-04-04 | Method and apparatus for rate matching within a communication system |
Country Status (1)
Country | Link |
---|---|
US (2) | US7924763B2 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090132885A1 (en) * | 2007-11-20 | 2009-05-21 | Samsung Electronics Co. Ltd. | System and method for retransmitting data in a communication system |
US20100199157A1 (en) * | 2007-10-01 | 2010-08-05 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US20100218075A1 (en) * | 2009-02-02 | 2010-08-26 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US20120069915A1 (en) * | 2010-09-17 | 2012-03-22 | Electronics And Telecommunications Research Institute | Rate matching apparatus and rate matching method thereof |
US20120185751A1 (en) * | 2010-01-04 | 2012-07-19 | Zte Corporation | Serial processing method, parallel processing method of bit rate matching and device thereof |
CN103797724A (en) * | 2011-07-25 | 2014-05-14 | 科迪纳系统有限公司 | Time varying data permutation apparatus and methods |
US8880812B1 (en) * | 2010-03-31 | 2014-11-04 | Marvell International Ltd. | WWN table management systems and methods |
WO2019029397A1 (en) * | 2017-08-11 | 2019-02-14 | 华为技术有限公司 | Interleaving method and device |
CN109768843A (en) * | 2018-12-18 | 2019-05-17 | 京信通信系统（中国）有限公司 | Speed matching method, dissociation rate matching method, device and base station |
WO2019100236A1 (en) * | 2017-11-22 | 2019-05-31 | Qualcomm Incorporated | Circular buffer based hybrid automatic retransmission request for polar codes |
US10972220B2 (en) | 2017-08-11 | 2021-04-06 | Huawei Technologies Co., Ltd. | Interleaving method and apparatus |
US11070316B2 (en) * | 2017-06-19 | 2021-07-20 | Huawei Technologies Co., Ltd. | Information processing method, apparatus, communications device, and communications system |
US11277156B2 (en) | 2017-02-10 | 2022-03-15 | Telefonaktiebolaget Lm Ericsson (Publ) | Circular buffer rate matching for polar codes |
Families Citing this family (29)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2009057922A1 (en) * | 2007-10-29 | 2009-05-07 | Lg Electronics Inc. | Method of data transmission using harq |
JP5203717B2 (en) * | 2007-12-19 | 2013-06-05 | パナソニック株式会社 | Encoder, decoder, encoding method, and decoding method |
KR101476203B1 (en) * | 2008-01-08 | 2014-12-24 | 엘지전자 주식회사 | Method For Transmitting Signals Using HARQ Scheme To Guarantee Constellation Rearrangement Gain |
CN102084683B (en) * | 2008-03-12 | 2016-09-28 | 松下电器（美国）知识产权公司 | Radio communication device, wireless communication system and wireless communications method |
US8355666B2 (en) * | 2008-09-10 | 2013-01-15 | Qualcomm Incorporated | Apparatus and method for interference-adaptive communications |
KR20100071490A (en) * | 2008-12-19 | 2010-06-29 | 한국전자통신연구원 | Method and apparatus for de-rata matching |
US20100235721A1 (en) * | 2009-03-13 | 2010-09-16 | Lsi Corporation | Rate Matching and De-Rate Matching for an LTE Transport Channel |
CN102025445B (en) * | 2009-09-15 | 2013-06-05 | 中兴通讯股份有限公司 | Method and device for rate matching or rate dematching |
US8255768B2 (en) * | 2009-09-25 | 2012-08-28 | Stmicroelectronics, Inc. | Interlaced iterative system design for 1K-byte block with 512-byte LDPC codewords |
JP5521722B2 (en) * | 2010-04-14 | 2014-06-18 | 沖電気工業株式会社 | Encoding device, decoding device, encoding / decoding system, and program |
CN101895374B (en) * | 2010-07-20 | 2012-09-05 | 华为技术有限公司 | Method and device for velocity matching |
US10284319B2 (en) * | 2010-10-13 | 2019-05-07 | Samsung Electronics Co., Ltd. | Method and apparatus for multiplexing machine type communication data of multiple MTC devices in a wireless network environment |
US9246725B2 (en) * | 2011-09-06 | 2016-01-26 | Electronics And Telecommunications Research Institute | Method of generating and receiving packets in low energy critical infrastructure monitoring system |
CN109861694B (en) | 2013-11-20 | 2021-10-26 | 华为技术有限公司 | Processing method and equipment of polarization code |
CN104753653B (en) * | 2013-12-31 | 2019-07-12 | 中兴通讯股份有限公司 | A kind of method, apparatus and reception side apparatus of solution rate-matched |
CN105874736B (en) | 2014-03-19 | 2020-02-14 | 华为技术有限公司 | Polar code rate matching method and rate matching device |
CN106961317B (en) * | 2016-01-11 | 2020-05-26 | 中兴通讯股份有限公司 | Data sending method and device |
US10541781B2 (en) | 2016-01-29 | 2020-01-21 | Intel IP Corporation | Rate matching using low-density parity-check codes |
FI127335B (en) * | 2016-05-27 | 2018-04-13 | Cysec Ice Wall Oy | Logging of data traffic in a computer network |
JP2019149589A (en) * | 2016-07-08 | 2019-09-05 | シャープ株式会社 | Base station device, terminal, and integrated circuit |
JP2019165269A (en) * | 2016-07-28 | 2019-09-26 | シャープ株式会社 | Base station device, terminal device and communication method |
DK3308469T3 (en) | 2016-08-12 | 2020-06-02 | Ericsson Telefon Ab L M | Rate matching methods for LDPC codes |
US10389487B2 (en) | 2017-01-17 | 2019-08-20 | At&T Intellectual Property I, L.P. | Adaptive downlink control channel structure for 5G or other next generation networks |
CN108400832B (en) * | 2017-02-06 | 2022-09-09 | 华为技术有限公司 | Data processing method and communication device |
US10348329B2 (en) * | 2017-02-13 | 2019-07-09 | Qualcomm Incorporated | Low density parity check (LDPC) circular buffer rate matching |
KR102529800B1 (en) * | 2017-03-23 | 2023-05-09 | 삼성전자주식회사 | Method and apparatus for adjusting code rate of polar code |
CA3067724A1 (en) * | 2017-08-04 | 2019-02-07 | Qualcomm Incorporated | A rectangular interleaver design for polar codes |
US10700820B2 (en) * | 2017-12-21 | 2020-06-30 | Samsung Electronics Co., Ltd. | Modem chips and receivers for performing hybrid automatic repeat request processing |
US10972219B2 (en) * | 2018-09-24 | 2021-04-06 | Qualcomm Incorporated | LDPC interleaver design for improved error floor performance |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5878085A (en) * | 1997-08-15 | 1999-03-02 | Sicom, Inc. | Trellis coded modulation communications using pilot bits to resolve phase ambiguities |
US6081921A (en) * | 1997-11-20 | 2000-06-27 | Lucent Technologies Inc. | Bit insertion approach to convolutional encoding |
US20020015420A1 (en) * | 2000-07-03 | 2002-02-07 | Lg Electronics Inc. | Data rate matching method in 3GPP2 system |
US20060093059A1 (en) * | 2004-11-01 | 2006-05-04 | Kabushiki Kaisha Toshiba | Interleaver and de-interleaver systems |
US7468994B2 (en) * | 2002-02-27 | 2008-12-23 | Sony Corporation | Method and apparatus for interleave processing, and computer program product for interleave processing |
US20100023844A1 (en) * | 2006-10-24 | 2010-01-28 | Lg Electronics Inc. | Method for interleaving continuous length sequence |
USRE41498E1 (en) * | 1998-06-05 | 2010-08-10 | Samsung Electronics Co., Ltd | Device and methods for channel coding and rate matching in a communication system |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6378035B1 (en) * | 1999-04-06 | 2002-04-23 | Microsoft Corporation | Streaming information appliance with buffer read and write synchronization |
US7668914B2 (en) * | 2005-03-28 | 2010-02-23 | Alcatel Lucent | Milestone synchronization in broadcast multimedia streams |
US8074155B2 (en) * | 2006-09-28 | 2011-12-06 | Broadcom Corporation | Tail-biting turbo coding to accommodate any information and/or interleaver block size |
US8239711B2 (en) * | 2006-11-10 | 2012-08-07 | Telefonaktiebolaget Lm Ericsson (Publ) | QPP interleaver/de-interleaver for turbo codes |
US8140932B2 (en) * | 2007-11-26 | 2012-03-20 | Motorola Mobility, Inc. | Data interleaving circuit and method for vectorized turbo decoder |
-
2007
- 2007-12-11 US US11/953,922 patent/US7924763B2/en active Active
-
2011
- 2011-04-04 US US13/079,136 patent/US8520496B2/en active Active
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5878085A (en) * | 1997-08-15 | 1999-03-02 | Sicom, Inc. | Trellis coded modulation communications using pilot bits to resolve phase ambiguities |
US6081921A (en) * | 1997-11-20 | 2000-06-27 | Lucent Technologies Inc. | Bit insertion approach to convolutional encoding |
USRE41498E1 (en) * | 1998-06-05 | 2010-08-10 | Samsung Electronics Co., Ltd | Device and methods for channel coding and rate matching in a communication system |
US20020015420A1 (en) * | 2000-07-03 | 2002-02-07 | Lg Electronics Inc. | Data rate matching method in 3GPP2 system |
US7468994B2 (en) * | 2002-02-27 | 2008-12-23 | Sony Corporation | Method and apparatus for interleave processing, and computer program product for interleave processing |
US20060093059A1 (en) * | 2004-11-01 | 2006-05-04 | Kabushiki Kaisha Toshiba | Interleaver and de-interleaver systems |
US20100023844A1 (en) * | 2006-10-24 | 2010-01-28 | Lg Electronics Inc. | Method for interleaving continuous length sequence |
Non-Patent Citations (7)
Title |
---|
3GPP "Multiplexing and Channel Coding (FDD) (Release 6)," TS 25.212 v6.4.0 (Mar. 2005), 14 pages. |
Crozier, et al., "On Designing Turbo-Codes with Data Puncturing," Proceedings of the 2005 Canadian Workshop on Information Theory (CWIT 2005), Montréal, Quebec, Canada, Jun. 5-8, 2005, 4 pages. |
Ericsson, Motorola, et al.,"QPP Interleaver parameters," R1-071195, 3GPP RAN1#48, St. Louis (USA), Feb. 12-16, 2007, pp. 1-4. |
Ishii, "Draft Report of 3GPP TSG RAN WG1 #48," R1-070xxx, MCC Support, v0.2.0, "3GPP RAN1#48," St. Julians, Malta, Mar. 26-30 2007., 3 pages. |
Land, et al., "Partially Systematic Rate ½ Turbo Codes", Proc. 2nd Intl Symp. on Turbo Codes, Brest, France, pp. 287-290, Sep. 4-7, 2000. |
Motorola, et al., "EUTRA FEC Enhancement," R1-061050, 3GPP TSG RAN WG1#44bis, Athens, Greece. Mar. 27-31, 2006, 14 pages. |
Rowtich, et al., "On the Performance of Hybrid FEC/ARQ Systems Using Rate Compatible Punctured Turbo (RCPT) Codes," Communications, IEEE Transactions on vol. 48, Issue 6, Jun. 2000 pp. 948-959. |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9396140B1 (en) * | 2006-04-06 | 2016-07-19 | Marvell International Ltd. | Method and apparatus for transferring frames with different world wide name addresses and connection rates between initiators of a host device and a port |
US8560910B2 (en) * | 2007-10-01 | 2013-10-15 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US20100199157A1 (en) * | 2007-10-01 | 2010-08-05 | Panasonic Corporation | Wireless communication device and circular buffer control method |
US20090132885A1 (en) * | 2007-11-20 | 2009-05-21 | Samsung Electronics Co. Ltd. | System and method for retransmitting data in a communication system |
US20100218075A1 (en) * | 2009-02-02 | 2010-08-26 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US8214696B2 (en) * | 2009-02-02 | 2012-07-03 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US8375260B2 (en) | 2009-02-02 | 2013-02-12 | Lg Electronics Inc. | Apparatus and method for transmitting signal using bit grouping in wireless communication system |
US8843799B2 (en) * | 2010-01-04 | 2014-09-23 | Zte Corporation | Serial processing method, parallel processing method of bit rate matching and device thereof |
US20120185751A1 (en) * | 2010-01-04 | 2012-07-19 | Zte Corporation | Serial processing method, parallel processing method of bit rate matching and device thereof |
US8880812B1 (en) * | 2010-03-31 | 2014-11-04 | Marvell International Ltd. | WWN table management systems and methods |
US20120069915A1 (en) * | 2010-09-17 | 2012-03-22 | Electronics And Telecommunications Research Institute | Rate matching apparatus and rate matching method thereof |
US8555133B2 (en) * | 2010-09-17 | 2013-10-08 | Electronics And Telecommunications Research Institute | Rate matching apparatus and rate matching method thereof |
CN103797724A (en) * | 2011-07-25 | 2014-05-14 | 科迪纳系统有限公司 | Time varying data permutation apparatus and methods |
CN103797724B (en) * | 2011-07-25 | 2017-05-31 | 科迪纳系统有限公司 | Time-variable data displacement apparatus and method |
US11764814B2 (en) | 2017-02-10 | 2023-09-19 | Telefonaktiebolaget Lm Ericsson (Publ) | Circular buffer rate matching for polar codes |
US11277156B2 (en) | 2017-02-10 | 2022-03-15 | Telefonaktiebolaget Lm Ericsson (Publ) | Circular buffer rate matching for polar codes |
US11070316B2 (en) * | 2017-06-19 | 2021-07-20 | Huawei Technologies Co., Ltd. | Information processing method, apparatus, communications device, and communications system |
WO2019029397A1 (en) * | 2017-08-11 | 2019-02-14 | 华为技术有限公司 | Interleaving method and device |
US10972220B2 (en) | 2017-08-11 | 2021-04-06 | Huawei Technologies Co., Ltd. | Interleaving method and apparatus |
WO2019100236A1 (en) * | 2017-11-22 | 2019-05-31 | Qualcomm Incorporated | Circular buffer based hybrid automatic retransmission request for polar codes |
US11539456B2 (en) | 2017-11-22 | 2022-12-27 | Qualcomm Incorporated | Circular buffer based hybrid automatic retransmission request for polar codes |
CN109768843B (en) * | 2018-12-18 | 2021-09-03 | 京信网络系统股份有限公司 | Rate matching method, rate de-matching method, device and base station |
CN109768843A (en) * | 2018-12-18 | 2019-05-17 | 京信通信系统（中国）有限公司 | Speed matching method, dissociation rate matching method, device and base station |
Also Published As
Publication number | Publication date |
---|---|
US8520496B2 (en) | 2013-08-27 |
US20110176405A1 (en) | 2011-07-21 |
US20090147724A1 (en) | 2009-06-11 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7924763B2 (en) | Method and appratus for rate matching within a communication system | |
US7200181B2 (en) | Apparatus and method for generating and decoding codes in a communication system | |
EP2165445B1 (en) | Computationally efficient convolutional coding with rate-matching | |
ES2344299T3 (en) | METHOD AND DEVICE FOR ADAPTIVE CHANNEL CODING. | |
EP2171908B1 (en) | An apparatus comprising a circular buffer and method for assigning redundancy versions to a circular buffer | |
US7093185B2 (en) | Apparatus and method for generating codes in communication system | |
US8416794B2 (en) | Method for sub-packet generation with adaptive bit index | |
US7475330B2 (en) | Method and apparatus for generating a punctured symbol vector for a given information vector | |
KR100526512B1 (en) | Interleaving apparatus and method for serially concatenated convolution code in a mobile telecommunication system | |
EP1045521A2 (en) | Rate matching and channel interleaving for a communications system | |
KR101435830B1 (en) | Method of performing interleaving | |
US7873897B2 (en) | Devices and methods for bit-level coding and decoding of turbo codes |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:NIMBALKER, AJIT;BLANKENSHIP, YUFEI W.;CLASSON, BRIAN K.;REEL/FRAME:020225/0251Effective date: 20071210 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034421/0001Effective date: 20141028 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
CN116894128A - Independently presenting order status - Google Patents
Independently presenting order status Download PDFInfo
- Publication number
- CN116894128A CN116894128A CN202310944390.7A CN202310944390A CN116894128A CN 116894128 A CN116894128 A CN 116894128A CN 202310944390 A CN202310944390 A CN 202310944390A CN 116894128 A CN116894128 A CN 116894128A
- Authority
- CN
- China
- Prior art keywords
- status
- tracking identifier
- computing system
- user
- request
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000004044 response Effects 0.000 claims abstract description 52
- 238000000034 method Methods 0.000 claims abstract description 46
- 238000012546 transfer Methods 0.000 claims abstract description 9
- 230000000694 effects Effects 0.000 claims abstract description 7
- 230000015654 memory Effects 0.000 description 36
- 238000004891 communication Methods 0.000 description 33
- 230000006870 function Effects 0.000 description 12
- 238000004590 computer program Methods 0.000 description 8
- 230000014509 gene expression Effects 0.000 description 7
- 238000010586 diagram Methods 0.000 description 4
- 230000003993 interaction Effects 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 238000009877 rendering Methods 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 3
- 230000008569 process Effects 0.000 description 3
- 230000001413 cellular effect Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 206010008531 Chills Diseases 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 239000010409 thin film Substances 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
- 230000001755 vocal effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/08—Logistics, e.g. warehousing, loading or distribution; Inventory or stock management
- G06Q10/083—Shipping
- G06Q10/0833—Tracking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/904—Browsing; Visualisation therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/955—Retrieval from the web using information identifiers, e.g. uniform resource locators [URL]
- G06F16/9566—URL specific, e.g. using aliases, detecting broken or misspelled links
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/08—Logistics, e.g. warehousing, loading or distribution; Inventory or stock management
- G06Q10/083—Shipping
- G06Q10/0835—Relationships between shipper or supplier and carriers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/08—Logistics, e.g. warehousing, loading or distribution; Inventory or stock management
- G06Q10/083—Shipping
- G06Q10/0838—Historical data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0633—Lists, e.g. purchase orders, compilation or processing
- G06Q30/0635—Processing of requisition or of purchase orders
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
Abstract
The present disclosure relates to independently presenting order status. A method can include: the method includes identifying a tracking identifier in a hypertext transfer protocol (HTTP) request or response by analyzing the request or response, storing the tracking identifier, requesting a status of the item associated with the tracking identifier independent of the rendered browsing activity, the status indicating a location of the item, receiving the status, and providing the status for display.
Description
Technical Field
The present description relates to an improved user interface for tracking items.
Disclosure of Invention
The user can access the website and enter a tracking identifier to check the status of the user's order. Accessing the website can involve presenting separate pages to present the status of each order. The visited websites can indicate the transportation provider (shipping provider) and tracking identifier based on an address included in the web browser when the user is visiting each website. When a user accesses a website, the computing system can store a shipping provider and tracking identifier associated with the order. Independent of the user request, the computing system is able to retrieve and present the status of the order.
The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings, and from the claims.
Drawings
FIG. 1A illustrates a browser presenting a page in which a user can enter a tracking identifier for a good.
FIG. 1B illustrates the browser of FIG. 1A presenting a page after the user has entered the tracking identifier.
FIG. 1C illustrates the browser of FIGS. 1A and 1B presenting a page having a shipping status of the merchandise associated with the tracking identifier.
Fig. 2 shows a browser presenting the status of a plurality of commodities.
FIG. 3 is a block diagram of a computing system.
FIG. 4 is a timing diagram illustrating actions performed by a user, computing system, and server.
FIG. 5 is a flowchart illustrating functions performed by a computing system.
FIG. 6 is a flowchart illustrating a method performed by a computing system.
FIG. 7 illustrates an example of a computer device and a mobile computer device that can be used to implement the techniques described here.
Like reference symbols in the various drawings indicate like elements.
Detailed Description
Users can purchase goods for shipment to their home or other location. The user can purchase goods from the merchant's website or by calling the merchant on the phone. The merchant can send and/or transport the merchandise to the user via a third party transport provider. The goods and/or the shipment can be associated with a tracking identifier maintained by the shipment provider.
The user can access a website associated with and/or maintained by the transportation provider and enter the tracking identifier. The user may have goods shipped by multiple shipping providers maintaining multiple websites. The website can send a web page to the user in response to entry of the tracking identifier. The web page can indicate the status of the shipment. The status is an indication/description of the location of the item during transportation at the time of the transportation query. The status can include the logical location of the good, for example, information indicating the ready shipment, the expected delivery date, and/or the actual arrival or delivery time. The status can include the physical location of the merchandise, e.g., original location, over-registered location, local location (e.g., being delivered), etc. The physical location may be a general location, for example, an identification of a city. The physical location may be specific, for example, a specific coordinate or a radius (on the order of hundreds or thousands of feet) around a specific coordinate, or a street address. To check the status of multiple items, a user may have to visit multiple websites and enter multiple tracking identifiers.
The web browser, via which the user accesses the website and enters the tracking identifier, is able to store the shipping provider and the tracking identifier, reducing and simplifying user interaction with the web browser. The web browser can determine the transportation provider based on the domain name entered into the web browser and can determine the tracking identifier based on the value entered into the field and/or based on the query parameters included in a Uniform Resource Locator (URL). The web browser can request the status of the shipment and present the status to the user without the user having to access a website associated with and/or maintained by the shipment provider and without the user having to enter a tracking identifier. The presentation of the status of the plurality of shipped items from the plurality of shipping providers serves as a shortcut to which a plurality of user interactions (a user accessing a plurality of websites maintained by the plurality of shipping providers and entering a plurality of tracking identifiers) would otherwise be.
In addition to the description herein, the user may be provided with controls that allow the user to make selections as to whether and when the systems, programs, or features described herein may be able to gather information (e.g., information about websites that the user has accessed and data that the user has entered, such as tracking identifiers), and whether to present content (such as order status) to the user or communications from a web browser or remote server. In addition, certain data may be processed in one or more ways before it is stored or used in order to remove personally identifiable information (such as information that associates a user with a shipping provider, an item ordered by the user, and/or one or more locations to which the item is shipped). For example, the identity of a user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user may be summarized to where location information is obtained (such as to a city, zip code, or state level) such that the location of a particular user cannot be determined. Thus, the user may control what information is collected about the user, how that information is used, and what information is presented to the user.
FIG. 1A illustrates a browser 100 presenting a page in which a user can enter a tracking identifier for a good. As used herein, a "tracking identifier" can include any number of symbols, such as letters, numbers, punctuation marks, and/or special characters, that identify the item being transported, including a waybill number, a transport reference number, or an air waybill number (AWB) number, as non-limiting examples. The browser 100 can include a web browser that can open an internet connection with a server and request content. The server is able to respond to the requested content. Browser 100 is capable of reading content received from a server and rendering and/or displaying the content on a screen and/or display of a computing system on which browser 100 is executing.
Browser 100 can include toolbar 102. Toolbar 102 is capable of receiving input from a user. Toolbar 102 can include address bar 106. The address bar 106 can include fields that receive text input, such as a Uniform Resource Locator (URL) 108A or a search query. Browser 100 is able to respond to text input by presenting content received from a remote computing device and associated with a URL or search query within viewing panel 104.
In the example shown in FIG. 1A, the user has entered and/or accessed URL 108A, "www.shipping.com/tracking". Part of "shipping. Com" of URL 108A identifies the domain and/or website maintained by/associated with the shipping provider. Browser 100 can initiate a hypertext transfer protocol (HTTP) request (such as "GET") that includes URL 108A as a request header. The browser 100 and/or a computing system in communication with the browser 100 can check the domain (e.g., "mapping.com") in the address bar 106 against a list of known transportation providers maintained by the browser 100 and/or a computing system in communication with the browser 100. In some examples, browser 100 and/or a computing system in communication with browser 100 can check a domain in address bar 106 against a list of known transportation providers and/or compare the domain to a list of known transportation providers in response to user entry of tracking identifier 124, as shown in fig. 1B. In some examples, browser 100 and/or a computing system in communication with browser 100 can check the fields in address bar 106 against a list of known transportation providers in response to the browser receiving content (e.g., status of an order) from a server maintained by the transportation provider, as shown in fig. 1C.
The portion "/tracking" of the URL identifies the subdirectories and/or subfolders maintained by the server. In this example, the subdirectories and/or subfolders are subdirectories and/or subfolders that maintain the status of the shipment. The "www" portion of URL 108A indicates that the page rendered in viewing panel 104 of browser 100 is part of a collection of linked hypertext documents forming the world wide web that can be viewed on a web browser, such as browser 100.
Toolbar 102 can include back button 114. Browser 100 can respond to user selection of back button 114 by returning address bar 106 and view panel 104 to the previous page. Toolbar 102 can include forward button 116. Browser 100 can respond to user selection of forward button 116 by returning address bar 106 and view panel 104 to a page within the navigation hierarchy in the opposite direction from back button 114. Toolbar 102 can include refresh button 118. Browser 100 can respond to a user selecting refresh button 118 by requesting content associated with URL 108A included in address bar 106 and rendering the content in view panel 104.
The browser can include tabs 110. Tab 110 can be associated with URL 108A and content presented in viewing panel 104. Tab 110 can indicate content presented on viewing panel 104. In this example, tab 110 indicates a transport provider "shipper" that identifies the maintenance website. Browser 100 can also include add button 112. Browser 100 is able to respond to user selection of add button 112 by creating an additional tab to enable browser 100 to maintain pages associated with multiple URLs.
Based on content received from the server based on URL108A, view panel 104 is able to present text 120A and fields 122. In this example, text 128 includes "Enter Tracking Number (enter tracking number:)", prompting the user to enter a tracking identifier associated with the shipment into field 122. The field 122 can include a text field that receives text input from a user and sends the text input to a server that maintains a website associated with the URL 108A.
FIG. 1B illustrates the browser 100 of FIG. 1A presenting the page after the user has entered the tracking identifier 124. Browser 100 presents the rendered page in viewing panel 104 based on content received from the server associated with URL 108A. In this example, the user has entered tracking identifier 124"123456789" into field 122. In response to receiving the tracking identifier (and optionally, the user selecting a control indicating that the tracking identifier is complete), browser 100 sends tracking identifier 124 to the server associated with URL108A, e.g., as a query to the server. The query may be issued as an HTTP request (e.g., a "GET") that includes the tracking identifier as a query parameter. The HTTP request may include a URL similar to URL 108B in the request header. In some examples, as part of issuing the request, browser 100 can be configured to analyze the URL to identify the tracking identifier and the transportation provider (e.g., via a domain in the URL).
FIG. 1C illustrates the browser 100 of FIGS. 1A and 1B presenting a page having a shipping status of the merchandise associated with the tracking identifier. In this example, the URL 108B included in the address bar 106 has been updated based on the request (query) associated with entering the identifier 124 into the field 122. URL 108A has been appended with "? number=123456789 "to generate URL 108B shown in fig. 1C. In some examples, as part of receiving an HTTP response to an HTTP request, browser 100 can be configured to analyze a URL (e.g., URL 108B) to identify a tracking identifier and a transportation provider. Thus, embodiments include a browser 100 configured to intercept a requested URL (e.g., as part of an HTTP request) or a provided URL (e.g., as part of an HTTP response) with user permissions and analyze the URL to identify a tracking identifier and a transport provider.
Appendages "? number=123456789 "includes a special character, in this example a question mark (". The append includes a key "number" and a value "123456789" separated by an equal sign ("="). The key indicates the name of the variable in the parameter (tracking identifier) and the value indicates the value of the variable (which is entered by the user, as shown in fig. 1B).
In some examples, the computing system on which browser 100 is executing and/or another computing system in communication with browser 100 can analyze the URL (e.g., URL 108B) to determine whether the URL includes a question mark indicating that the URL parameter follows, and to determine whether a field included in URL 108B (such as "shivering. Com" in the example shown in fig. 1C) is included in a list of transport providers stored by the computing system on which browser 100 is executing and/or the computing system with which browser 100 is executing. If the domain included in URL 108B is included in the list of transport providers, the computing system on which browser 100 is executing and/or the computing system with which browser 100 is in communication can store the values associated with the transport providers and the values associated with the user based on the domain included in the list. In some examples, after determining that the domain included in URL 108B is included in the list of transport providers and before storing the value, the computing system can determine that the value matches a pattern associated with the transport provider (such as having a predetermined number of digits after processing by an algorithm associated with the transport provider or having a hash value associated with the transport provider). The computing system can determine whether the value or URL matches the pattern as a whole by checking whether the value or URL matches a pre-stored regular expression representing the pattern for querying the specific tracking information of the specific transportation provider. Based on the matching with the regular expression, the computing system may determine that the value or URL corresponds to a request for tracking information for a particular delivery of the particular transportation provider. Multiple regular expressions, which may each correspond to a different transportation provider, may be pre-stored by the computing system and matched with a certain value or a certain URL to determine whether the URL corresponds to a tracking request. In some examples, the computing system can store the value based on the domain being included in the list and matching the value with a pattern associated with the transportation provider.
In some examples, the list of transport providers and associated domains can be manually generated by a user or administrator entering the names of the transport providers and domains. In some examples, the list of transport providers and associated domains can be semi-automatically generated based on a user or administrator expanding a page marked with tracking information via a browser. In some examples, the list of shipping providers and associated domains can be automatically generated by a computer function that reviews the content of the web pages in the search index and retrieves the names and domains of the web pages as if including tracking information. In some implementations, a regular expression that may be used by a computing system to determine whether a URL or a value in a URL corresponds to a tracking request may be manually generated by the computing system based on analyzing a page with tracking information from a user or administrator and based on input generated by one or more regular expressions. In some implementations, the computing system can employ a semi-automatic method for identifying tracking requests by using a machine learning model that uses URLs as training inputs that have been labeled as tracking requests, e.g., based on manual analysis by a user.
The computing system on which browser 100 is executing and/or the computing system in communication with browser 100 is capable of performing the actions and/or functions described above multiple times. The computing system on which browser 100 is executing and/or the computing system in communication with browser 100 can store a plurality of tracking identifiers associated with one or more transport providers (a single transport provider can be associated with a plurality of tracking identifiers). The transportation provider can be associated with a domain (such as "shipper. Com" in the examples of fig. 1A, 1B, and 1C).
Fig. 2 shows the browser 100 presenting the state of a plurality of items 204A, 204B, 204C. Browser 100 can have similar features and/or functionality as described with respect to fig. 1A, 1B, and 1C. As described above, the items 204A, 204B, 204C can be items that a user checks for status by requesting status from a website maintained by the transportation provider. Browser 100 can present a state in response to a trigger, such as launching the browser, launching a new browser window, or opening a new tab on the browser, such as in response to the user selecting add button 112 described above.
The address bar 106 can include an address 108C. In some examples, address 108C can identify a location in memory accessible to browser 100 and/or a computing system that includes information about tracked shipments stored by browser 100 and/or a computing system in communication with the browser. In some examples, address 108C can identify a data store such as a file or database. In some examples, address 108C can include a field associated with a remote website that stores information about tracked shipments.
Browser 100 can include a search bar field 202. The search bar field 202 is capable of receiving text input from a user. Browser 100 can respond to text entered into search field 202 by searching for terms included in the text input, and/or terms similar to terms included in the text input, in the tracked merchandise.
The browser 100 is capable of presenting one or more tracked items 204A, 204B, 204C in the viewing panel 104. The tracking merchandise 204A, 204B, 204C can be merchandise for which the browser 100 and/or a computing system in communication with the browser 100 stores tracking identifiers associated with the transportation provider, such as tracking identifier 124 included in URL 108B. For each tracked commodity 204A, 204B, 204C, the browser 100 can present any combination of: images 206A, 206B, 206C of the merchandise, textual descriptions of the merchandise 208A, 208B, 208C, merchandise providers 210A, 210B, 210C of the merchandise (e.g., shippers or sellers), and/or values 212A, 212B, 21C of the merchandise (e.g., price or other attributes). The browser 100 may have determined and/or retrieved the images 206A, 206B, 206C, text descriptions of the goods 208A, 208B, 208C, the goods providers 210A, 210B, 210C, and/or the values 212A, 212B, 212C based on emails associated with the user of the browser 100 and/or websites accessed by the user of the browser 100.
For each tracked commodity 204A, 204B, 204C, the browser 100 can present an order status 214A, 214B, 214C. The order status 214A, 214B, 214C can indicate a shipping status of the tracked items 204A, 204B, 204C. The order status 214A, 214B, 214C can indicate, for example, whether the tracked merchandise 204A, 204B, 204C has been delivered, the date the merchandise 204A, 204B, 204C is expected to be delivered, or that a shipment and arrival estimate is in progress.
The computing system on which browser 100 is executing and/or the computing system in communication with the browser can determine the order status 214A, 214B, 214C by requesting and/or querying the order status 214A, 214B, 214C from a server maintaining the order status 214A, 214B, 214C, such as a server maintaining a website that the user initially checked the order status 214A, 214B, 214C (as shown in fig. 1A, 1B, and 1C). The computing system on which browser 100 is executing and/or the computing system in communication with the browser can, for example, send the respective tracking identifier to the respective server maintaining the respective website, receive the order status associated with the respective tracking identifier, and provide the order status to browser 100 for presentation to the user, as shown in fig. 2.
Fig. 3 is a block diagram of a computing system 300. Computing system 300 can include a computing system on which browser 100 is executing and/or a computing system in communication with browser 100.
The computing system 300 can include a transport provider determiner 302. The transport provider determiner 302 can determine a transport provider for tracking the merchandise. The transport provider determiner 302 can determine a transport provider based on, for example, a domain included in a URL (such as URL 108B) entered by a user into an address bar (such as address bar 106) matching a domain included on a list of known transport providers.
The computing system 300 can include a tracking identifier determiner 304. The tracking identifier determiner 304 can determine a tracking identifier of an item ordered and/or tracked by a user associated with a transportation provider. The tracking identifier determiner 304 can determine a tracking identifier based on, for example, a value included in a URL parameter of a URL (such as the value "123456789" included in URL 108B shown in fig. 1C). The transport provider determiner 302 and/or the tracking identifier determiner 304, alone or both, may be implemented by one or more regular expressions matching the URL.
In some examples, rather than determining the transportation provider and tracking identifier when the user enters an address into the address bar, the transportation provider determiner 302 and tracking identifier determiner 304 can determine the transportation provider and tracking identifier based on a set of web pages accessed by the user (such as via a browser history, search history, or search engine results page associated with the user), respectively. In some examples, browser 100 may prompt the user to add the transportation provider and tracking identifier to a list of transportation providers and tracking identifiers stored by computing system 300 associated with the user when the user accesses the page (such as when computing system 300 presents the page shown in fig. 1C to the user). In some examples, the transportation provider determiner 302 and tracking identifier determiner 304 can determine the transportation provider and tracking identifier based on an email received by an account associated with the user, respectively. In some examples, the transportation determiner 302 and/or tracking identifier determiner 304 can search for the transportation provider and tracking identifier in the email in response to a user request, such as a user selecting a button or link prompting the transportation determiner 302 and/or tracking identifier determiner 304 to search for the user's email.
The computing system 300 can include a content extractor 306. The content extractor 306 is capable of extracting content from a remote server. The content extractor 306 can extract content by, for example, sending a hypertext transfer protocol (HTTP) request to a server associated with the URL. The content extractor 306 can initiate an HTTP request (e.g., a "GET") that includes the URL as a request header. In the example shown in fig. 1A, the content extractor 306 can send an HTTP request to a server associated with the domain "shipper. Com" and request content associated with the subfolder and/or subdirectory "tracking". In response to receiving the requested content, the computing system 300 is able to render and present the content, such as that shown in the viewing panel 104 of fig. 1A.
The computing system 300 can include a state requester 308. The status requester 308 can request the status of the shipped items from a server associated with the shipping provider. The status requester 308 can request status by sending a tracking identifier associated with the item to a server associated with the transport provider. The status requester 308 can receive status from the transport provider, such as the date the item arrived and/or was delivered, the date the item was expected to be delivered, or an indication that the arrival date has not been determined.
The computing system 300 can include a state presenter 310. The status presenter 310 is capable of providing and/or presenting the status of tracked merchandise to a user. The status presenter 310 is capable of providing and/or presenting the status of the merchandise for which status requester 308 requests status. The status presenter 310 is capable of providing and/or presenting status within a browser, such as within the viewing panel 104 of the browser 100 as shown in FIG. 2. In some examples, computing system 300 can suppress presentation of certain previously tracked merchandise, and/or cease tracking certain previously tracked merchandise (such as by erasing tracking identifiers and/or shipping providers stored in association with the merchandise), such as in response to a request from a user to hide and/or not track the status of the merchandise (such as a user selecting a button or link). For example, a user may wish to prevent other users from knowing about orders for shipments and/or merchandise from being accidentally destroyed. In some examples, the computing system 300 can erase/delete tracking identifiers and/or transport providers associated with the merchandise, such as a predetermined time (e.g., month) after initial storage and/or a predetermined time (e.g., week/month) after delivery of the merchandise. Delivery of the commodity may be determined based on the status information obtained by the status requester 308.
The computing system 300 can include at least one processor 312. The at least one processor 312 is capable of executing instructions, such as instructions stored in the at least one memory device 314, to cause the computing system 300 to perform any combination of the methods, functions, and/or techniques described herein, such as implementing the browser 100 described herein.
The computing system 300 can include at least one memory device 314. The at least one memory device 314 can include a non-transitory computer-readable storage medium. The at least one memory device 314 is capable of storing data (e.g., transport provider and tracking identifier) and instructions thereon that, when executed by the at least one processor (e.g., processor 312), are configured to cause the computing system 300 to perform any combination of the methods, functions, and/or techniques described herein. Thus, in any of the embodiments described herein (even if not explicitly indicated in connection with a particular embodiment), software (e.g., processing modules, stored instructions) and/or hardware (e.g., processors, memory devices, etc.) associated with or included in computing system 300 can be configured to perform any combination of the methods, functions, and/or techniques described herein, alone or in combination with computing system 300.
The computing system 300 can include at least one input/output node 316. The at least one input/output node 316 may receive data from and/or transmit data to a server, for example, and/or may receive input from and provide output to a user. The input and output functions may be combined into a single node or may be divided into separate input and output nodes. Input/output nodes 316 can include, for example, a display, camera, speaker, microphone, keyboard, mouse, and/or one or more wired or wireless interfaces for rendering browser 100 for communication with other computing devices.
Fig. 4 is a timing diagram illustrating actions performed by the user 402, the computing system 300, and the servers 404, 406. These actions can be associated with the user 402 requesting the status of the shipped item, and the computing system 300 presents the status of the shipped item to the user 402 without a user request.
The user 402 may wish to determine the status of the first shipped item and be able to enter and/or input the page address 408 into the computing system 300. The page address 408 can include a resource identifier, such as the URL 108A shown in fig. 1A. In some examples, the user can type a resource identifier (e.g., URL 108A) to a keyboard included in computing system 300.
The computing system 300 can respond to receiving the page address 408 from the user 402 by sending a content request 410 to the first server 404 associated with the domain included in the page address 408 received from the user. The content request 410 can include an internet request for content and/or files, such as a hypertext transfer protocol (HTTP) request (as used herein, an HTTP request includes a Hypertext Transfer Protocol Secure (HTTPs) request, and an HTTP response includes an HTTPs response).
The first server 404 can respond to receiving the content request 410 from the computing system 300 by sending the requested content 412 to the computing system 300. Content 412 can include HTTP responses or HTTPs responses, and can include markup language (e.g., hypertext markup language (HTML)) files and/or pages.
Computing system 300 can respond to receiving content 412 from server 404 by presenting content 414 to user 402. The computing system 300 can present the content 414 to the user in the form of a web page (such as the web page shown in the viewing panel 104 of fig. 1A).
The user can enter the tracking identifier 416 into the computing system 300. For example, the user can type the tracking identifier 416 into a field included in the content 414 presented by the computing system, such as by entering the tracking identifier 124 into the field 122 shown in fig. 1B. In some examples, a user may request that a search engine perform an internet search using a name of a transportation provider and a tracking identifier. In some examples, the search engine may provide as search results a UI element (e.g., a hyperlink, button, or other similar control) that the user may select and/or click on, the UI element submitting a request including a domain name of the transportation provider and query parameters including a tracking identifier. The request may include a URL similar to URL 108B shown in fig. 1C. In such examples, the browser may receive a response to the request and update the UI with the status information, for example, in a search results page.
In response to receiving the tracking identifier, the computing system 300 can store the tracking identifier in association with the transportation provider (417). In some examples, computing system 300 can present user 402 with an option to add an item to a list of tracked items and/or shipments associated with the user. In some examples, computing system 300 can store a description of the merchandise, an image representing the merchandise (such as a picture of the merchandise), or a cost of the merchandise in association with the tracking identifier. In response to receiving the tracking identifier, the computing system 300 is also capable of transmitting the tracking identifier 418 to the first server 404.
In response to receiving tracking identifier 418, server 404 can determine a status of the order associated with tracking identifier 418 (419). Server 404 can determine the status (419), for example, by retrieving the status from a database associated with tracking identifier 418. The first server 404 can send the determined state 420 to the computing system 300. The state 420 can include an HTTP response and can include an HTML file indicating the status of the shipped item. In response to receiving state 420, computing system 300 can present state 422 to user 402, such as by presenting the state with text in viewing panel 104 of browser 100, as shown in FIG. 1C.
If the user 402 wishes to check the status of the second item, the user 402 can enter the page address 424 into the computing system 300 in a similar manner as 408, the computing system 300 can send the content request 426 to the second server 406 associated with the domain included in the page address 424 in a similar manner as 410, the second server 406 can send the content 428 to the computing system 300 in a similar manner as 412, and the computing system 300 can present the content 430 to the user 402 in a similar manner as 414.
After viewing content 430, user 402 can enter tracking identifier 432 in a similar manner as 416, computing system 300 can store tracking identifier 433 in a similar manner as 417, computing system 300 can send tracking identifier 434 to second server 406 in a similar manner as 418, second server 406 can determine the status of the order 435 in a similar manner as 419, and after determining status 435, second server 406 can send status 436 to computing system 300 in a similar manner as 420. In response to receiving state 436, computing system 300 can present state 438 to user 402 in a similar manner as 422. The user 402 can request, and the computing system 300 can present, the status of any identifiers of the shipped items.
The computing system 300 can later present the status of the shipped items without a request from the user 402, for example without the user providing an identification and/or tracking identifier of the shipped items, and/or independent of any request or rendered browsing activity from the user 402. In some examples, the computing system 300 is capable of presenting a status of the shipped items in response to the trigger (440). Triggering can include, for example, the user 402 opening and/or launching the browser 100, opening and/or launching a new window of the browser 100, opening a new tab on the browser 100, selecting a particular button or menu option provided by the browser 100, and/or the user accessing a particular page on the browser 100. For example, the particular page may not be associated with a domain and/or URL, and/or may not include an internet domain suffix (such as ". Com", ". Org", or ". Edu"), indicating that the particular page does not prompt the computing system 300 to request content associated with the URL, but rather prompts the computing system 300 to invoke a particular function (in this example, to present an order status).
The computing system 300 is able to determine the status of the shipped items by requesting the status 442, 444 of the shipped items from the servers 404, 406. The computing system 300 requesting the status 442, 444 can include querying the server 404, 406 maintained by the transport provider for the status associated with the tracking identifier. In some examples, the computing system 300 is capable of querying the servers 404, 406 for a state associated with a tracking identifier by calling an Application Programming Interface (API), wherein the tracking identifier and/or an identifier of the transport provider is included as an argument in the API call. The API may be developed by the transportation provider, the manufacturer of the browser 100, or by a third party. The computing system 300 is able to request the states 442, 444 by sending the tracking identifiers stored at (417, 433) to the servers 404, 406. The servers 404, 406 can respond to receiving the request for the states 442, 446 by determining the states 446, 448 and sending them to the computing system 300. The computing system 300 can respond to the received states 446, 448 by presenting the state 450 to the user 402. In some examples, computing system 300 can present state 450 to user 402 by presenting state 450 in view panel 104 of browser 100, as shown in the example of fig. 2. In some examples, computing system 300 can present the status to user 402 by sending an email or other electronic message to user 402 that includes the status of the shipped items.
Fig. 5 is a flowchart illustrating the functions performed by computing system 300. The computing system 300 is able to receive input from the user 402 (502). In some examples, computing system 300 can receive a URL, such as URL 108B shown in fig. 1C, for example. The URL can be received as input to the address bar 106 as an HTTP request or HTTP response. In some examples, computing system 300 can receive the tracking identifier from user 402 via field 122 and send the tracking identifier to a server maintained by the transportation provider and generate URL 108B in response to the user entering tracking identifier 124 (e.g., "123456789") into field 122. In some examples, computing system 300 can receive a search query from user 402 that identifies a transportation provider and includes a tracking identifier.
The computing system 300 can determine whether the received input includes a tracking identifier (504). In some examples, computing system 300 can determine whether the received input includes a tracking identifier in conjunction with and/or based on determining that the received input identified a transport provider (such as based on the URL including a domain of the transport provider included in a list of transport providers stored and/or maintained by computing system 300) (504). In some implementations, this determination can be based on, for example, input to a field such as field 122. In some implementations, the determination can be based on a page and/or URL included in a received input associated with a known transportation provider and having a query parameter (such as the value "123456789" in the example shown in fig. 1C). In some implementations, the determination can be based on pattern matching with the query parameters. In some implementations, the determination can be based on matching the regular expression to the URL or a value identified in the URL. In some implementations, a model trained to identify tracking identifiers in URLs may be used for determination. In some implementations, the model can be trained to track identifiers and transport providers from URL identifications. If the computing system 300 determines that the received input includes a tracking identifier, the computing system 300 can store the tracking identifier in association with the transportation provider (506). After storing the tracking identifier (506), the computing system 300 can request content from a server (508), such as any of the servers 404, 406 shown and described with respect to fig. 4.
If the computing system 300 determines that the input does not include a tracking identifier, the computing system 300 can request content from the server (508). Requesting content (508) can include requesting content, such as by sending an HTTP request to a server associated with a domain included in the received input. The server can respond to the request for content by sending the content (such as an HTML file included in an HTTP response) to the computing system 300.
The computing system 300 is capable of receiving content, such as HTML files, from a server (510). The computing system 300 is capable of rendering and presenting the received content to a user, such as by presenting the content in the viewing panel 104 of the browser 100 executing on the computing system 300 (512).
While a browser, such as browser 100, is executing on computing system 300, computing system 300 can determine if a trigger condition is satisfied (514). Satisfaction of the trigger condition can prompt the browser 100 executing on the computing system 300 and/or in communication with the computing system 300 to present the status of the order and/or merchandise, independent of and/or without user request or rendered browsing activity. The trigger condition can include, for example, the browser 100 launching and/or a new tab on the browser 100 opening the add button 112, such as in response to a user 402 selection (such as by clicking), or the user 402 accessing a particular page on the browser 100. If the computing system 300 determines that the trigger condition has not been met, the computing system 300 can continue to receive input from the user 402 (502).
If the computing system 300 determines that the trigger condition has been met and/or met, the computing system 300 can initiate a process, such as by invoking a function, to present the order status to the user 402. The process can include the computing system 300 requesting a status of the order and/or shipping of the merchandise associated with the user 402 (516). Requesting the status (516) can include requesting the status 442, 444, for example, by sending a tracking identifier to the server 404, 406, as shown and described in the example of fig. 4. The computing system 300 can receive states (518) from the server, such as the received states 446, 448 shown and described in the example of fig. 4. The computing system 300 can present the status of the order and/or merchandise (520) to the user 402 (520), as shown and described in the examples of fig. 2 and 4.
Fig. 6 is a flowchart illustrating a method 600 performed by a computing system. The method 600 can include identifying a tracking identifier (602), such as by analyzing a hypertext transfer protocol (HTTP) request or response to identify the tracking identifier in the request or response. The method 600 can include storing a tracking identifier (604). The method 600 can include requesting a status of the item associated with the tracking identifier independent of the rendered browsing activity (606). The status can indicate the location of the merchandise. The method 600 can include receiving state (608). The method 600 can include providing a status for display (610).
In some examples, method 600 can be performed by a web browser, and the web browser can provide the status in response to a trigger.
In some examples, triggering can include opening a new browser window.
In some examples, triggering can include opening a new tab on the browser.
In some examples, the method 600 can further include erasing the tracking identifier in response to a request to conceal the status of the merchandise.
In some examples, providing the status (610) can include presenting the status to the user independent of the user requesting access to a web page associated with the transportation provider.
In some examples, the method 600 can also identify a transport provider included in the request or response.
In some examples, requesting the status associated with the tracking identifier (606) can include querying the transportation provider for the status associated with the tracking identifier.
In some examples, determining the tracking identifier can include determining that an address included in the request or response is associated with the transportation provider, and determining the tracking identifier based on a query parameter included in the address included in the request or response.
In some examples, identifying the transport provider can include comparing the domain included in the address of the request to a list of domains associated with known transport providers.
In some examples, the identification of the tracking identifier can include determining the tracking identifier based on a query parameter included in an address included in the request.
In some examples, the HTTP request can include a search request including a tracking identifier.
In some examples, method 600 can be performed by a web browser and the web browser can present a state in response to the web browser launching.
Some of the described implementations enable identification of URLs related to tracking of shipments. Some embodiments relate to tracking a problem with physical devices (shipments) through the physical world outside of a computing system, which corresponds to determining the location of physical goods and is a technical problem addressed by the embodiments.
FIG. 7 illustrates an example of a general purpose computer device 700 and a general purpose mobile computer device 750 that can be used with the techniques described here. Computing device 700 is intended to represent various forms of digital computers, such as laptops, desktops, tablets, workstations, personal digital assistants, televisions, servers, blade servers, mainframes, and other appropriate computing devices. Computing device 750 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations described and/or claimed in this document.
Computing device 700 includes a processor 702, memory 704, storage device 706, a high-speed interface 708 connected to memory 704 and high-speed expansion ports 710, and a low-speed interface 712 connected to low-speed bus 714 and storage device 706. The processor 702 can be a semiconductor-based processor. The memory 704 can be a semiconductor-based memory. Each of the components 702, 704, 706, 708, 710, and 712, are interconnected using various buses, and may be mounted on a common motherboard or in other manners as appropriate. The processor 702 is capable of processing instructions, including instructions stored in the memory 704 or on the storage device 706, for execution within the computing device 700 to display graphical information for a GUI on an external input/output device, such as a display 716 coupled to the high speed interface 708. In other embodiments, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and memory types. Moreover, multiple computing devices 700 may be connected, with each device providing a portion of the necessary operations (e.g., as a server bank, a group of blade servers, or a multiprocessor system).
Memory 704 stores information within computing device 700. In one implementation, the memory 704 is a volatile memory unit or units. In another implementation, the memory 704 is one or more non-volatile memory units. Memory 704 may also be other forms of computer-readable media, such as a magnetic or optical disk.
The storage device 706 may provide mass storage for the computing device 700. In one implementation, the storage device 706 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. The computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more of the methods such as those described above. The information carrier is a computer-or machine-readable medium (such as the memory 704, the storage device 706, or memory on processor 702).
The high-speed interface 708 manages bandwidth-intensive operations for the computing device 700, while the low-speed controller 712 manages lower bandwidth-intensive operations. Such allocation of functions is merely exemplary. In one embodiment, the high-speed interface 708 is coupled to the memory 704, the display 716 (e.g., via a graphics processor or accelerator), and to a high-speed expansion port 710 that can accept various expansion cards (not shown). In an implementation, low-speed interface 712 is coupled to storage device 706 and low-speed expansion port 714. The low-speed control port 714, which may include various communication ports (e.g., USB, bluetooth, ethernet, wireless ethernet), may be coupled to one or more input/output devices, such as a keyboard, pointing device, scanner, or to networking devices such as switches and routers, for example, through a network adapter.
As shown, computing device 700 may be implemented in a number of different forms. For example, it may be implemented as a standard server 720, or multiple times in such a server packet. It may also be implemented as part of a rack server system 724. In addition, it may also be implemented in a personal computer such as a laptop computer 722. Alternatively, components from computing device 700 may be combined with other components in a mobile device (not shown), such as device 750. Each such device may contain one or more of computing devices 700, 750, and the entire system may be made up of multiple computing devices 700, 750 communicating with each other.
Computing device 750 includes a processor 752, memory 764, input/output devices such as a display 754, a communication interface 766, and a transceiver 768, among other components. The device 750 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of the components 750, 752, 764, 754, 766, and 768, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
The processor 752 is capable of executing instructions within the computing device 750, including instructions stored in the memory 764. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. For example, the processor may provide for coordination of the other components of the device 750, such as control of user interfaces, applications run by device 750, and wireless communication by device 750.
The processor 752 may communicate with a user through a control interface 758 and a display interface 756 coupled to a display 754. The display 754 may be, for example, a TFT LCD (thin film transistor liquid crystal display) or an OLED (organic light emitting diode) display, or other suitable display technology. The display interface 756 may comprise appropriate circuitry for driving the display 754 to present graphical and other information to a user. The control interface 758 may receive commands from a user and convert them for submission to the processor 752. Further, an external interface 762 may be arranged in communication with processor 752, thereby enabling near field communication of device 750 with other devices. For example, the external interface 762 may provide wired communication in some embodiments, or wireless communication in other embodiments, and multiple interfaces may also be used.
The memory 764 stores information within the computing device 750. The memory 764 can be implemented as one or more computer-readable media or mediums, one or more volatile memory units, or one or more non-volatile memory units. Expansion memory 774 may also be provided and connected to device 750 through expansion interface 772, which expansion interface 772 may include, for example, a SIMM (Single in line memory array Module) card interface. Such expansion memory 774 may provide additional storage space for device 750, or may also store applications or other information for device 750. In particular, expansion memory 774 may include instructions to carry out or supplement the processes described above, and may include secure information also. For example, expansion memory 774 may thus be provided as a secure module for device 750, and may be programmed with instructions that allow secure use of device 750. Further, secure applications may be provided via the SIMM cards, as well as additional information, such as setting identification information on the SIMM cards in a non-destructible manner.
For example, as discussed below, the memory may include flash memory and/or NVRAM memory. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more of the methods such as those described above. The information carrier is a computer-or machine-readable medium, such as the memory 764, expansion memory 774, or memory on processor 752, which may be received, for example, over transceiver 768 or external interface 762.
The device 750 may communicate wirelessly through a communication interface 766, where the communication interface 766 may include digital signal processing circuitry, if desired. Communication interface 766 may provide for communication in various modes or protocols such as GSM voice calls, SMS, EMS, or MMS messages, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 768. Further, short-range communications may be performed, such as using a Bluetooth, wiFi, or other such transceiver (not shown). In addition, GPS (global positioning system) receiver module 770 may provide additional navigation-and location-related wireless data to device 750 that may be used as appropriate by applications running on device 750.
The device 750 may also communicate audibly using an audio codec 760, which audio codec 760 may receive verbal information from a user and convert it to usable digital information. Audio codec 760 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 750. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.), and may also include sound generated by applications running on device 750.
As shown, the computing device 750 may be implemented in a number of different ways. For example, it may be implemented as a cellular telephone 780. It may also be implemented as part of a smart phone 782, personal digital assistant, or other similar mobile device.
Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various embodiments can include embodiments in one or more computer programs executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
These computer programs (also known as programs, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium," computer-readable medium "and/or" computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices can also be used to provide interaction with a user; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
The systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
The computing system can include clients and servers. The client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Many embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the embodiments described herein.
Moreover, the logic flows depicted in the figures do not require the particular order shown, or sequential order, to achieve desirable results. Further, other steps may be provided from the described flows, or steps may be omitted, and other components may be added to or removed from the described systems. Accordingly, other embodiments are within the scope of the following claims.
Claims (20)
1. A method, comprising:
identifying a tracking identifier in a hypertext transfer protocol HTTP request or response by analyzing the request or response;
storing the tracking identifier;
requesting a status of the merchandise associated with the tracking identifier, the status indicating a location of the merchandise, independent of the rendered browsing activity;
receiving the status; and
the status is provided for display.
2. The method according to claim 1, wherein:
the method is performed by a web browser; and
the web browser provides the status in response to a trigger.
3. The method of claim 2, wherein the triggering comprises opening a new browser window.
4. The method of claim 2, wherein the triggering comprises opening a new tab on a browser.
5. The method of claim 1, further comprising erasing the tracking identifier in response to a request to conceal the status of the merchandise.
6. The method of claim 1, wherein providing the status comprises presenting the status to a user independent of the user requesting access to a web page associated with a transportation provider.
7. The method of claim 1, further comprising identifying a transport provider included in the request or the response.
8. The method of claim 7, wherein requesting the status of the item associated with the tracking identifier comprises querying the transportation provider for the status of the item associated with the tracking identifier.
9. The method of claim 7, wherein identifying the tracking identifier comprises:
determining that an address included in the request or the response is associated with the transport provider; and
the tracking identifier is determined based on a query parameter included in the address included in the request or the response.
10. The method of claim 7, wherein identifying the transport provider comprises comparing the request Address ofThe included domains are compared to a list of domains associated with known transportation providers.
11. The method of claim 1, wherein the identifying of the tracking identifier comprises determining the tracking identifier based on a query parameter included in an address in the request.
12. The method of claim 1, wherein the HTTP request comprises a search request including the tracking identifier.
13. The method according to claim 1, wherein:
the method is performed by a web browser; and
the web browser renders the state in response to the web browser launching.
14. A non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by at least one processor of a computing system, cause the computing system to:
identifying a tracking identifier in a hypertext transfer protocol HTTP request or response by analyzing the request or response;
storing the tracking identifier;
requesting a status of the merchandise associated with the tracking identifier, the status indicating a location of the merchandise, independent of the rendered browsing activity;
receiving the status; and
The status is provided for display.
15. The non-transitory computer-readable storage medium of claim 14, wherein:
the computing system is configured to execute a web browser; and
the web browser provides the status in response to a user opening a new tab on the web browser.
16. The non-transitory computer-readable storage medium of claim 14, wherein providing the status comprises providing the status independent of a user requesting access to a web page associated with a transportation provider.
17. The non-transitory computer-readable storage medium of claim 14, wherein providing the status comprises providing the status in response to a trigger.
18. A computing system, comprising:
at least one processor; and
a non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by the at least one processor, cause the computing system to:
identifying a tracking identifier in a hypertext transfer protocol HTTP request or response by analyzing the request or response;
storing the tracking identifier;
requesting a status of the merchandise associated with the tracking identifier, the status indicating a location of the merchandise, independent of the rendered browsing activity;
Receiving the status; and
the status is provided for display.
19. The computing system of claim 18, wherein:
the computing system is configured to execute a web browser; and
the web browser provides the status in response to a user opening a new tab on the web browser.
20. The computing system of claim 18, wherein to provide the status comprises to provide the status independent of a user requesting access to a web page associated with a transportation provider.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/821,072 | 2022-08-19 | ||
US17/821,072 US20240062140A1 (en) | 2022-08-19 | 2022-08-19 | Independently presenting status of order |
Publications (1)
Publication Number | Publication Date |
---|---|
CN116894128A true CN116894128A (en) | 2023-10-17 |
Family
ID=88310706
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202310944390.7A Pending CN116894128A (en) | 2022-08-19 | 2023-07-28 | Independently presenting order status |
Country Status (3)
Country | Link |
---|---|
US (1) | US20240062140A1 (en) |
KR (1) | KR20240026087A (en) |
CN (1) | CN116894128A (en) |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7359887B1 (en) * | 1999-10-06 | 2008-04-15 | Stamps.Com Inc. | Apparatus, systems and methods for interfacing with digital scales configured with remote client computer devices |
US8903924B2 (en) * | 2011-12-09 | 2014-12-02 | International Business Machines Corporation | Aggregating data in electronic communications |
US20140250027A1 (en) * | 2013-03-04 | 2014-09-04 | United Parcel Service Of America, Inc. | Tracking information display systems and related methods |
-
2022
- 2022-08-19 US US17/821,072 patent/US20240062140A1/en active Pending
-
2023
- 2023-07-28 CN CN202310944390.7A patent/CN116894128A/en active Pending
- 2023-08-07 KR KR1020230102613A patent/KR20240026087A/en unknown
Also Published As
Publication number | Publication date |
---|---|
KR20240026087A (en) | 2024-02-27 |
US20240062140A1 (en) | 2024-02-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11750683B2 (en) | Computer application promotion | |
US10372791B2 (en) | Content customization | |
US8762401B2 (en) | System and method for automated data retrieval based on data placed in clipboard memory | |
US9940659B1 (en) | Category preferred layout for items in an electronic marketplace | |
US8645355B2 (en) | Mapping Uniform Resource Locators of different indexes | |
KR101748196B1 (en) | Determining message data to present | |
US20120265607A1 (en) | Click-to-reveal content | |
US20110099464A1 (en) | Mechanism for adding content from a search to a document or message | |
US20150193421A1 (en) | Web-Based Spreadsheet Interaction with Large Data Set | |
US11620444B2 (en) | Providing action associated with event detected within communication | |
US9684627B1 (en) | Determining a likelihood of completion of a task | |
US9286359B2 (en) | Providing enhanced business listings with structured lists to multiple search providers from a source system | |
US9424364B2 (en) | Integrated context-driven information search and interaction | |
US11558321B2 (en) | Integration of an email client with hosted applications | |
CN116894128A (en) | Independently presenting order status | |
WO2017196541A1 (en) | Enhancing contact card based on knowledge graph | |
US11736427B2 (en) | Integration of client applications with hosted applications | |
CA2907123A1 (en) | Content customization | |
KR102208027B1 (en) | Operation method of terminal, terminal, and phone number information server | |
US8869055B1 (en) | Universal item locator and acquisition tool | |
Dewasurendra | Sappu Savari-Location Based Advertising & Marketing System |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
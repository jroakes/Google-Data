EP3596616A1 - Coordination of overlapping processing of audio queries - Google Patents
Coordination of overlapping processing of audio queriesInfo
- Publication number
- EP3596616A1 EP3596616A1 EP19719040.8A EP19719040A EP3596616A1 EP 3596616 A1 EP3596616 A1 EP 3596616A1 EP 19719040 A EP19719040 A EP 19719040A EP 3596616 A1 EP3596616 A1 EP 3596616A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- digital assistant
- response
- component
- processing system
- data processing
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000012545 processing Methods 0.000 title claims abstract description 345
- 230000004044 response Effects 0.000 claims abstract description 300
- 238000000034 method Methods 0.000 claims description 105
- 230000005236 sound signal Effects 0.000 claims description 61
- 230000006870 function Effects 0.000 claims description 41
- 230000008569 process Effects 0.000 claims description 40
- 238000004590 computer program Methods 0.000 claims description 14
- 230000009471 action Effects 0.000 description 58
- 238000004891 communication Methods 0.000 description 19
- 230000005540 biological transmission Effects 0.000 description 13
- 239000003795 chemical substances by application Substances 0.000 description 12
- 230000036961 partial effect Effects 0.000 description 9
- 238000013515 script Methods 0.000 description 7
- 230000003993 interaction Effects 0.000 description 6
- 238000007726 management method Methods 0.000 description 6
- 230000000007 visual effect Effects 0.000 description 5
- 238000013500 data storage Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000000670 limiting effect Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 238000013475 authorization Methods 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 238000009877 rendering Methods 0.000 description 3
- 230000008859 change Effects 0.000 description 2
- 230000033001 locomotion Effects 0.000 description 2
- 238000001303 quality assessment method Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- 241001611138 Isma Species 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000003780 insertion Methods 0.000 description 1
- 230000037431 insertion Effects 0.000 description 1
- 230000002452 interceptive effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007257 malfunction Effects 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 238000012805 post-processing Methods 0.000 description 1
- 238000012913 prioritisation Methods 0.000 description 1
- 230000002829 reductive effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000013518 transcription Methods 0.000 description 1
- 230000035897 transcription Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000001052 transient effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/60—Information retrieval; Database structures therefor; File system structures therefor of audio data
- G06F16/63—Querying
- G06F16/632—Query formulation
- G06F16/634—Query by example, e.g. query by humming
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2458—Special types of queries, e.g. statistical queries, fuzzy queries or distributed queries
- G06F16/2471—Distributed queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3329—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/60—Information retrieval; Database structures therefor; File system structures therefor of audio data
- G06F16/63—Querying
- G06F16/632—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/60—Information retrieval; Database structures therefor; File system structures therefor of audio data
- G06F16/63—Querying
- G06F16/638—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/26—Speech to text systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
- G06F40/35—Discourse or dialogue representation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
Definitions
- Excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices can prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or responding timely to the network traffic data.
- the excessive network transmissions of network traffic data can also complicate data routing or degrade the quality of the response if the responding computing device is at or above its processing capacity, which may result in inefficient bandwidth utilization.
- a portion of the excessive network transmissions can include transmissions for requests that are not valid requests.
- At least one aspect is directed to a system to coordinate overlapping processing of audio queries.
- the system can include a data processing system.
- the data processing system can include at least one processor and memory.
- the data processing system can receive, via an interface, one or more data packets including an audio signal detected by a sensor of a computing device.
- the data processing system can generate a query based on the audio signal received via the one or more data packets.
- the data processing system can transmit the query to a plurality of digital assistant components.
- the data processing system can receive a first response to the query from a first digital assistant component of the plurality of digital assistant components.
- the data processing system can receive a second response to the query from a second digital assistant component of the plurality of digital assistant components.
- the first digital assistant component can be authorized to access a database the second digital assistant component is prohibited from accessing.
- the data processing system can determine, based on a ranking decision function, to select the second response from the second digital assistant component instead of the first response from the first digital assistant component.
- the data processing system can provide, responsive to the selection, the second response from the second digital assistant component to the computing device.
- the data processing system may be configured to select the second response from the second digital assistant component based on a pre-configured preference established for the second digital assistant component.
- the data processing system may be configured to select the second response from the second digital assistant component based on a confidence score for the second response from the second digital assistant component.
- the data processing system may be configured to determine the first digital assistant component is a preferred digital assistant.
- the data processing system may be configured to determine that the first response from the first digital assistant component is flagged as a fallback response.
- the data processing system may be configured to override, responsive to the determination that the first response from the first digital assistant component is flagged as the fallback response, the first digital assistant component.
- the data processing system may be configured to select the second response from the second digital assistant component.
- the data processing system may be configured to maintain the first digital assistant component as the preferred digital assistant.
- the data processing system may be configured to: determine a signal for the query; and select the ranking decision function from a plurality of ranking decision functions based on the signal.
- the data processing system may be configured to: determine a signal for the query; and select responses from the second digital assistant component based on the signal.
- the data processing system may be configured to, based on the ranking decision function, select the second response based on the first response being an audio-only response.
- the data processing system may be configured to, based on the ranking decision function, select the second response based on the second digital assistant component accessing data stored in memory of the computing device.
- the first response may comprise one of calendar information or media content.
- the first digital assistant component may be configured to execute independently of the second digital assistant component to generate the first response.
- the data processing system may be configured to transmit the query to each of the plurality of digital assistants via an independent branch to cause the plurality of digital assistants to process the query in an overlapping manner.
- the first digital assistant component may be established by a different administrator from the second digital assistant component.
- the data processing system may be configured to: receive the one or more data packets from the computing device via a streaming speech server configured to convert audio to text.
- the data processing system may be configured to receive the second response from the second digital assistant component prior to the first response from the first digital assistant component.
- the data processing system may be configured to determine that the second digital assistant component is not a preferred digital assistant component.
- the data processing system may be configured to determine that the first digital assistant is the preferred digital assistant.
- the data processing system may be configured to wait, responsive to the determination that the second digital assistant component is not a preferred digital assistant and the first digital assistant is the preferred digital assistant, for the first response from the first digital assistant component.
- the data processing system may be configured to, upon receipt of the first response from the first digital assistant component, determine that the first response is flagged as a fallback response.
- the data processing system may be configured to select the second response based on the determination that the second digital assistant component is not the preferred digital assistant and the first response is flagged as the fallback response.
- At least one aspect is directed to a method of coordinating overlapping processing of an audio query.
- the method can be performed by a data processing system comprising at least one processor and memory.
- the method can include the data processing system receiving one or more data packets including an audio signal detected by a sensor of a computing device.
- the method can include the data processing system generating a query based on the audio signal received via the one or more data packets.
- the method can include the data processing system transmitting the query to a plurality of digital assistant components.
- the method can include the data processing system receiving a first response to the query from a first digital assistant component of the plurality of digital assistant components.
- the method can include the data processing system receiving a second response to the query from a second digital assistant component of the plurality of digital assistant components.
- the first digital assistant component can be authorized to access a database the second digital assistant component is prohibited from accessing.
- the method can include the data processing system determining, based on a ranking decision function, to select the second response from the second digital assistant component instead of the first response from the first digital assistant component.
- the method can include the data processing system providing, responsive to the selection, the second response from the second digital assistant component to the computing device.
- the method may comprise selecting the second response from the second digital assistant component based on a confidence score for the second response from the second digital assistant component.
- the method may comprise determining the first digital assistant component is a preferred digital assistant.
- the method may comprise determining that the first response from the first digital assistant component is flagged as a fallback response.
- the method may comprise overriding, responsive to the determination that the first response from the first digital assistant component is flagged as the fallback response, the first digital assistant component.
- the method may comprise selecting the second response from the second digital assistant component.
- the method may comprise maintaining the first digital assistant component as the preferred digital assistant.
- the method may comprise determining, based on the ranking decision function, to select the first response based on the first digital assistant component accessing data stored in memory of the computing device.
- the method may comprise transmitting the query to each of the plurality of digital assistants via an independent branch to cause the plurality of digital assistants to process the query in an overlapping manner.
- the method may comprise receiving the second response from the second digital assistant component prior to the first response from the first digital assistant component.
- the method may comprise determining that the second digital assistant component is not a preferred digital assistant component.
- the method may comprise determining that the first digital assistant is the preferred digital assistant.
- the method may comprise waiting, responsive to the determination that the second digital assistant component is not a preferred digital assistant and the first digital assistant is the preferred digital assistant, for the first response from the first digital assistant component.
- the method may comprise, upon receipt of the first response from the first digital assistant component, determining that the first response is flagged as a fallback response.
- the method may comprise selecting the second response based on the determination that the second digital assistant component is not the preferred digital assistant and the first response is flagged as the fallback response.
- At least one aspect is directed to a computer program product configured such that, when executed on a data processing system comprising a processor and memory, causes the data processing system to perform the method of the above aspect.
- the computer program product may be comprised in or provided on a tangible, non-transient, computer readable medium.
- FIG. 1 illustrates an example system to coordinate overlapping processing of audio queries.
- FIG. 2 illustrates an example operation of a system to coordinate overlapping processing of audio queries.
- FIG. 3 illustrates a flow diagram to coordinate overlapping processing of audio queries using the example system illustrated in FIG. 1 or FIG. 2.
- FIG. 4 illustrates a method to coordinate overlapping processing of audio queries using the example system illustrated in FIG. 1 or FIG. 2.
- FIG. 5 is a block diagram illustrating a general architecture for a computer system that can be employed to implement elements of the systems and methods described and illustrated herein, including, for example, the systems depicted in FIGS. 1 and 2, the flow depicted in FIG. 3, or the method depicted in FIG. 4.
- Audio queries can be processed by multiple digital assistant components.
- different digital assistant components can generate different results to the audio queries based on the processing techniques used by the respective component, or based on the database access controls established for the different digital assistant components. Further, the different digital assistant components can process and return results at different times. Thus, it can be challenging to coordinate processing of audio queries where different digital assistant components can process the audio query in parallel or an overlapping manner.
- a computing device can receive an audio query detected by a microphone of the computing device.
- the computing device, or interface thereof can forward the audio query to a first digital assistant agent for processing.
- the interface can forward the audio query to a second digital assistant agent for processing.
- the first digital assistant can generate at least one first result, while the second digital assistant can generate a second result.
- the second digital assistant can generate a confidence score for the second result. Responsive to the confidence score, the second digital assistant can override the first digital assistant and determine to return the second result.
- the second digital assistant can determine that the first result is not yet available, and override the first digital assistant in order to provide the second result.
- multiple digital assistant components can be configured to process, parse, serve or respond to audio queries input by a user via a computing device (e.g., a network connected television, network connected speaker, or other network connected computing device).
- a computing device e.g., a network connected television, network connected speaker, or other network connected computing device.
- the systems and methods of the present technical solution provide a framework to arbitrate and prioritize among responding digital assistant agents. For example, after the voice query is transcribed to text by a pre-processor component, the query can be passed to a first digital assistant (e.g., a third-party cloud configured with a third-party digital assistant component) to process the query, while a second digital assistant can process the query in parallel or in an overlapping manner.
- a first digital assistant e.g., a third-party cloud configured with a third-party digital assistant component
- One of the digital assistant components can determine which voice agent to use to provide the response - or which response to use.
- the coordinate component can be configured with rules, policies, or quality assessment techniques to determine which digital assistant component to use.
- the second digital assistant component can determine to override the first digital assistant component.
- the second digital assistant component can determine to override the first digital assistant based on a confidence score, a quality assessment technique, a signal generated from parsing the query, a database used to provide the result, or a domain associated with the query.
- a first digital assistant can be configured to process and respond to audio queries that are related to media domain queries such as“play Movie_A on
- a second digital assistant component can be configured to process and respond to search domain queries such as“when is my next appointment”. If the search queries signals are ambiguous or fall into multiple categories, then the coordinator component can score or rank the responses from the multiple digital assistant components and select a response from one of the digital assistant component. For example, the coordinator component can score or rank the responses or queries based on a confidence level, or other factors.
- systems and methods of the present technical solution can reduce latency by allowing the first digital assistant component and the second digital assistant component to run in parallel or in an overlapping manner, rather than serially. Latency can be further reduced by selecting the results from the digital assistant that completes processing first. Reliability can be increased by using a ranking decision function to select responses or results from one of the digital assistants. Systems and methods of the present technical solution can reduce dependency on third-party cloud functioning for preferred domains, which may result in more robust performance.
- the second digital assistant component can provide the response without waiting for the first digital assistant component to even return a response, thereby reducing latency or delay in the event the first digital assistant is slower or experiencing a malfunction, error, fault, excessive processing load, or other processing issue.
- the systems and methods of the present technical solution can provide for fine-tuning of results to confidence scores from either the first digital assistant component or second digital assistant component.
- the first digital assistant component can report confidence scores of their results with“fallback” results.
- the system can decide to return the“fallback” results from the first digital assistant component. If the first digital assistant component indicates that it does not have an answer, then the second digital assistant component can provide the results regardless of the domain or signals associated with the query.
- Systems and methods of the present disclosure can provide a way to allow third-party televisions with their own digital assistant agents to integrate with a digital assistant agent provided by a data processing system.
- the systems and methods can include registering a device model to specify common metadata for the type of devices such as third- party voice agent endpoint the digital assistant component of the data processing system can interact with, any speech biasing phrases and device capabilities such as a browser.
- the systems and methods can include providing domains in the device model to specify which query domains are preferred to serve such as media queries.
- the systems and methods can include integrating with digital assistant software development kit (“SDK”) application programming interface (“API”) enhanced for visual results on televisions.
- SDK digital assistant software development kit
- API application programming interface
- the systems and methods can include integrating with digital assistant SDK out-of-box experience (“OOBE”) flow to guide user to sign-in the device.
- the device bound solution to support OOBE and authentication can be secure.
- the model registration API can allow manufacturers of the television or other computing device to specify their cloud natural language understanding (“NLU”) endpoints and other syndication specific metadata.
- the system can provide contextual speech biasing phrases registered with the device model for the data processing system’s automatic speech recognition to correctly recognize the common queries uttered on the device.
- the system can trigger third-party cloud NLU in parallel with building the data processing system’s candidate results for optimum latency.
- the system can provide a ranking layer which takes into account ranking protocols or policies to fulfill queries based on domains.
- the system can provide a new processing flow to allow responses from a digital assistant component without requiring a sign-in.
- the system can block content selection for queries where the response is provided by the third-party digital assistant, and perform post processing to scrub such queries from other logs.
- the system can provide a flow for agent’s capability since multiple agents are available on the platform.
- the system can provide a scalable visual solution to render HTML5 on third-party devices so that any device with browser can show a visual result and can support interactive elements such as suggestion clicks or links.
- FIG. 1 illustrates an example system 100 to coordinate parallel processing of audio queries across multiple devices.
- the system 100 can include at least one data processing system 102, at least one first digital assistant server 106, one or more client devices 104, one or more display devices 108, and a network 110.
- a display device 108 can be coupled to the client device 104 via wire or wireless connection (e.g., through the network 110, short-range communications, or pairing).
- the client device 104 can be a part of the display device 108, or otherwise be integrated into the display device.
- the at least one data processing system 102, one or more client devices 104, and one or more display devices 108 can be communicatively coupled to one another via the network 110.
- the data processing system 102 can include an interface 122.
- the data processing system 102 can include a second digital assistant application 120.
- the data processing system 102 can include a natural language processor (NLP) component 124 to parse audio-based inputs.
- NLP natural language processor
- the data processing system 102 can include an interface management component 128 to detect and manage the interfaces of other devices in the system 100.
- the data processing system 102 can include an audio signal generator component 130 to generate audio-based signals.
- the data processing system 102 can include a direct action application programming interface (API) 126 to fulfill requests parsed from audio-based inputs.
- the data processing system 102 can include an audio signal generator component 130 to select responses to audio-based input signals.
- the data processing system 102 can include a data repository 140.
- the data processing system 102 can include a search coordinator component 132, a content indexer component 134, a ranking engine 136, and a response handler component 138.
- the NLP component 124, the interface management component 128, the audio signal generator component 130, the data repository 140, the direct action API 126, the interface management component 128, the search coordinator component 132, the content indexer component 134, the ranking engine 136, and the response handler component 138 can form the digital assistant application 120.
- the functionalities of the data processing system 102 can be included or otherwise be accessible from the one or more client devices 104 and the one or more display devices 108.
- the functionalities of the data processing system 102 may correspond to the functionalities or interface with the digital assistant application 120 executing on the client devices 104 or the display devices 108.
- the client devices 104 and the display devices 108 can each include and execute a separate instance of the one or more components of the digital assistant application 120.
- the client devices 104 and the display devices 108 can otherwise have access to the functionalities of the components of the digital assistant application 120 on a remote data processing system 102 via the network 110.
- the display device 108 can include the functionalities of the NLP component 124 and access the remainder of the components of the digital assistant application 120 via the network 110 to the data processing system 102.
- the data processing system 102, the client device 104, and the display device 108 can include and execute a separate instance of the components of the digital assistant application 120.
- the digital assistant application 120 accessible or executing on the client devices 104 and the display devices 108 may each have different functionalities.
- the client device 104 or the display device 108 can execute a second digital assistant application 120 that interfaces with the data processing system 102.
- the data processing system 102 can interface with the first digital assistant server 106.
- the client devices 104 and the display devices 108 can each include at least one logic device such as a computing device having a processor to communicate with each other with the data processing system 102 via the network 110.
- the client devices 104 and the display devices 108 can include an instance of any of the components described in relation to the data processing system 102.
- the client devices 104 can include a desktop computer, laptop, tablet computer, personal digital assistant, smartphone, mobile device, portable computer, thin client computer, virtual server, a speaker-based digital assistant, or other computing device.
- the display device 108 can include a smart television, a hybrid television, a connected television, a set-top box connected to a television, a digital video record, monitor, screen, or other computing device with display functionality.
- the client devices 104 can be communicatively coupled with the display devices 108.
- a client device 104 may function as a remote control to control various functionalities at the display device 108.
- the client devices 104 can be a part of or integrated with the display device 108.
- the components of the system 100 can communicate over a network 110.
- the network 110 can include, for example, a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, an NFC (Near-Field Communication) network, a local area network (LAN), a wireless network or a wireline network, and combinations thereof.
- the network 110 can include a wireless link, such as an infrared channel or satellite band.
- the topology of the network 110 may include a bus, star, or ring network topology.
- the network 110 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (AMPS), time division multiple access (TDMA), code-division multiple access (CDMA), global system for mobile communication (GSM), general packet radio services (GPRS), or universal mobile telecommunications system (UMTS).
- AMPS advanced mobile phone protocol
- TDMA time division multiple access
- CDMA code-division multiple access
- GSM global system for mobile communication
- GPRS general packet radio services
- UMTS universal mobile telecommunications system
- Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols.
- the network 110 can include a short-range communication link (e.g., ranging up to 30 meters) established between the client devices 104 and the display devices 108, using Bluetooth, Bluetooth Low Energy, Dedicated Short-Range Communications (DSRC), or Near-Field Communications (NFC) protocols. Using such protocols, the data processing system 102 can establish a communication link with one or more client devices 104 via the interface 122. The data processing system 102 can establish a communication link with one or more display devices 108 via the interface 122. The short-range communication link may be established between the client devices 104 and the display devices 108 via pairing protocol.
- a short-range communication link e.g., ranging up to 30 meters
- DSRC Dedicated Short-Range Communications
- NFC Near-Field Communications
- the client devices 104 can include sensors 152, speakers 150, interfaces 122, and transducers 154.
- the display devices 108 can include sensors 152, speakers 150, interfaces 122, and transducers 154.
- the client devices 104 and the display device 108 can include at least one sensor 152, at least one transducer 154, at least one audio driver, and at least one speaker 150.
- the sensor 152 can include a microphone or audio input sensor.
- the sensor 152 can include at least one of a GPS sensor, proximity sensor, ambient light sensor, temperature sensor, motion sensor, accelerometer, or gyroscope.
- the sensor can include an occupancy or weight sensor.
- the transducer 154 can convert the audio input into an electronic signal.
- the audio driver can include a script or program executed by one or more processors of the client devices 104 or the display device 108 to control the speaker 150.
- the speaker 150 can render audio signals by converting electrical signals into audible waves.
- the client device 104 and the display device 108 can each include peripheral devices, such as a keyboard, a pointing device, a monitor (built-in or independent), and headphones, among other devices.
- the client devices 104 and the display device 108 can each execute an instance of a multimedia content application 160.
- the multimedia content application 160 can be associated with a particular first digital assistant server 106.
- the multimedia content application 160 can include a script or a program installed at the client device 104 or the display device 108.
- the multimedia content application 160 can include a script or a program executable via another application installed at the client device 104 or the display device 108, such as a web browser.
- the multimedia content application 160 can include an application programming interface (API) that can allow other applications (e.g., the digital assistant application 120) at the client device 104 or the display device 108 to interface with the multimedia content application 160.
- the multimedia content application 160 can play, stream, download, or otherwise access multimedia content.
- the multimedia content may correspond to one or more audiovisual content files in any format, such as MP3, ACC,
- the one or more audiovisual content files can include audio and/or visual content for play at the client device 104 or the display device 108.
- the multimedia content application 160 can play or stream the multimedia content on the client device 104 or the display device 108.
- the multimedia content application 160 can perform an authentication process with the first digital assistant server 106.
- the authentication process can include
- the multimedia content application 160 can send the account identifier and the access code to the first digital assistant server 106.
- the first digital assistant server 106 in turn can compare its own stored access code for the account identifier with the access code received from the client device 104 or the display device 108. Responsive to determining a match between the two access codes, the first digital assistant server 106 can send a successful authentication indicator to the client device 104 or the display device 108.
- the multimedia content application 160 can retrieve a catalog of available multimedia content made available by the first digital assistant server 106 for the account identifier.
- the multimedia content application 160 can display the catalog of available multimedia content in a graphical user interface with each element corresponding to each available multimedia content.
- the multimedia content application 160 can send a request for the selected multimedia content to the first digital assistant server 106.
- the first digital assistant server 106 can identify and provide the one or more audiovisual content files corresponding to the selected multimedia content.
- the multimedia content application 160 in turn can store, play, or stream the one or more audiovisual content files corresponding the selected multimedia content at the client device 104 or the display device 108. Additional details regarding the functionality of the first digital assistant server 106 and the multimedia content application 160 in the context of system 100 are explained herein.
- An application, script, program, or other components that are associated with the data processing system 102 can be installed at the client devices 104 or the display device 108.
- the application can enable the client devices 104 or display device 108 to communicate input audio signals (and other data) to the interface 122 of the data processing system 102.
- the application can enable the client devices 104 and the display device 108 to drive components of the client devices 104 and the display device 108 to render the output audio signals.
- the client devices 104 and the display device 108 can be associated with an end user that enters voice queries as input audio signals into the client devices 104 or the display device 108 (via the sensor 152) and receives audio output in the form of a computer generated voice that can be provided from the data processing system 102.
- the client devices 104 and the display device 108 can receive action data structures to perform predetermined functions or actions.
- the interface 122 can receive or provide data messages to the direct action API 126 of the data processing system 102 and enable communication between the components of the system 100.
- the client devices 104 and the display device 108 can include a user interface that enables a user to interact with the components of the system 100.
- the data processing system 102 can include at least one server having at least one processor.
- the data processing system 102 can include a plurality of servers located in at least one data center or server farm.
- the data processing system 102 can determine from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword, the data processing system 102 can generate or select response data.
- the response data can be audio-based or text-based.
- the response data can include one or more audio files that, when rendered, provide an audio output or acoustic wave.
- the data within the response data can be referred to as content items.
- the response data can include other content (e.g., text, video, or image content) in addition to audio content.
- the response data can include various types of content, such as calendar information, messages, weather information, news information, or ticket information.
- the data processing system 102 can include multiple, logically grouped servers and facilitate distributed computing techniques.
- the logical group of servers may be referred to as a data center, server farm, or a machine farm.
- the servers can be
- a data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms.
- the servers within each machine farm can be heterogeneous— one or more of the servers or machines can operate according to one or more type of operating system platform.
- the data processing system 102 can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center. In this way, the data processing system 102 with consolidated servers can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high performance storage systems on localized high performance networks.
- Each of the components of the data processing system 102 can include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with the data repository 140 and with other computing devices.
- the data processing system 102 can include the data repository 140.
- the data repository 140 can include one or more local or distributed databases and can include a database management system.
- the data repository 140 can include computer data storage or memory and can store one or more application identifiers 142, one or more entity metadata 144, one or more ranking policies 146, and at least one reference address 148.
- Each application identifier 142 may be an alphanumeric value corresponding to a multimedia content application 160 to be executed on the client device 104 or the display device 108.
- Each entity metadata 144 can correspond to an entity.
- Each reference address 148 can identify or reference. Details of the use and functionalities of the one or more application identifiers 142, one or more entity metadata 144, one or more ranking policies 146, and the reference address 148 are provided below.
- the data repository 140 can include computer data storage or memory and can store one or more parameters, one or more policies, response data, and templates, among other data.
- the parameters, policies, and templates can include information such as rules about a voice based session between the client devices 104, the data processing system 102, and the display device 108.
- the parameters, policies, and templates can include information for another digital assistant application 120 received via the interface 122 from another source (e.g., the data processing system 102, the client devices 104, and the display devices 108).
- the parameters, policies, and templates stored in the data repository 140 of a digital assistant application 120 hosted on a client device 104 or a display device 108 can include the parameters, policies, and templates from the data repository 140 of a digital assistant application 120 accessible via the client device 104 and the display device 108, and vice-versa.
- the response data can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with the client devices 104 and the display devices 108.
- the NLP component 124 can receive input audio signals.
- the data processing system 102 can receive the input audio signal from the client devices 104 or the display device 108 (e.g., via the transducers 154 or the sensors 152) included in a data packet.
- the data packet can include a device identifier associated with the client device 104 or the display device 108.
- the data packet can include an application identifier of the multimedia content application 160 executable at the client device 104 or the display device 108.
- the functionalities of the NLP component 124 can be split among the data processing system 102, the client device 104, and the display device 108.
- the NLP component 124 executing on the client device 104 or the display device 108 can package the input audio signal detected at the sensors 152 into a data packet, and can send the data packet to the data processing system 102 for further processing at the NLP component 124 executed at the data processing system 102.
- the NLP component 124 can convert input audio signals into recognized text by comparing the input audio signal against a stored, representative set of audio waveforms and choosing the closest matches.
- the representative waveforms can be generated across a large set of input audio signals. Once the input audio signal is converted into recognized text, the NLP component 124 can match the text to words that are associated, for example, via a learning phase, with actions or output audio signals.
- the NLP component 124 can identify at least one request.
- the request can indicate intent or subject matter of the input audio signal.
- the request can indicate a type of action likely to be taken.
- the NLP component 124 can parse the input audio signal to identify at least one request to play multimedia content (e.g.,“Okay, play Bat Movie from 2015”).
- the request can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken.
- the request can include a trigger keyword, such“okay” or“go.”
- the NLP component 124 can detect the trigger keyword in the request. Responsive to the detection of the trigger keyword, the NLP component 124 can identify the intent, the subject matter, and the type of action to be taken from the input audio signal.
- the NLP component 126 can identify at least one entity from the request.
- the at least one entity can correspond to the at least one word, phrase, root or partial word, or derivative in the request.
- the at least one entity may include a descriptor for a multimedia content, such as a title, an author, a distributor, an original release date, a language, a genre, a time length, and other associate keywords (e.g., actor names).
- the entity for “Bat Movie I” film released in 2005 may include:“Bat Movie I” as the title,“Ms. Director” as the author,“June 15, 2005” as the original release date,“English” as the language, “Action” as the genre, and“140 minutes” as the length, among other information.
- the NLP component 126 can determine that the at least one word, phrase, root or partial word, or derivative in the request corresponds to at least one entity. To perform the determination, the NLP component 126 can access a semantic knowledge graph.
- the semantic knowledge graph can specify a set of words, phrases, root or partial words, or derivatives relating to the at least one entity.
- the semantic knowledge graph can include nodes connected to one another via edges. Nodes may be associated with a word, phrase, root or partial word, or a derivative, and may be marked related to at least one entity or unrelated. Each edge connecting two nodes can represent a relationship between the two.
- a node for“Bat Movie” in the semantic knowledge graph may be marked as related to an entity and can have edges to a node labeled“Bat Movie I” also labeled as related to an entity indicating a relationship between the two terms.
- the NLP component 126 can determine that the at least one word, phrase, root or partial word, or derivative in the request corresponds to the at least one entity.
- the NLP component 124 can determine whether the at least one request corresponds to a query for multimedia content based on the entity. Responsive to the identification that the at least one word, phrase, root or partial word, or derivative in the request corresponds to the at least one entity, the NLP component 124 can determine that the at least one request corresponds to the query for multimedia content. Responsive to the identification that none of the words, phrases, root or partial words, or derivatives in the request correspond to the at least one entity, the NLP component 124 can determine that the at least one request does not correspond to the query for multimedia content. The determination that the at least one request corresponds to the query for multimedia content can trigger the functionalities of the search coordinator component 132, the content indexer component 134, the ranking 136, and the response handler component 138, as detailed below.
- the audio signal generator component 130 can obtain information from the data repository 140 where it can be stored as part of the response data.
- the audio signal generator component 130 can query the data repository 140 to select or otherwise identify response phrases or content items, e.g., from the response data.
- the audio signal generator component 130 can generate or otherwise obtain an output signal that includes the content item.
- the data processing system 102 can execute the audio signal generator component 130 to generate or create an output signal corresponding to the content item or request. For example, once a request is fulfilled, the audio signal generator component 130 can generate an audio output signal that includes the phrase“The action was completed.”
- the interface 122 can be a data interface or a network interface that enables the components of the system 100 to communicate with one another.
- the interface 122 of the data processing system 102 can provide or transmit one or more data packets that include the action data structure, audio signals, or other data via the network 110 to the client devices 104 or display device 108.
- the data processing system 102 can provide the output signal from the data repository 140 or from the audio signal generator component 130 to the client devices 104.
- the data processing system 102 can instruct, via data packet transmissions, the client devices 104 or the display device 108 to perform the functions indicated in the action data structure.
- the output signal can be obtained, generated, transformed to, or transmitted as one or more data packets (or other communications protocol) from the data processing system 102 (or other computing device) to the client devices 104 or the display device 108.
- the direct action API 126 of the data processing system 102 can generate, based on, for example, the request, action data structures.
- the action data structure can include data or instructions for the execution of a specified action to satisfy the request.
- the action data structure can be a JSON formatted data structure or an XML formatted data structure.
- the direct action API 126 can execute code or a dialog script that identifies the parameters required to fulfill the request.
- the action data structures can be generated responsive to the request.
- the action data structure can be included in messages that are transmitted to or received by the client devices 104 or the display device 108.
- the direct action API 126 can package the request into an action data structure for transmission to the display device 108.
- the direct action API 126 can access a device identifier from the response data to determine which the client device 104 or the display device 108 is associated with the user that generated the request.
- the display device 108 can process the action data structure and can perform the indicated action.
- the direct action API 126 can package the request into an action data structure for execution by the client device 104 or the display device 108.
- the client device 104 can process the action data structure using the digital assistant application 120 or one or more applications running on the client device 104.
- the action data structure can include information for completing the request.
- the action data structure can be an XML or JSON formatted data structure that includes attributes used in completing or otherwise fulfilling the request.
- the attributes can include a location of the display device 108, a location of the client devices 104, an authorization level of a user associated with a client device 104, a device identifier, an interface identifier, a vehicular state, or a request state.
- the request state includes one or more attributes that should be satisfied before the action is fulfilled. For example, with the request“Ok, change the song,” the request state may have the attribute ⁇ requestor: [authorized, passenger] ⁇ , which can indicate that the request should be an explicitly authorized user.
- the direct action API 126 can retrieve a template from the data repository 140 to determine which fields or attributes to include in the action data structure.
- the direct action API 126 can determine necessary parameters and can package the information into an action data structure.
- the direct action API 126 can retrieve content from the data repository 140 to obtain information for the attributes of the data structure.
- the direct action API 126 can populate the fields with data from the input audio signal.
- the direct action API 126 can populate the fields with data from the client devices 104 or the display device 108, or from another source.
- the direct action API 126 can prompt a user for additional information when populating the fields.
- the templates can be standardized for different types of actions, responding to messages, and performing functions within the client device 104 or the display device 108.
- the action data structure can initially be generated by a direct action API 126 executed by a remote data processing system 102.
- the remote data processing system 102 can transmit the action data structure to the client device 104 or the display device 108, which can add fields and attributes to the action data structure.
- the direct action API 126 can obtain response data (or parameters or policies) from the data repository 140, as well as data received with end user consent from the client devices 104 or the display devices 108.
- the response data (or parameters or policies) can be included in the action data structure.
- the content included in the action data structure includes end user data that is used for authentication, the data can be passed through a hashing function before being stored in the data repository 140.
- the data processing system 102 can include, interface, or otherwise communicate with the search coordinator component 132.
- the search coordinator component 132 can generate a query command to send to the client device 104 or the display device 108.
- the generation of the query command by the search coordinator component 132 can be in response to the determination at the request corresponds to the query for multimedia content.
- the query command can include the entity identified from the response.
- the query command can include instructions for the client device 104 or the display device 108 to process the query command.
- the instructions may indicate which multimedia content application 160 on the client device 104 or the display device 108 is to perform a search for the entity.
- the search coordinator component 132 can access the data repository 140 to identify the one or more application identifiers 142 to include in the query command.
- the data repository 140 can identify the one or more application identifiers 142 by the device identifier associated with the client device 104 or the display device 108. Each application identifier 142 may be labeled by a frequency of use by the client device 104 or the display device 108.
- the search coordinator component 132 can insert the one or more application identifiers 142 in the initial data packet into the instructions of the query command.
- the search coordinator component 132 can identify a subset of application identifiers 142 for the client device 104 and the display device 108 based on the frequency of usage by the client device 104 and the display device 108.
- the search coordinator component 132 can identify that the display device 108 uses multimedia content applications 160“A” and“B” more frequently than multimedia content applications 160“C”, “D”, and“E.” In this example, the search coordinator component 132 can select the application identifiers 142 corresponding to the multimedia content applications 160 for insertion into the query command. Each application identifier 142 of the query command can indicate which multimedia content application 160 on the client device 104 or the display device 108 is to perform the search for the entity. Subsequent to the generation of the query command, the search coordinator 132 can transmit the query command to the client device 104 or the display device 108.
- Receipt of the query command can cause the client device 104 or the display device 108 to the multimedia content application 160 to perform the search for the entity. Responsive to receipt of the query command, the client device 104 or the display device 108 can parse the query command to identify the entity. The client device 104 or the display device 108 can parse the query command to identify the one or more application identifiers 142. The client device 104 or the display device 108 can identify the multimedia content applications 160 corresponding to the one or more application identifiers 142 of the query command. The client device 104 or the display device 108 can initiate execution of the multimedia content application 160 identified from the one or more application identifiers 142 of the query command.
- the client device 104 or the display device 108 can provide the at least one entity in the query command to each multimedia content application 160 via the application programming interface for the multimedia content application 160. Once the entity is provided, each multimedia content application 160 can send a query request to the associated first digital assistant server 106.
- the search coordinator component 132 can generate a query request to send to the first digital assistant server 106.
- the generation of the query request by the search coordinator component 132 can be in response to the determination at the request corresponds to the query for multimedia content.
- the generation of the query request by the search coordinator component 132 can be in response to an invocation by the content indexer component 134, as will be discussed below.
- the query request can include the entity identified from the response.
- the query request can include instructions for the first digital assistant server 106 to process the query request.
- the search coordinator 132 can identify which multimedia content providers to send the query requests from the one or more application identifiers 142 for the client device 104 or the display device 108. Subsequent to the generation of the query request, the search coordinator 132 can transmit the query request to the first digital assistant server 106.
- the first digital assistant server 106 can access a content data repository 162 in response to the query request.
- the content data repository 162 can include one or more entity metadata 144 and one or more ranking policies 146. Each entity metadata 144 can correspond to an entity.
- Each entity metadata 144 on the data repository 162 can include one or more entries about the multimedia content corresponding to the entity, such as the title, author, distributor, original release date, language, genre, time length, and other associated keywords.
- one entity metadata 144 can correspond to“Bat Movie I” and another entity metadata 144 can correspond to“Bat Movie II.”
- Each entity metadata 144 can be associated with a reference address 148 (e.g., a Uniform Resource Locator).
- the reference address 148 may include a hostname, a file pathname, and a query parameter.
- the hostname can correspond to the first digital assistant server 106.
- the file pathname can correspond to the one or more audiovisual files for the multimedia content corresponding to the entity.
- the query parameter can include an attribute-value pair.
- the query parameter can be dynamically generated by the first digital assistant server 106, and may vary per the client device 104, the display device 108, or the search coordinator component 132.
- the first digital assistant server 106 can identify the reference address 148 corresponding to the entity.
- the first digital assistant server 106 can traverse through the content data repository 162.
- the first digital assistant server 106 can compare the entity with the entity metadata 144.
- the first digital assistant server 106 can compare the entity“Bat Movie” to any of the entries for the entity metadata 144, such as the title.
- the first digital assistant server 106 can determine whether the one or more entries of the entity metadata 144 match the entity from the query request.
- the first digital assistant server 106 can determine that there is no match between the entity and the entity metadata 144.
- the first digital assistant server 106 can continue traversing the content data repository 162.
- the first digital assistant server 106 can determine that there are no more entity metadata 144 to traverse. Responsive to the determination that there are no more entity metadata 144 to traverse, the first digital assistant server 106 can determine that the entity does not exist on the content data repository 162.
- the first digital assistant server 106 can transmit a null response. The null response can indicate that the first digital assistant server 106 does not have multimedia content corresponding to the entity.
- the first digital assistant server 106 can determine that there is a match between the entity and the entity metadata 144. Responsive to the determination of the match, the first digital assistant server 106 can determine that the entity exists on the content data repository 162. The first digital assistant server 106 can identify the reference address 148 corresponding to the entity metadata 144 matching the entity. The first digital assistant server 106 can generate a search response. The search response can indicate that the first digital assistant server 106 does have the multimedia content corresponding to the entity.
- the search response can include the reference address 148 corresponding to the multimedia content for the entity.
- the first digital assistant server 106 can continue to traverse through the content data repository 162 to identify additional matches between the entity of the query request and the entity metadata 144. With additional matches, the first digital assistant server 106 can repeatedly identify the reference address 148 corresponding to the entity metadata 144 matching the entity and can include the reference address 148 into the search response. The first digital assistant server 106 can determine that there are no more entity metadata 144 to traverse. Responsive to the determination that there are no more entity metadata 144 to traverse, the first digital assistant server 106 can send the response to the client device 104, the display device 108, or the search coordinator component 132 that sent the query search.
- the data processing system 102 can include, interface, or otherwise communicate with the content indexer component 134.
- the content indexer component 134 can access the data repository 140 of the data processing system 102 or the first digital assistant server 106 to identify the reference address 148 corresponding to the entity.
- the content indexer component 134 can access the data repository 140, prior to accessing the first digital assistant server 106 to identify the reference address 148.
- the content indexer component 134 can traverse through the data repository 140.
- the data repository 140 can include the one or more entity metadata 144 and the one or more ranking policies 146.
- the entity metadata 144 and the ranking policies 146 on the data repository 140 may be maintained separately and independently from the entity metadata 144 and the ranking policies 146 on the content data repository 162.
- the entity metadata 144 and the ranking policies 146 on the data repository 140 may be from previous search responses from the multimedia content providers.
- the content indexer component 134 can maintain a timer to keep track of a time elapsed for each entity metadata 144 and the associated reference address 148 in storage at the data repository 140.
- the content indexer component 134 can traverse through the content data repository 140. For each entity metadata 144, the content indexer component 134 can compare the entity with the entity metadata 144. For example, the content indexer component 134 can compare the entity“Bat Movie” to any of the entries for the entity metadata 144, such as the title. The content indexer component 134 can determine whether the one or more entries of the entity metadata 144 match the entity from the query request. The content indexer component 134 can determine that there is no match between the entity and the entity metadata 144. Responsive to the determination that there is no match, the content indexer component 134 can continue traversing the content data repository 140. The content indexer component 134 can determine that there are no more entity metadata 144 to traverse.
- the content indexer component 134 can determine that the entity does not exist on the content data repository 140. In response to the determination that the entity does not exist on the content data repository 140, the content indexer component 134 can call the search coordinator component 132 to send the query request to the first digital assistant server 106 to retrieve the reference address 148.
- the content indexer component 134 can determine that there is a match between the entity and the entity metadata 144. Responsive to the determination of the match, the content indexer component 134 can determine that the entity exists on the content data repository 140. The content indexer component 134 can identify the reference address 148 corresponding to the entity metadata 144 matching the entity. The content indexer component 134 can store the reference address 148 corresponding to the entity.
- the content indexer component 134 can identify the time elapsed for the identified reference address 148.
- the content indexer component 134 can compare the time elapsed to a pre-set expiration time.
- the pre-set expiration time can range from 1 hour to 1 month, as the first digital assistant server 106 may periodically update or change the catalogue of available multimedia content.
- the pre-set expiration time can correspond to an amount of time that the reference address 148 is valid for the entity at the first digital assistant server 106.
- the content indexer component 134 can determine that the time elapsed is less than the pre-set expiration time.
- the content indexer component 134 can store the reference address 148 corresponding to the entity.
- the content indexer component 134 can terminate accessing of the first digital assistant server 106 to search for the reference address corresponding to the entity.
- the content indexer component 134 can determine that the time elapsed is greater than or equal to the pre-set expiration time. Responsive to the determination that the time elapsed is greater than or equal to the pre-set expiration time, the content indexer component 134 can replace the reference address 148 from the data repository 140. To update the data repository 140, the content indexer component 134 can call the search coordinator component 132 to send the query request to the first digital assistant server 106 to retrieve the reference address 148. The content indexer component 134 can receive the search response from the first digital assistant server 106. The search response can include a new reference address 148 for the entity.
- the content indexer component 134 can save the reference address 148 onto the data repository 140 and can associate the newly saved reference address 148 with the entity metadata 144 matching the entity.
- the content indexer component 134 can receive the null response from the first digital assistant server 106. Responsive to the receipt of the null response, the content indexer component 134 can remove the reference address 148 from the data repository 140.
- the content indexer component 134 can continue to traverse through the content data repository 140 to identify additional matches between the entity of the query request and the entity metadata 144. With additional matches, the content indexer component 134 can repeatedly identify the reference address 148 corresponding to the entity metadata 144 matching the entity and can include the reference address 148 into the search response. The content indexer component 134 can determine that there are no more entity metadata 144 to traverse. Responsive to the determination that there are no more entity metadata 144 to traverse, the content indexer component 134 can terminate the search for additional ranking policies 146 at the data repository 140.
- the content indexer component 134 can call the search coordinator component 132 to send the query request to the first digital assistant server 106 to retrieve the reference address 148.
- the calling of the search coordinator component 132 may be irrespective of the comparison of the time elapsed with the pre-set expiration time described above.
- the content indexer component 134 can receive the search response from the first digital assistant server 106. Receipt of the search response from the first digital assistant server 106 can indicate that the first digital assistant server 106 has access to the entity.
- the search response can include the reference address 148 corresponding to the entity.
- the content indexer component 134 can parse the search response to identify the reference address 148. Responsive to the identification of the match between the entity and the entity metadata 144 on the data repository 140, the content indexer component 134 can compare the reference address 148 from the data repository 140 with the reference address 148 from the first digital assistant server 106.
- the content indexer component 134 can determine that the reference address 148 from the data repository 140 differs from the reference address 148 from the first digital assistant server 106.
- the difference in ranking policies 146 may signify that the first digital assistant server 106 has updated the reference address 148 for the entity. Responsive to the determination that the ranking policies 146 differ, the content indexer component 134 can replace the reference address 148 stored at the data repository 140 with the reference address 148 from the first digital assistant server 106.
- the content indexer component 134 can determine that the reference address 148 from the data repository 140 is identical to the reference address 148 from the first digital assistant server 106. Responsive to the determination that the ranking policies 146 are identical, the content indexer component 134 can proceed to call the response handler component 138 to send a query result to the client device 104 or the display device 108, as described below.
- the content indexer component 134 can receive a null response from the first digital assistant server 106. Receipt of the null response from the first digital assistant server 106 can indicate that the first digital assistant server 106 no longer has the entity. For example, the first digital assistant server 106 may have updated the catalogue of available multimedia content to exclude the entity. Responsive to the receipt of the null response and to the identification of the match between the entity and the entity metadata 144 on the data repository 140, the content indexer component 134 can remove the reference address 148 from the data repository 140. The content indexer component 134 can proceed to call the response handler component 138 to send a query result to the client device 104 or the display device 108, as described below.
- the content indexer component 134 may receive no responses from the first digital assistant server 106 within a predetermined amount of time subsequent to transmission of the query response, for example, due to issues with the network 110 or an outage at the first digital assistant server 106. In such instances, the content indexer component 134 can maintain the ranking policies 146 at the data repository 140.
- the data processing system 102 can include, interface, or otherwise communicate with a ranking engine component 136.
- the ranking engine component 136 can use one or more ranking policies 146 stored in data repository 140.
- the ranking engine component 136 can use a ranking decision function, such as the ranking decision functions or blocks depicted in FIGS. 2 and 3.
- the ranking decision function can be based on confidence scores, latency, time to completion, flags, priorities, preconfigured preferences, protocols, or other factors.
- a second digital assistant 120 can be prioritized over the first digital assistant.
- the ranking engine component 136 can process or parse the query from the client device 104 or display device 108 to identify or generate one or more signals for the query.
- the ranking engine component 136 can select a decision function from a plurality of decision functions stored in data repository 140.
- the decision functions can be referred to as or stored as policies 146.
- the decision functions (or policies 146) can vary based on the signals for the query. For example, a query for a media content can generate a signal that indicates to select the first digital assistant for results.
- a query for a search results from a database accessible to the data processing system 102 can generate a signal to prioritize the results from the second digital assistant.
- Ranking decision functions can take into account confidence scores.
- the first digital assistant or second digital assistant can return a confidence score along with the results. For example, if the second digital assistant returns the results first and provides a high confidence score (e.g., greater than 0.8 out of 1), then the data processing system 102 may not wait for any results to come from the first digital assistant, and proceed to transmit the results from the second digital assistant - thereby overriding the first digital assistant.
- the data processing system 102 can include, interface, or otherwise communicate with the response handler component 138. Responsive to identification of the reference address 148 corresponding to the entity in the request, the response handler component 138 can transmit or provide the reference address 148 to the client device 104 or the display device 108.
- the response handler component 138 can generate instructions for rendering a content selection interface at the client device 104 or the display device 108.
- the content selection interface can include one or more selection elements and a placeholder element (collectively sometimes referred to as a“display card”).
- the one or more selection elements can correspond to a reference address 148 for the entity included in the request of the client device 104 or the display device 108.
- the search performed by the multimedia content applications 160 may not have completed, prior to the response handler component 138 sending the reference address 148 to the client device 104 or the display device 108. Consequently, the content selection interface can initially exclude the results from the search performed by the multimedia content applications 160 executing on the client device 104 or the display device 108.
- the response handler component 138 can provide the instructions for rendering the content selection interface, along with the reference address 148, to the client device 104 or the display device 108.
- an interaction with the placeholder element can cause the client device 104 or the display device 108 to determine whether the search performed by the multimedia content applications 160 is completed.
- the client device 104 or the display device 108 can determine that the search performed by the multimedia content applications 160 is completed. Responsive to the determination that the search is completed, the client device 104 or the display device 108 can modify the content selection interaction to include additional selection elements.
- Each additional selection element can correspond to the reference address 148 found during the search performed by the multimedia content applications 160 executing on the client device 104 or the display device 108.
- Interaction with the selection elements of the content selection element can cause the client device 104 or the display device 108 to launch the multimedia content application 160 (or another application running on the client device 104 or the display device 108) to play the one or more audiovisual files corresponding to the reference address 148 of the associated selection element.
- the client device 104 or the display device 108 can determine that the search performed by the multimedia content applications 160 is not yet completed. Responsive to the determination that the search is not yet completed, the client device 104 or the display device 108 can wait for a predetermined amount of time. During the predetermined amount of time, the client device 104 or the display device 108 can determine that the search performed by the multimedia content applications 160 is completed. Responsive to the determination that the search is completed, the client device 104 or the display device 108 can modify the content selection interaction to include additional selection elements. The client device 104 or the display device 108 can determine that the
- the client device 104 or the display device 108 can modify the content selection interface to remove the placeholder element.
- FIG. 2 illustrates an example operation of a system to coordinate overlapping processing of audio queries.
- the system 200 can include one or more component or functionality depicted in FIG. 1 or FIG. 5.
- the system 200 can include data processing system 102.
- the system 200 can include, interface with or otherwise communicate or utilize a first digital assistant server 106.
- the system 200 can include, interface with or otherwise communicate or utilize a second digital assistant server 120.
- the first digital assistant server 106 (which can be referred to as a first digital assistant, first digital assistant component, or first digital assistant application) can execute independently of the second digital assistant application 120 (which can be referred to as a second digital assistant, second digital assistant component, or second digital assistant application).
- first digital assistant or second digital assistant can be referred to as a local digital assistant, while the other of the first digital assistant or the second digital assistant can be referred as a remote digital assistant.
- first digital assistant server 106 can be referred to as a remote digital assistant
- second digital assistant application 120 can be referred to as a local digital assistant.
- first digital assistant server 106 can be referred to as a local digital assistant
- second digital assistant application 120 can be referred to as a remote digital assistant.
- client device 104 (which can include the display device 108, be integrated with the display device 108, or otherwise communicatively coupled with the display device 108) can receive an input audio signal.
- the client device 104 can be referred to as a computing device or client computing device.
- the client device 104 can receive the audio signal from a user.
- the audio signal can include voice input provided by a user of the client device 104.
- the voice input can include a request, query, command, instruction, or response.
- a microphone e.g., sensor 152 or transducer 154) of the client device 104 can detect or receive the audio input.
- the client device 104 can transmit or provide the audio input, or data corresponding to the audio input, to a server.
- the client device 104 can transmit the audio input, or data corresponding to the audio input, to a streaming speech server (“S3”) 204 or a data processing system 102.
- the client device 104 can convert the audio input received at ACT 202 into a format configured for transmission to a server.
- the client device 104 for example, can pre-process the audio input and convert the audio input into a digital format configured for transmission over a data network.
- the client device 104 can transmit the audio input, or data corresponding to the audio input, responsive to identifying a request in the audio input.
- a request can include a keyword, hotword, wakeup word, token or other indication in the audio input that indicates to the client device 104 that the user has a request for content or an action to be performed by the client device 104 or one or more servers.
- the client device 104 can transmit the audio input, or data corresponding to the audio input responsive to authorization or authentication.
- the client device 104 can transmit the input audio signal as a request to the streaming speech server 204.
- the request can include a request to convert audio, speech or voice to text or some other format that facilitates downstream transmissions or processing of the audio input.
- the S3 server 204 can transcribe voice to text.
- the S3 server 204 can send the results of the transcription back to the client device 104.
- the S3 server 204 can transmit the transcribed results to the data processing system 102 for further processing.
- the S3 server can transmit the transcribed results to a device repository 220 for storage.
- the S3 server 204 can transmit transcribed results to the data processing system 102.
- the transcribed results can include data packets having a query that corresponds to the input audio signal received at ACT 202.
- the S3 server 204 can forward the text query to data processing system 102.
- the client device 204 can convert the audio input to data packets and transmit the data packets to the data processing system 102 without transmitting the audio input to the S3 server 204.
- the data processing system 102 can receive, via an interface, the one or more data packets corresponding to the audio signal detected by the client device 104.
- the data processing system 102 can receive the one or more data packets from the client device 104 or the S3 server 204.
- the one or more data packets can include a text query, or the data processing system 102 can process the one or more data packets to identify a query. For example, the data processing system 102 can generate a query based on the received data packets corresponding the audio signal.
- the data processing system 102 can transmit the query to one or more digital assistants for processing.
- the data processing system 102 can provide the query to one or more digital assistants for processing.
- the data processing system 102 can process the query using one or more digital assistants executed or managed by the data processing system 102.
- the data processing system 102 can provide the query to one or more digital assistants external from the data processing system 102.
- a digital assistant can be external from the data processing system 102 if it is geographically remote from the data processing system 102, or administered or managed by a different entity than the data processing system 102.
- the digital assistant can be referred to as external from the data processing system 102 if it is a different type of digital assistant.
- the data processing system 102 can transmit, provide, or otherwise convey or communicate the query to multiple digital assistant components for processing.
- One or more of the multiple digital assistants can process the query and generate a response to the query.
- the data processing system 102 can include an internal digital assistant, such as a second digital assistant application 120.
- the second digital assistant application 120 can process the query to generate a response to the query.
- the data processing system 102 (or interface 122) can transmit the query to the second digital assistant application 120 for processing.
- the data processing system 102 (or interface 122) can transmit the query to the first digital assistant server 106 external to the data processing system 102 for processing.
- the data processing system 102 can simultaneously transmit the query to multiple digital assistants for processing at the same time or in an overlapping manner.
- the second digital assistant application 120 can receive the query and transmit the query to the first digital assistant server 106 to generate a response to the query.
- the second digital assistant application 120 can transmit the query to the first digital assistant server 106 prior to the second digital assistant application 120 processing the query or generating a response to the query, thereby reducing latency or delay caused by the second digital assistant application 120.
- the interface 122 can simultaneously transmit the query to the second digital assistant application 120 and the first digital assistant server 106 for simultaneous or overlapping processing.
- the data processing system 102 (e.g., via interface 122) can transmit the query to the first digital assistant server 106 before the second digital assistant application 120 of the data processing system 102.
- the data processing system 102 can transmit the query to the first digital assistant server 106 after the query is transmitted to the second digital assistant application 120.
- the data processing system 102 can transmit the query to the first digital assistant server 106 after the second digital assistant application 120 receives the query.
- the data processing system 102 can utilize an application programming interface (API) to transmit or post the query, or original query received by the data processing system 102 from the client device 104, to the first digital assistant server 106.
- API application programming interface
- the data processing system 102 can provide, transmit, relay or forward the original query received from the client device 104 to the first digital assistant server 106. In some cases, the data processing system 102 can process or modify the original query prior to transmission to the first digital assistant server 106.
- the data processing system 102 can process or parse the text query using the second digital assistant and generate second digital assistant candidate results 204.
- the text query can be passed at 208 to the first digital assistant server 106, which can be executing in a cloud server system.
- the first digital assistant server 106 can be separate from the data processing system 102 that executes the second digital assistant.
- the data processing system can transmit the query to each of the plurality of digital assistants via an independent branch to cause the plurality of digital assistants to process the query in an overlapping manner.
- the independent branch can refer to a logical branch in a logic flow, or a separate processing thread in which the separate digital assistants are not in communication with one another while they are separately processing the query to generate the response.
- the separate digital assistants can separately process the query to generate the results in an overlapping manner.
- the first digital assistant candidate results 206 can be provided to the data processing system 102 in response 212.
- the first digital assistant server 106 can be established by a different administrator that established the second digital assistant application 120. For example, different companies, entities or manufacturers may have been responsible for designing and constructing the first digital assistant server 106 as compared to the second digital assistant application 120.
- the first digital assistant server 106 and the second digital assistant application 120 can execute independently of one another to generate a response or result for the query.
- the first and second digital assistants can have access to different types of information or data.
- the first digital assistant server 106 can be authorized to access a database or data source that the second digital application 120 may not be authorized to access or prohibited from access.
- the first digital assistant server 106 can have access to a multimedia repository storing movies or songs. Access to this multimedia repository can include authorization via credentials or a subscription.
- the first digital assistant 106 may have access to the authentication information via subscription information associated with the client device 104 or user profile of the client device 104, however these credentials may not be transferred or usable the second digital assistant application 120.
- the data processing system 102 can receive results to the query.
- the data processing system 102 can receive candidate results to the query from one or more digital assistants.
- the data processing system 102 can receive second digital assistant candidate results 210.
- the data processing system 102 can receive first digital assistant candidate results 206.
- the first digital assistant candidate results 206 and the second digital assistant candidate results 210 can be in a similar format as one another, or different formats.
- the first digital assistant candidate results 206 and the second digital assistant candidate results 210 can be from different sources and generated using different techniques, functions, parameters, selection criteria, or processes.
- the results from the first or second digital assistant components can include content items, references, links, images, text, video, audio, or other type of results that are responsive to, or based on, the query from the input audio signal received by the client device 104.
- the results can include data from various sources.
- the results can include streaming data.
- the results can include a reference or link to streaming content, such as streaming audio or video.
- the results can include suggestions that are responsive to the query.
- the results can include a deep link to content.
- the results can include authentication or credentialing information that is configured to authorize the client device 104 to access the content contained or identified in the results.
- the data processing system 102 can perform a ranking decision to select candidate results 204 or 206.
- the second digital assistant application 120 can perform the ranking decision.
- the ranking engine component 136 of the data processing system 102 or the second digital assistant application 120 can performing the ranking decision.
- the ranking engine component 136 can receive the candidate results or an indication that the candidate results from the multiple digital assistant components are available.
- the ranking engine component 136 can wait to perform the ranking decision until the ranking engine component 136 has received an indication that results have been received from all of the digital assistant components to which the data processing system 102 transmitted the query.
- the data processing system 102 (e.g., via ranking engine component 136) can determine, based on a ranking decision function, to select the response or results from one of the first digital assistant application server 106 (e.g., first digital assistant component) or the second digital assistant application 120 (e.g., second digital assistant component).
- the data processing system 102 can determine to select the second digital assistant candidate results 210, or the first digital assistant candidate results 206.
- the data processing system 102 can determine to select one of the results from one of the second digital assistant candidate results 210 or the first digital assistant candidate results 206.
- the data processing system 102 can determine to select a response or result from the second digital assistant component instead of a response or result from the first digital assistant component.
- the data processing system 102 can utilize various ranking decision functions or techniques in order to select a result or response, some examples of which are described in the following paragraphs.
- the data processing system 102 can select the ranking decision function or technique based on a signal associated with the input audio signal or query corresponding to the input audio signal.
- the data processing system 102 can select the digital assistant or response based on the signal associated with the input audio signal or query corresponding to the input audio signal. Signals can indicate whether the query is for a type of media, internet search query, news request, weather request, video request, movie request, music request, or other type of request.
- the data processing system 102 can select the response or result based on information associated with the digital assistant that provided the result, based on information associated with the result itself, based on information associated with the client device 104, based on information associated with a profile of a user associated with the client device 104, based on the type of result, based on the data source used to provide the result, based on the data source to which the result links or points, the data size of the results, or other factors.
- the data processing system 102 can select the results or response based on pre-configured preferences.
- the pre-configured preferences can be stored or configured on the client device 104, the data processing system 102, or the first digital assistant server 106.
- the second digital assistant application 120 can execute at least partially on the client device 104.
- the second digital assistant application 120 can include an interface located on the client device 104.
- the second digital assistant application 120 can be associated with an administrator, manufacturer or provided of the client device 104.
- the second digital assistant application 120 can be pre-configured to be the preferred digital assistant. Being the preferred digital assistant for the client device 104 can cause the data processing system 102 to prioritize selection of a results from the second digital assistant candidate results 210 instead of a result from the first digital assistant candidate results 206.
- the data processing system 102 can rank results from the second digital assistant 120 higher than results from the first digital assistant 106.
- the data processing system 102 can weight results from the second digital assistant application 120 more heavily than results from the first digital assistant server 106. By ranking, weighting, or otherwise prioritizing results from the second digital assistant application 120, the data processing system 102 may be more likely to select a result from the second digital assistant 120 as compared to a result from the first digital assistant server 106.
- Configuration information associated with the preference, ranking, weighting, or other prioritization can be stored in database 140 (e.g., policies 146 data structure) or stored on the client device 104, or other data storage device.
- the data processing system 102 can select a result or response based on information about or associated with the response or result itself. For example, the data processing system 102 can determine, based on the ranking decision function, to select a response based on the response containing audio-only, video and audio, video-only, text only, image only, or other multimedia content. The data processing system 102 can select, for example, a first response based on an attribute or characteristic associated with the second response. For example, the data processing system 102 can select the first response, which may include video, responsive to the second response including only audio.
- the data processing system 102 can select a result, response or digital assistant based on a data source for the result or digital assistant. For example, the data processing system 102 can determine, based on the ranking decision function, to select a second response from a second digital assistant component based on the second digital assistant component accessing data stored in memory of the client device 104. The data processing system 102 can make this determination to reduce network bandwidth use or latency or data storage as a result of the data being stored on the client device 104 that presents or renders the data.
- the data processing system 102 can select a response or results based on information associated with how the result was selected.
- the selection technique or process used to select a result can output a confidence score for the result.
- the confidence score can reflect, indicate or convey a level of confidence associated with whether the result is accurate, reliable, or responsive to the query. For example, a certain result can have a high confidence score (e.g., 0.7, 0.8, 0.9 or 1) associated with the result, while another result may have a low confidence score (e.g., 0.4, 0.3, 0.2 or less).
- the confidence score can indicate a likelihood of the result being a match or responsive to the query.
- the confidence score can indicate a likelihood that the user of the client device 104 will interact with the result or content item corresponding to the result.
- the data processing system 102 can select, for example, a response or result from the second digital assistant candidate results 210 based on a confidence score for the response from the second digital assistant component.
- a result may have a low or high confidence score based on one or more factors.
- a digital assistant component may have access to a finite or predetermined set of data or data sources.
- the digital assistant component can be limited in terms of results based on the limited access to the data source.
- the digital assistant component therefore, may determine that the best matching result from the limited set of data sources may still be associated with a low confidence score.
- the data processing system 102 (or ranking engine component 136) can determine whether results from the second digital assistant are preferred. If the data processing system 102 determines, at decision block 216, that results from the second digital assistant are preferred, then the data processing system proceeds to HTML adapter 218.
- HTML adapter 218 can convert the results from the second digital assistant, which can be coded in HTML, into a format that is compatible with the S3 server 204.
- the HTML adapter 218 of the data processing system 102 can forward the converted results from the second digital assistant candidate results 210 to the S3 server.
- the data processing system 102 determines, at decision block 216 that results from the second digital assistant are not preferred, then the data processing system 102 can proceed to S3 server 204 and provide the response 212 from the first digital assistant server 106.
- the data processing system 102 can be configured with various logic, rules, heuristic techniques or other functionality to select a response. For example, the data processing system 102 can determine that the first digital assistant component is a preferred digital assistant. The data processing system 102 can determine that the first digital assistant is the preferred digital assistant based on the type of query, configuration information, profile information, pre-determined information, or other factors. The data processing system 102 can receive, from the first digital assistant that is set as the preferred digital assistant, a first response. This first response from the first digital assistant can be associated with a flag. The first digital assistant can assign, affix, provide, or otherwise indicate the flag for the first response. The flag can indicate that this first response is a fallback response.
- a fallback response can refer to a response that is an alternative response to be used in the instance that there is not another response.
- the fallback response can indicate to lower a priority, weight, or ranking of the first response when inputting the response into a selection process being performed by the ranking engine component 136.
- the first digital assistant or data processing system 102 can determine to flag the first response as a fallback response based on a confidence score associated with the first response, or other factor associated with the first response. For example, the first digital assistant component can determine that a quality associated with the data file associated with the first response is of low quality or has a quality that is below a threshold. Quality can refer to or include video quality, image quality, or audio quality. Quality can refer to or include data streaming rate. Quality can refer to delay in transmitting the data file, or establishing a connection with the data source. Quality can refer to the quality of the substance of the response, such as a rating or review associated with the result. Quality can refer to relevance of the result to the query or a profile associated with the client device 104. The first digital assistant component can determine that a confidence score associated with the first response is low or below a threshold.
- the first digital assistant component can flag the response as a fallback response. That is, although the first digital assistant component (e.g., first digital assistant server 106) is configured to be the preferred digital assistant, the first digital assistant component can flag a response generated or provided by the first digital assistant component as a fallback response.
- the data processing system 102 e.g., ranking engine component 136
- upon receiving the result from the first digital assistant server 106 that is the preferred digital assistant can override the first digital assistant component.
- the data processing system 102 may be configured to select the response from the preferred digital assistant component.
- the data processing system 102 can determine not to select the response from the first digital assistant component, thereby overriding the first digital assistant component. Instead, the data processing system 102 can select a response from the second digital assistant component 120, which may not be the preferred digital assistant component, to provide to the client device 104.
- the data processing system 102 can, nevertheless, maintain the first digital assistant component as the preferred digital assistant. For example, the data processing system 102 can override the first digital assistant component for the response that is flagged as a fallback response, but not for other responses that are not flagged as fallback responses.
- the data processing system 102 can provide the one or more selected results or the one or more results from the selected digital assistant to the client device 104.
- the data processing system 102 can provide the results to the client device 104 via another device or server.
- the data processing system 102 can pre-process or otherwise manipulate or modify the results before providing them to the client device 104.
- the data processing system 102 can provide the results to a device or server remote from the data processing system 102 for processing prior to the results being provided to the client device. For example, the data processing system 102 can provide the results to the S3 server 204.
- the S3 server 204 can convert the response received either from the HTML adapter 218 or the first digital assistant server 106 into audio, and provide the audio response to the client device 104 or display device 108 for rendering or presentation.
- the S3 server 204 can save the response in a device repository 220 for further processing or as a data log for further processing.
- the data processing system 102 can provide the selected response or result to the client device 104.
- the client device 104 can be configured to present the response via an output interface of the client device 104.
- the client device 104 can be configured to convert a result or response from one format to another format for presentation via an output interface of the client device 104.
- the client device 104 may itself be configured with text-to-speech functionality in order to convert text or HTML content into audio output or visual output.
- FIG. 3 illustrates a flow diagram to coordinate overlapping processing of audio queries using the example system illustrated in FIG. 1 or FIG. 2.
- the process 300 can be performed by a data processing system 102, first digital assistant server 106, client device 104, one or more processor or computing device 500.
- a data processing system can run the first digital assistant in a first branch and run the second digital assistant in a second branch.
- the two digital assistant can run in parallel or an overlapping manner.
- Overlapping processing can refer to both digital assistant running at the same time for at least a partial amount of time. Overlapping process can refer to running at least partially in parallel, or at least partially at the same time.
- One of the digital assistants may begin running first or stop running first.
- the processing on the separate digital assistant can occur concurrently (e.g., at the same time).
- the first digital assistant can run on a third party server.
- the second digital assistant can run on the data processing system.
- the first digital assistant can be
- the data processing system can execute a decision block to determine if the result from the second digital assistant is available. If the result from the second digital assistant is not available, then act 306, the data processing system can return to decision block 304 and check again to see if the result is available. The data processing system can return to decision block 304 to repeatedly check if the result from the second digital assistant is available. In some cases, the data processing system can timeout if the result from the second digital assistant is not available for a predetermined amount of time (e.g., 10 seconds, 30 seconds, 60 seconds or more).
- a predetermined amount of time e.g. 10 seconds, 30 seconds, 60 seconds or more.
- the data processing system determines at block 304 that the results from the second digital assistant are available (ACT 308), the data processing system can proceed to decision block 310 to determine if the results from the second digital assistant are preferred.
- the data processing system can proceed to block 312, where the data processing system can select the response from the second digital assistant.
- the data processing system can proceed to block 314 and wait for the response from the first digital assistant.
- the data processing system can proceed to decision block 316 at which the data processing system can determine whether the response from the first digital assistant is flagged as a fallback response.
- a fallback response can indicate that the response is only to be used as a fallback, or a last resort or a last measure.
- a response can be tagged or flagged as a fallback response if there is a low confidence score (e.g., less than a threshold such as 0.2, 0.3, 0.4 or less) that the response is accurate, reliable or correct.
- the data processing system determines that the response from the first digital assistant server is flagged as a fallback response, the data processing system can proceed to select the response from the second digital assistant at block 312. For example, if the response from the first digital server is flagged as a fallback, the data processing system can override the first digital assistant response even though the first digital assistant is the preferred digital assistant, and proceed to use the second digital assistant. [0107] If, however, the first digital assistant response is not flagged as a fallback, as determined by the data processing system at decision block 316, the data processing system 102 can proceed to block 318 and select the first digital assistant response.
- the data processing system can determine that results from the second digital assistant component are available or ready before results from the first digital assistant component.
- the data processing system can determine, at block 310, that the second digital assistant component is not a preferred digital assistant component.
- the data processing system can make this determination based on configuration information, instruction, indication or other data.
- the data processing system determine that the first digital assistant is the preferred digital assistant.
- the configuration, instruction, indication or other data file can indicate which of the multiple digital assistants is the preferred digital assistant.
- the data processing system can determine that the second digital assistant is not the preferred digital assistant at block 310.
- the data processing system can take one or more actions responsive to determining that the second digital assistant is not the preferred digital assistant or responsive to determining that the first digital assistant is the preferred digital assistant. For example, at block 314, the data processing system can wait, responsive to the determination that the second digital assistant component is not a preferred digital assistant and the first digital assistant is the preferred digital assistant, for the first response from the first digital assistant component. Thus, although the data processing system received a response from the second digital assistant before receiving any response from the first digital assistant, the data processing system can wait for the first response from the first digital assistant because the first digital assistant is the preferred digital assistant.
- the data processing system can receive a response from the first digital assistant.
- the data processing system can receive the response from the first digital assistant after waiting for the response after first receiving the response from the first digital assistant.
- the data processing system can determine, upon receipt of the first response from the first digital assistant component, that the first response is flagged as a fallback response at block 316.
- the first digital assistant although being configured as the preferred digital assistant, can assign the response generated by the first digital assistant as a fallback response.
- the data processing system can select the second response based on the determination that the second digital assistant component is not the preferred digital assistant and the first response is flagged as the fallback response.
- the data processing system may prioritize responses from the first digital assistant, and may have waited for the response from the first digital assistant even though the data processing system had already received a response from the second digital assistant, the data processing system may ultimately decide to select the response from the second digital assistant because the response from the first digital assistant was flagged as a fallback response.
- the response from the second digital assistant may not have been flagged as a fallback. If responses from both the first and digital assistants were flagged as fallback responses, then the data processing system can select the response from the preferred digital assistant, such as the first digital assistant in this example.
- the data processing system can rank the response from the preferred digital assistant higher and select the response from the preferred digital assistant, unless the response from the preferred digital provider is flagged as a fallback response and the response from the not preferred digital assistant is not flagged as a fallback.
- FIG. 4 illustrates a method to coordinate parallel processing of audio queries across multiple devices using the example system illustrated in FIG. 1 or FIG. 3.
- the method 400 can be performed by data processing system 102.
- the data processing system can receive an audio signal from the client device.
- the client device can detect the audio signal using a sensor, such as a microphone or transducer.
- the audio signal can include voice or speech from a user of the client device.
- the audio signal can include a wakeup word, keyword, hotword, or trigger word to alert the client device to take action responsive to at least a portion of the audio signal.
- the audio signal can be converted to text to generate a query.
- the client device itself can convert the detected audio signal to speech, or the client device can transmit the audio signal to a streaming speech server to convert the audio to text.
- the client device can pre-process or convert the audio signal to another format to facilitate data transmissions over a network.
- the client device can convert the analog audio input signal to a digital audio signal that facilitates transmitting the audio signal as a payload in data packets over a network.
- the data processing system or streaming speech server can, upon receiving the data packets, convert the audio signal to text.
- the data processing system can identify a query in the text corresponding to the audio signal.
- the query can include, for example, a request for content.
- the query can include a request for data or information.
- the query can include a request for the data processing system or client device or other device to perform an action, such as a digital or electronic action.
- the data processing system can transmit the query to a first digital assistant server for processing.
- the data processing system can transmit the query to a second digital assistant server for processing.
- the data processing system can transmit the query to multiple digital assistants via separate branches. Branches can refer to processing threads.
- the data processing system can simultaneously transmit the queries to multiple digital assistants for processing.
- the data processing system can use ranking decision logic to override the first digital assistant’s response and select the second digital assistant’s response.
- the data processing system can select a ranking decision logic based on a signal in the query. Signals can refer to or indicate types of queries, such as movie queries, news queries, music queries, audio book queries, weather queries, or television show queries, for example.
- the data processing system can identify a signal indicating a type of query, and then select a corresponding ranking decision logic to select a preferred digital assistant. For example, if the query is a movie query, then the data processing system can set the first digital assistant as the preferred digital assistant. However, if the signal indicates the query is a search query, then the data processing system can set the second digital assistant as the preferred digital assistant, for example.
- the data processing system can select the ranking decision function from a pool of multiple ranking decision function.
- the data processing system can select the ranking decision function based on the signal of the query. For example, the data processing system can select a first ranking decision function for a movie query, a second ranking decision function for a music query, or a third ranking decision function for a news query.
- the first ranking decision function can assign the first digital assistant as the preferred digital assistant, and set a first threshold for a confidence score for responses.
- the second ranking decision can assign the second digital assistant as the preferred digital assistant, and set a second threshold confidence score for responses.
- the first and second thresholds can be set or tuned based on factors associated with responses to the respective queries. For example, there may be a lower confidence score threshold for weather queries, but a higher confidence score threshold for navigation related queries or movie related queries.
- a first digital assistant can be configured to process and respond to audio queries that are related to media domain queries such as“play Movie_A on
- Streaming_Service_A while a second digital assistant component can be configured to process and respond to search domain queries such as“when is my next appointment”. If the signal of the query is ambiguous or fall into multiple categories, then the data processing system can rank the responses from the multiple digital assistant components and select a response from one of the digital assistant component. For example, the data processing system can score or rank the responses or queries based on a confidence level, quality score, or other factors.
- the data processing system can use the ranking decision logic or function to select one of the digital assistants from which to select the response.
- the data processing system can provide the selected response from the selected digital assistant to the client device for presentations.
- the data processing system can provide the response to the query generated by the second digital assistant to the client device for presentation.
- FIG. 5 is a block diagram of an example computer system 500.
- the computer system or computing device 500 can include or be used to implement the system 100 or its components such as the data processing system 102, the client device 104, the first digital assistant server 106, and the display device 108.
- the computing system 500 includes a bus 505 or other communication component for communicating information and a processor 510 or processing circuit coupled to the bus 505 for processing information.
- the computing system 500 can include one or more processors 510 or processing circuits coupled to the bus for processing information.
- the computing system 500 includes main memory 515, such as a random access memory (RAM) or other dynamic storage device, coupled to the bus 505 for storing information and instructions to be executed by the processor 510.
- the main memory 515 can be or include the data repository 140.
- the main memory 515 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by the processor 510.
- the computing system 500 may further include a read-only memory (ROM) 520 or other static storage device coupled to the bus 505 for storing static information and instructions for the processor 510.
- ROM read-only memory
- a storage device 525 such as a solid state device, magnetic disk or optical disk, can be coupled to the bus 505 to persistently store information and instructions.
- the storage device 525 can include or be part of the data repository 140.
- the computing system 500 may be coupled via the bus 505 to a display 535, such as a liquid crystal display or active matrix display, for displaying information to a user.
- a display 535 such as a liquid crystal display or active matrix display, for displaying information to a user.
- An input device 530 such as a keyboard including alphanumeric and other keys, may be coupled to the bus 505 for communicating information and command selections to the processor 510.
- the input device 530 can include a touch screen display 535.
- the input device 530 can include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to the processor 510 and for controlling cursor movement on the display 535.
- the display 535 can be part of the data processing system 102, the client devices 104, the display devices 108, or other component of FIG. 1, for example.
- the processes, systems and methods described herein can be implemented by the computing system 500 in response to the processor 510 executing an arrangement of instructions contained in main memory 515. Such instructions can be read into main memory 515 from another computer-readable medium, such as the storage device 525. Execution of the arrangement of instructions contained in main memory 515 causes the computing system 500 to perform the illustrative processes described herein. One or more processors in a multi processing arrangement may be employed to execute the instructions contained in main memory 515. Hard-wired circuitry can be used in place of or in combination with software instructions together with the systems and methods described herein. Systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
- the users may be provided with an opportunity to control whether programs or features that may collect personal information (e.g., information about a user’s social network, social actions, or activities; a user’s preferences; or a user’s location), or to control whether or how to receive content from a content server or other data processing system that may be more relevant to the user.
- personal information e.g., information about a user’s social network, social actions, or activities; a user’s preferences; or a user’s location
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed when generating parameters.
- a user’s identity may be anonymized so that no personally identifiable information can be determined for the user, or a user’s geographic location may be generalized where location information is obtained (such as to a city, postal code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, postal code, or state level
- the user may have control over how information is collected about him or her and used by the content server.
- the subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- the subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions, encoded on one or more computer storage multimedia for execution by, or to control the operation of, data processing apparatuses.
- the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial-access memory array or device, or a combination of one or more of them. While a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be, or be included in, one or more separate components or multimedia (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- data processing apparatus encompass various apparatuses, devices, and machines for processing data, including, by way of example, a programmable processor, a computer, a system on a chip, or multiple ones, or combinations of the foregoing.
- the apparatus can include special-purpose logic circuitry, e.g., an FPGA (field-programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- the components of system 100 can include or share one or more data processing apparatuses, systems, computing devices, or processors.
- a computer program (also known as a program, software, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program can correspond to a file in a file system.
- a computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of the data processing system 102, the client device 104, the first digital assistant server 106, and the display device 108) to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatuses can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field- programmable gate array) or an ASIC (application-specific integrated circuit).
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, multimedia and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- the subject matter described herein can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification, or a combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system such as system 100 or system 500 can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network (e.g., the network 110).
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., data packets representing a content item) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- Data generated at the client device can be received from the client device at the server (e.g., received by the data processing system 102 from the client devices 104 or the display device 108).
- the client device at the server e.g., received by the data processing system 102 from the client devices 104 or the display device 108.
- the separation of various system components does not require separation in all implementations, and the described program components can be included in a single hardware or software product.
- the NLP component 124 and the direct action API 126 can be a single component, app, or program, or a logic device having one or more processing circuits, or part of one or more servers of the data processing system 102.
- references to implementations, elements, or acts of the systems and methods herein referred to in the singular may also embrace implementations including a plurality of these elements, and any references in plural to any implementation, element, or act herein may also embrace implementations including only a single element.
- References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to single or plural configurations. References to any act or element being based on any information, act, or element may include
- implementations “one implementation,” or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the implementation may be included in at least one implementation or embodiment. Such terms as used herein are not necessarily all referring to the same implementation. Any implementation may be combined with any other implementation, inclusively or exclusively, in any manner consistent with the aspects and implementations disclosed herein.
- references to“or” may be construed as inclusive so that any terms described using“or” may indicate any of a single, more than one, and all of the described terms.
- a reference to“at least one of‘A’ and ⁇ ’” can include only‘A’, only‘B’, as well as both‘A’ and ⁇ ’.
- Such references used in conjunction with“comprising” or other open terminology can include additional items.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862666681P | 2018-05-03 | 2018-05-03 | |
PCT/US2019/026321 WO2019212697A1 (en) | 2018-05-03 | 2019-04-08 | Coordination of overlapping processing of audio queries |
Publications (1)
Publication Number | Publication Date |
---|---|
EP3596616A1 true EP3596616A1 (en) | 2020-01-22 |
Family
ID=66248772
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19719040.8A Pending EP3596616A1 (en) | 2018-05-03 | 2019-04-08 | Coordination of overlapping processing of audio queries |
Country Status (5)
Country | Link |
---|---|
US (1) | US20210334306A1 (en) |
EP (1) | EP3596616A1 (en) |
JP (2) | JP7119218B2 (en) |
KR (3) | KR20240007723A (en) |
WO (1) | WO2019212697A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11595517B2 (en) * | 2021-04-13 | 2023-02-28 | Apple Inc. | Digital assistant integration with telephony |
US11972764B2 (en) | 2021-11-10 | 2024-04-30 | Google Llc | Providing related queries to a secondary automated assistant based on past interactions |
Family Cites Families (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6484155B1 (en) | 1998-07-21 | 2002-11-19 | Sentar, Inc. | Knowledge management system for performing dynamic distributed problem solving |
JP2003044088A (en) | 2001-07-27 | 2003-02-14 | Sony Corp | Program, recording medium, device and method for voice interaction |
JP2003295890A (en) | 2002-04-04 | 2003-10-15 | Nec Corp | Apparatus, system, and method for speech recognition interactive selection, and program |
JP2008090545A (en) | 2006-09-29 | 2008-04-17 | Toshiba Corp | Voice interaction device and method |
US8626511B2 (en) * | 2010-01-22 | 2014-01-07 | Google Inc. | Multi-dimensional disambiguation of voice commands |
CN103229120A (en) * | 2010-09-28 | 2013-07-31 | 国际商业机器公司 | Providing answers to questions using hypothesis pruning |
WO2014020835A1 (en) | 2012-07-31 | 2014-02-06 | 日本電気株式会社 | Agent control system, method, and program |
US10032234B2 (en) * | 2013-01-29 | 2018-07-24 | Facebook, Inc. | Ranking search results using diversity groups |
US11393461B2 (en) * | 2013-03-12 | 2022-07-19 | Cerence Operating Company | Methods and apparatus for detecting a voice command |
JP5753212B2 (en) | 2013-03-19 | 2015-07-22 | シャープ株式会社 | Speech recognition system, server, and speech processing apparatus |
US9582608B2 (en) * | 2013-06-07 | 2017-02-28 | Apple Inc. | Unified ranking with entropy-weighted information for phrase-based semantic auto-completion |
EP2881898A1 (en) * | 2013-12-09 | 2015-06-10 | Accenture Global Services Limited | Virtual assistant interactivity platform |
US20160378747A1 (en) * | 2015-06-29 | 2016-12-29 | Apple Inc. | Virtual assistant for media playback |
JP2017107078A (en) | 2015-12-10 | 2017-06-15 | パナソニック インテレクチュアル プロパティ コーポレーション オブ アメリカＰａｎａｓｏｎｉｃ Ｉｎｔｅｌｌｅｃｔｕａｌ Ｐｒｏｐｅｒｔｙ Ｃｏｒｐｏｒａｔｉｏｎ ｏｆ Ａｍｅｒｉｃａ | Voice interactive method, voice interactive device, and voice interactive program |
US10339934B2 (en) * | 2016-06-27 | 2019-07-02 | Google Llc | Asynchronous processing of user requests |
JP6614080B2 (en) | 2016-09-16 | 2019-12-04 | トヨタ自動車株式会社 | Spoken dialogue system and spoken dialogue method |
US11188808B2 (en) * | 2017-04-11 | 2021-11-30 | Lenovo (Singapore) Pte. Ltd. | Indicating a responding virtual assistant from a plurality of virtual assistants |
US11631017B2 (en) * | 2018-01-09 | 2023-04-18 | Microsoft Technology Licensing, Llc | Federated intelligent assistance |
US20190237067A1 (en) * | 2018-01-31 | 2019-08-01 | Toyota Motor Engineering & Manufacturing North America, Inc. | Multi-channel voice recognition for a vehicle environment |
-
2019
- 2019-04-08 KR KR1020247000715A patent/KR20240007723A/en not_active Application Discontinuation
- 2019-04-08 JP JP2021512359A patent/JP7119218B2/en active Active
- 2019-04-08 KR KR1020207034786A patent/KR102506361B1/en active IP Right Grant
- 2019-04-08 KR KR1020237007207A patent/KR102624149B1/en active IP Right Grant
- 2019-04-08 US US16/341,763 patent/US20210334306A1/en active Granted
- 2019-04-08 WO PCT/US2019/026321 patent/WO2019212697A1/en unknown
- 2019-04-08 EP EP19719040.8A patent/EP3596616A1/en active Pending
-
2022
- 2022-08-02 JP JP2022123395A patent/JP7439186B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
WO2019212697A1 (en) | 2019-11-07 |
KR102506361B1 (en) | 2023-03-06 |
KR102624149B1 (en) | 2024-01-11 |
US20210334306A1 (en) | 2021-10-28 |
JP2022172090A (en) | 2022-11-15 |
KR20230034443A (en) | 2023-03-09 |
KR20210002715A (en) | 2021-01-08 |
KR20240007723A (en) | 2024-01-16 |
JP7439186B2 (en) | 2024-02-27 |
JP2021523500A (en) | 2021-09-02 |
CN110741362A (en) | 2020-01-31 |
JP7119218B2 (en) | 2022-08-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN113571058B (en) | Voice action discoverability system | |
US10541998B2 (en) | Authentication of packetized audio signals | |
US11841893B2 (en) | Coordination of parallel processing of audio queries across multiple devices | |
JP7439186B2 (en) | Coordinating overlapping audio queries | |
US11664025B2 (en) | Activation of remote devices in a networked system | |
US20220027124A1 (en) | Verifying operational statuses of agents interfacing with digital assistant applications | |
US20200257853A1 (en) | Verifying operational statuses of agents interfacing with digital assistant applications | |
US11823663B2 (en) | Audio processing in a low-bandwidth networked system | |
CN110741362B (en) | Coordination of overlapping processing of audio queries | |
JP2024063034A (en) | Coordination of overlapping audio queries |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: UNKNOWN |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20191018 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20210416 |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) |
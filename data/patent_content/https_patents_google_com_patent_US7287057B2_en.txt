US7287057B2 - Accessing information using an instant messaging system - Google Patents
Accessing information using an instant messaging system Download PDFInfo
- Publication number
- US7287057B2 US7287057B2 US10/002,685 US268501A US7287057B2 US 7287057 B2 US7287057 B2 US 7287057B2 US 268501 A US268501 A US 268501A US 7287057 B2 US7287057 B2 US 7287057B2
- Authority
- US
- United States
- Prior art keywords
- message
- destination
- client
- messaging application
- computer program
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/04—Real-time or near real-time messaging, e.g. instant messaging [IM]
Definitions
- the present invention relates to the field of messaging systems and, more specifically, accessing information using messaging systems such as instant messaging systems.
- Web browsers are many times slow and time-consuming to use. When the connection bandwidth of a web browser is low or there are great amounts of web traffic, there is often a long wait for information to be displayed in the web browser. This is a common problem for low bandwidth users such as PC users with a dial-up connection or handheld/cell phone users with a wireless connection.
- web browsers sometimes do not correctly process certain types of web content, such as Java script. This can lead to the web browser shutting down or the computer system crashing.
- web browsers often require a certain amount of user interaction in order to access information. Users must often navigate through a series of web pages in order to get the information they are seeking. This can be time-consuming and annoying.
- IM instant messaging
- IM allows users to instantaneously exchange messages including text, audio, video and various types of files.
- IM is immediate as it does not require users to navigate through irrelevant information.
- IM is generally only available for communication between users and does not currently support accessing information in a database or on the web.
- the method includes registering with a set of client messaging applications for sending and receiving messages.
- a message includes an information request.
- a message is received from the one of the client messaging applications and the destination of the message is determined.
- the third party application determined to be the destination of the message is then selected and the message is transmitted to the third party application.
- a return message is received from the third party application.
- the return message includes the requested information.
- the destination of the return message is determined.
- the client messaging application determined to be the destination of the return message is then selected and the return message is transmitted to the client messaging application.
- the client messaging application is a commercially available instant messaging application.
- the third party application is a commercially available messaging server.
- the present invention provides the ability to access a database via an instant messaging application. This feature of the present invention allows a user to access desired information quickly, efficiently, and using a minimal amount of user interaction.
- the present invention provides compatibility and portability.
- the present invention provides an interface with client messaging applications and third party applications.
- the interface supports various types and formats of client messaging applications and third party applications. This feature increases the ease-of-use and adaptability of the present invention.
- FIG. 1 is a block diagram illustrating the overall system architecture of an embodiment of the present invention, showing connectivity among the various components.
- FIG. 2A is a block diagram showing a more detailed illustration of the Botserver in an embodiment of the present invention, showing connectivity among the various components.
- FIG. 2B is a block diagram showing a more detailed illustration of the Botserver in an embodiment of the present invention, showing connectivity among the various components.
- FIG. 3 is a flowchart depicting an embodiment of the operation and control flow of the message pre-processing procedure of the present invention.
- FIG. 4 is a flowchart depicting an embodiment of the operation and control flow of the message handling process of the present invention, after the message pre-processing procedure of FIG. 3 .
- FIG. 5 is a screenshot showing an instant messaging interface to a bot, in one embodiment of the present invention.
- FIG. 6 is a screenshot showing an instant messaging interface to a bot, in one embodiment of the present invention.
- FIG. 7 is a screenshot showing an instant messaging interface to a bot, in one embodiment of the present invention.
- FIG. 8 is a screenshot showing an instant messaging interface to a bot, in one embodiment of the present invention.
- FIG. 9 is a screenshot showing an instant messaging interface to a bot, in one embodiment of the present invention.
- FIG. 10 is a block diagram of an exemplary computer system useful for implementing the present invention.
- web page refers to a file, typically written in Hypertext Markup Language (HTML), Java, Extended Markup Language (XML), Active Server or Cold Fusion format. Such a file is typically viewed using a web browser.
- HTML Hypertext Markup Language
- XML Extended Markup Language
- Active Server Active Server
- web site refers to a group of web pages that are associated in some manner, such as geographically, contextually or categorically.
- a web site usually refers to a group of web pages located within one domain name.
- the term “user” refers to a person using an application executing on a computer system.
- the user is a person using a client messaging application.
- API refers to an Application Programming Interface.
- An API is an interface by which an application program can access operating system commands.
- An API offers a level of abstraction between a high level application program and a lower level application program that was written without consideration for the calling conventions supported by the high level application program.
- Telnet refers to the internet standard protocol for remote login. Telnet is a message-based protocol whereby a terminal emulator is provided to a remote user for a remote login session on a computer system. The remote user conducts the session on the computer system as if the remote user were present at the computer system.
- LDAP Lightweight Directory Access Protocol
- LDAP is a message based protocol whereby a user can utilize directory services and access directory information using a set of commands.
- bot refers to an autonomous computer program that acts as an agent for a user or another computer program.
- a bot is used to access a database for a user.
- IM instant message
- instant messaging application such as American Online Instant Messenger.
- Instant messages are typically received and displayed in an interface immediately after transmission.
- Instant messaging applications are used for immediate communication between users.
- FIG. 1 is a block diagram illustrating the overall system 100 of an embodiment of the present invention, showing connectivity among the various components.
- FIG. 1 is a generalized embodiment of the present invention.
- FIG. 1 shows clients running messaging applications connecting to Botservers via a network. The Botservers in turn connect to third parties via a network.
- FIG. 1 represents the network model of the present invention.
- FIG. 1 shows multiple clients numbered one 102 through N 112 .
- a messaging application numbered one 104 through N 114 Corresponding to each client is a messaging application numbered one 104 through N 114 .
- messaging applications 104 through 114 are any commercially available instant messaging application programs executing on client 102 through 112 . Examples of such instant messaging applications are: Lotus Sametime Messaging, America Online Instant Messenger, MSN Messenger Service, Yahoo Messenger, ICQ and Jabber Instant Messenger.
- messaging applications 104 through 114 are a telnet utility. Messaging applications 104 through 114 are implemented in hardware, software, or a combination of the two.
- System 100 also supports multiple messaging servers, with each messaging server running a messaging application.
- FIG. 1 shows multiple messaging servers numbered one 122 through N 132 .
- messaging servers 122 through 132 are any commercially available messaging servers for handling messaging operations. Examples of such messaging servers are the Lotus Domino Server and the Microsoft Exchange Server.
- Corresponding to each messaging server 122 through 132 are multiple messaging applications numbered one 124 through N 134 .
- Messaging applications 124 through 134 are components of messaging applications 104 through 114 . That is, multiple messaging applications numbered one 124 through N 134 provide functionality or support for messaging applications 104 through 114 .
- messaging applications 104 through 114 are fully self-sustainable and messaging applications numbered one 124 through N 134 are not required in system 100 .
- System 100 shows network 108 for connecting clients 102 through 112 , messaging servers 122 through 132 and Botservers 106 through 116 .
- network 108 is a circuit switched network, such as the Public Service Telephone Network (PSTN).
- PSTN Public Service Telephone Network
- the network 108 is a packet switched network.
- the packet switched network is a wide area network (WAN), such as the global Internet, a private WAN, a local area network (LAN), a telecommunications network or any combination of the above-mentioned networks.
- network 108 is a wired, wireless, broadcast or point-to-point.
- Botservers 106 through 116 are computer application programs which embody the substantive concepts of the present invention. Botservers 106 through 116 comprise the functionality of messaging server operations, message routing, message queuing and bot operations. Botserver 106 is implemented in hardware, software, or a combination of the two. Each component of Botservers 106 through 116 is described in greater detail below.
- Botservers 106 through 116 execute on the same computer systems as the computer system of clients 102 through 112 .
- Botservers 106 through 116 execute on computer systems separate from the computer systems of clients 102 through 112 .
- Botservers 106 through 116 exist on the same network as users 102 through 112 and messaging applications 104 through 114 . In this case, Botserver 106 communicates with users 102 through 112 and messaging applications 104 through 114 over the network.
- Various networks are described in greater detail below.
- the computer systems of clients 102 through 112 and Botservers 106 through 116 are one or more PCs (e.g., IBM or compatible PC workstations running the Microsoft Windows 95/98/ME or Windows NT/2000 operating system, Macintosh computers running the Mac OS operating system, or equivalent), Personal Digital Assistants (PDAs), game consoles or any other processing devices that are used with a messaging system.
- the computer systems of clients 102 through 112 and Botservers 106 through 116 are a server such as one or more SUN Ultra workstations running the SunOS operating system.
- the computer systems of clients 102 through 112 and Botservers 106 through 116 are one or more IBM or compatible PC workstations with Intel Pentium III processors running either the Windows NT operating system or the BSD Unix operating system.
- Each of the Botservers 106 through 116 are connected to a separate network. Multiple networks numbered one 118 through N 128 are shown. Each of network 118 through 128 is a separate network or the same network. A more detailed description of various networks is given above.
- FIG. 1 shows multiple third party applications for each of a multitude of networks: third party applications numbered one 110 through N 120 are shown and third party applications numbered one 130 through N 140 are shown.
- Third party applications 110 through 120 and 130 through 140 are any database system supporting the storage and retrieval of records.
- third party applications 110 through 120 and 130 through 140 are commercially available database systems such as personal finance databases, stock market databases or personal contact databases.
- third party applications 110 through 120 and 130 through 140 are locations for storing and retrieving files such as a web site, a File Transfer Protocol (FTP) site or a gopher site.
- FTP File Transfer Protocol
- FIG. 2A is a block diagram 200 showing a more detailed illustration of each Botserver 106 through 116 (see FIG. 1 ) in an embodiment of the present invention, showing connectivity among the various components.
- diagram 200 comprises the functionality of messaging server operations, message routing, message queuing and bot operations.
- FIG. 2A shows a messaging application 202 , a messaging API 204 , Botserver base code 206 , bot API 208 and bot 210 .
- Messaging application 202 serves to handle the messages received from clients.
- Messaging application 202 is a component of messaging applications 104 through 114 shown in FIG. 1 . That is, messaging application 202 provides functionality or support for messaging applications 104 through 114 . In an embodiment of the present invention, messaging applications 104 through 114 are fully self-sustainable and messaging application 202 is not required in diagram 200 .
- Botserver base code 206 comprises the substantive functions performed by each Botserver 106 through 116 .
- Botserver base code 206 performs, among other things, message routing and message queuing.
- Botserver base code 206 also responds to certain messages from user 102 .
- the functions performed by Botserver base code 206 are described in greater detail below.
- Bot 210 is an autonomous computer program that acts as an agent for user 102 .
- Bot 210 is an application program capable of communicating with third party applications 110 through 120 and 130 through 140 .
- Bot 210 communicates with third party applications 110 through 120 and 130 through 140 in response to a message from a client.
- bot 210 executes an information request embedded within a message received from a client.
- Information requests within a message are in text format, audio format or any other query format known to one of ordinary skill in the art.
- a bot 210 is programmed to retrieve telephone numbers from a telephone number database 110 .
- Bot 210 receives from a client 102 an instant text message including the text request: “Phone number: John Doe.”
- Bot 210 recognizes the text of the instant message as a request for a telephone number.
- the text of the instant message is then translated into a query that is handled by a third party application 110 , which is a telephone number database.
- bot 210 retrieves the telephone number from third party application 110 .
- bot 210 formats and sends to client 102 a reply instant text message including the telephone number requested.
- bot 210 is programmed to handle a text query in Structured Query Language (SQL) format. In another embodiment of the present invention, bot 210 is programmed to handle any query known to one of ordinary skill in the art for accessing a database. A more detailed example of a bot is given below.
- SQL Structured Query Language
- Messaging API 204 is an API that provides a level of abstraction between Botserver base code 206 and messaging application 202 . That is, messaging API 204 acts as a translator between Botserver base code 206 and messaging application 202 .
- the calling conventions utilized by Botserver base code 206 to communicate with messaging application 202 must adhere to the calling conventions of messaging API 204 .
- the calling conventions of messaging API 204 must adhere to the calling conventions of messaging application 202 .
- messaging application 202 to adhere to the calling conventions of Botserver base code 206 .
- the use of messaging API 204 increases the compatibility and portability of both Botserver base code 206 and messaging application 202 .
- Bot API 208 is an API that provides a level of abstraction between Botserver base code 206 and bot 210 . That is, bot API 208 acts as a translator between Botserver base code 206 and bot 210 .
- the calling conventions utilized by Botserver base code 206 to communicate with bot 210 must adhere to the calling conventions of bot API 208 .
- the calling conventions of bot API 208 must adhere to the calling conventions of bot 210 .
- bot 210 to adhere to the calling conventions of Botserver base code 206 .
- the use of bot API 208 increases the compatibility and portability of both Botserver base code 206 and bot 210 .
- Appendix A a Java code implementation of messaging API 204 and bot API 208 is described in Appendix A of the present application. Appendix A is hereby incorporated by reference in its entirety. Appendix A provides a summary and a hierarchy for each class and each interface of the messaging API 204 and the bot API 208 Java code implementation. Appendix A also provides a description of each class and a master index including every class, interface, method and variable in the Java code implementation.
- FIG. 2B is a block diagram 250 showing a more detailed illustration of each Botserver 106 through 116 in an embodiment of the present invention, showing connectivity among the various components.
- FIG. 2B shows the extendability of Botserver 106 .
- FIG. 2B shows messaging applications 252 and 256 , messaging APIs 254 and 258 , Botserver base code 206 , bot APIs 260 and 264 and bots 262 and 266 .
- FIG. 2B shows that Botserver 106 supports multiple messaging applications, multiple messaging APIs, multiple bot APIs and multiple bots.
- Botserver 106 implemented in an office setting.
- the clients desire to use both the Yahoo Messenger instant messaging application and the ICQ instant messaging application.
- messaging application 252 is programmed to handle Yahoo Messenger instant messages
- messaging application 256 is programmed to handle ICQ instant messages.
- messaging API 254 acts to interface messaging application 252 with Botserver base code 206
- messaging API 258 acts to interface messaging application 256 with Botserver base code 206 . Because of the use of the messaging APIs 254 and 258 , Botserver base code 206 need not be concerned with the individual implementations of the messaging applications 252 and 256 .
- the clients desire to access two third party applications: a telephone number database and a stock-quote database. Both databases in this example exist on the same network as the clients.
- a bot 262 has been created to handle information requests for telephone numbers and a bot 266 has been created to handle information requests for stock-quotes.
- Bot API 260 acts to interface bot 262 with Botserver base code 206 and bot API 264 acts to interface bot 266 with Botserver base code 206 . Because of the use of the bot APIs 260 and 264 , Botserver base code 206 need not be concerned with the individual implementations of the bots 262 and 266 .
- a client uses Yahoo Messenger to send an instant message requesting a particular telephone number.
- Messaging application 252 receives the message and sends it to Botserver base code 206 via messaging API 254 .
- Botserver base code 206 recognizes the message as a Yahoo Messenger instant message and places the message in the incoming message queue corresponding to Yahoo Messenger. Subsequently, the message is identified as a request for a telephone number and the message is sent to the appropriate bot (bot 262 ) via bot API 260 .
- Bot 262 receives the instant message, reads the information request and accesses the requested information from the telephone number database. Bot 262 then formats and sends to the client a reply instant message including the requested information. Botserver base code 206 receives the reply message via bot API 206 . Botserver base code 206 recognizes the reply message as a Yahoo Messenger instant message and places the reply message in the outgoing message queue corresponding to Yahoo Messenger. Subsequently, the reply message is sent to the appropriate messaging application (messaging application 252 ) via messaging API 254 . The reply message is then sent to the intended client.
- messages application 252 messaging application
- FIG. 3 is a flowchart depicting an embodiment of the operation and control flow 300 of the message pre-processing procedure of the present invention.
- FIG. 3 generally shows the message pre-processing operations conducted by each Botserver 106 through 116 and specifically by Botserver base code 206 .
- Control flow 300 begins with step 302 and flows directly to step 304 .
- step 304 the Botserver waits for a request to handle a message.
- This request originates from a client, a messaging application or a bot.
- step 306 a request to handle a message is received.
- step 308 the Botserver determines the type of the message. If the message was sent by a client and intended for a bot, the message is deemed an incoming message and control flows directly to step 314 . If the message was sent by a bot and intended for a client, the message is deemed an outgoing message and control flows directly to step 312 . If the message is a communication message from a messaging application, the message is deemed a communication message and control flows directly to step 310 .
- a communication message is a message from a messaging application that can be handled by the Botserver.
- An example of a communication message is a status request message from a messaging application.
- a status request message seeks a status, such as connection status, of the Botserver.
- the Botserver in response to the status request message, checks its status and returns the information to the requesting messaging application without interacting with any other entity.
- Another example of a communication message is a fatal error message from a messaging application.
- a fatal error message seeks to inform the Botserver that an error has occurred at a messaging application during processing.
- the Botserver in response to the fatal error message, creates an error log without interacting with any other entity.
- the Botserver handles the outgoing message.
- An outgoing message is typically a message originating from a bot and intended for a client.
- the Botserver routes the message to the intended client.
- the Botserver also queues the message in a queue that flows towards the intended client.
- each queue uses any conventional queuing technique known to one of ordinary skill in the art. Queuing techniques are described in greater detail below.
- Botserver 106 handles the incoming message. In doing so, Botserver 106 determines the messaging application source of the message and places the incoming message on the appropriate queue. As shown in FIG. 2B , Botserver 106 supports multiple messaging applications 252 and 256 , multiple messaging APIs 254 and 258 , multiple bot APIs 260 and 264 and multiple bots 262 and 266 . In an embodiment of the present invention, a separate queue corresponding to each messaging application 252 and 256 is created. As such, each queue holds the messages corresponding to the messaging application from which the incoming message originated.
- the Botserver reviews each incoming message.
- the Botserver then accesses a messaging application registry to determine the source of the incoming message.
- the messaging application registry consists of a list of messaging applications currently being supported by the Botserver.
- the Botserver reviews each incoming message and attempts to match the message to a messaging application on the list in the messaging application registry.
- the Botserver recognizes the queue in which the message belongs.
- the Botserver places each incoming message in the queue which corresponds to the messaging application from which it was received.
- each queue uses any conventional queuing technique known to one of ordinary skill in the art. Queuing techniques are described in greater detail below.
- Control flow 300 executes continuously between steps 304 to 314 as messages are received and processed.
- FIG. 4 is a flowchart depicting an embodiment of the operation and control flow 400 of the message handling process of the present invention, after the message pre-processing procedure of FIG. 3 .
- FIG. 4 generally shows the message handling operations conducted by the Botserver and specifically by Botserver base code 206 .
- Control flow 400 is a flowchart of operation and control after the message pre-processing of control flow 300 .
- Control flow 400 begins with step 402 and flows directly to step 404 .
- the Botserver accesses the next message available on the incoming message queue for processing.
- various queuing techniques are used to queue messages.
- the first-in-first-out queuing technique queues messages in the order in which they are received.
- the first message to be received is the first message to be processed and transmitted.
- the priority queuing technique queues messages in the order of their priority. As such, the messages with the highest priorities are processed and transmitted before other messages. Any conventional queuing technique known to one of ordinary skill in the art is used by Botserver 106 to queue messages.
- step 406 the Botserver determines whether it handles the message itself. If the result of this determination is affirmative, control flows directly to step 410 . If the result of this determination is negative, control flows directly to step 408 .
- the Botserver handles the message.
- Various messages are handled solely by the Botserver.
- One example of such a message is a help message from a client.
- the Botserver in response to the help message, provides the client with a list of bots or bot commands available to the client without interacting with any other entity, such as third party applications 110 through 140 (see FIG. 1 ).
- the Botserver formats a reply to the message.
- the Botserver formats a reply message to the client including a list of bots or bot commands available to the client.
- the Botserver 106 formats a reply message indicating that an appropriate bot was not found. In this case, the message also provides a list of bots currently supported by the Botserver.
- the Botserver formats a reply message indicating that although an appropriate bot was found, the bot did not handle the message correctly. In this case, the message also provides a list of commands or messages currently supported by the appropriate bot.
- step 418 the Botserver sends the reply message formatted in step 414 to the intended recipient.
- the Botserver searches for the appropriate bot to handle the incoming message.
- the Botserver accesses a bot registry to determine the bot to which the incoming message corresponds.
- the bot registry consists of a list of bots currently being supported by the Botserver.
- the Botserver reviews each incoming message and attempts to match the message to a bot on the list in the bot registry.
- step 412 the Botserver determines whether an appropriate bot was found in step 408 . If the result of this determination is positive, control flows directly to step 416 . If the result of this determination is negative, control flows directly to step 414 .
- step 416 the incoming message is sent to the appropriate bot found in step 408 .
- step 420 the Botserver determines whether the bot to which the incoming message was sent handled the message appropriately. If the result of this determination is positive, control flows directly to step 418 . If the result of this determination is negative, control flows directly to step 414 .
- step 418 the formatted message is sent.
- the Botserver sends the message formatted by the Botserver in step 414 .
- the Botserver sends the message formatted by the bot found in step 412 .
- Control flow 400 executes continuously between steps 404 to 420 as messages are received and processed.
- a Help Bot is programmed for accessing information currently in a web site format.
- the Help Bot is programmed to interact with the client using natural language.
- the Help Bot reads the information requests of the client and searches the web site for the requested information.
- the client desires to access information regarding his computer system.
- the organization for which the client works has set up an Information Technology (IT) web site for accessing information regarding the IT system of the organization.
- IT Information Technology
- the client has access to an instant messaging application that interfaces with the Help Bot which is specifically programmed to access the IT web site.
- the Help Bot has been programmed to parse natural language text questions from a client. The parsed text is then used to do a keyword search on the IT web site. The resulting matches are then presented to the client.
- the Help Bot parses the text question of the client and extracts the key words in the client's question: reset, password, and email application. The Help Bot then does a keyword search of the key words in the IT web site. The Help Bot presents the resulting matches to the client:
- the functions of the Help Bot are supplemented in several ways. If the information requested by the client is not found, The Help Bot automatically contacts an administrator. In addition, the Help Bot automatically sends the client's question to a bulletin board system or other message system for online communities. In order to enhance the didactic capabilities of the Help Bot, text is supplemented by audio, video or other forms of communication.
- a Lotus SameTime Connect Instant Messaging application is used as a client messaging application together with a bot for accessing a third party application—an LDAP directory.
- the LDAP directory is the internal IBM employee directory service known as the Bluepages directory.
- the bot in this embodiment is known as the Bluepages bot and is capable of reading an information request for a client, finding the Bluepages directory for the requested information and providing the requested information to the client.
- FIGS. 5-9 are screenshots showing the Lotus SameTime Connect Instant Messaging application interfacing to a Bluepages bot, in one embodiment of the present invention.
- FIG. 5 shows the Lotus SameTime Connect Instant Messaging application as it is first opened.
- the window shows a selection of choices for the client.
- the choices are entities with which the client communicates.
- the Bluepages bot 502 is shown as a choice 502 .
- Other choices, such as friends of the user, are also typically shown.
- FIG. 6 shows the SameTime Connect Instant Messaging application after the Bluepages bot has been chosen for communication by the client.
- a standard greeting 602 from the Bluepages bot is displayed in the communications window.
- the top of the communications window 604 displays information received from the Bluepages bot while the bottom of the communications window 606 displays information being sent by the client to the Bluepages bot.
- the client proceeds to submit a request for information via the bottom of the communications window.
- the client types the entry 608 “whois bluepages@us.ibm.com.”
- the format of this request indicates that the client seeks information regarding the following entity: bluepages@us.ibm.com. This entity is the Bluepages bot.
- the Bluepages bot then proceeds to find information regarding itself in the Bluepages directory.
- FIG. 7 shows the response from the Bluepages bot of FIG. 6 . It is shown that the Bluepages bot has retrieved a variety of information from the Bluepages directory regarding itself. The Bluepages bot has retrieved from the Bluepages directory the name 704 , manager 706 , location 708 , email address 710 , telephone number 712 and tie line 714 of the entity sought by the client. The client proceeds to seek the physical address of the Bluepages bot by typing in “address” 716 via the bottom of the communications window 606 . The Bluepages bot then proceeds to find the address information pertaining to itself in the Bluepages directory.
- FIG. 8 shows the response from the Bluepages bot to the query of FIG. 7 . It is shown that the Bluepages bot has retrieved the address information 802 of itself from the Bluepages directory.
- FIG. 9 shows the closing of communication between the client and the Bluepages bot. The client types in a greeting followed by a final salutation 902 . The Bluepages bot responds and communication between the two ceases.
- the present invention i.e., systems 100 , 200 , 250 , flows 300 , 400 or any part thereof
- the present invention is implemented using hardware, software or a combination thereof and is implemented in one or more computer systems or other processing systems.
- An example of a computer system 1000 is shown in FIG. 10 .
- the computer system 1000 represents any single or multi-processor computer. In conjunction, single-threaded and multi-threaded applications are used. Unified or distributed memory systems are used.
- the present invention is implemented in a multi-platform (platform independent) programming language such as Java, programming language/structured query language (PL/SQL), hyper-text mark-up language (HTML), practical extraction report language (PERL), Flash programming language, common gateway interface/structured query language (CGI/SQL) or the like.
- Java-enabled and JavaScript-enabled browsers are used, such as, Netscape, HotJava, and Microsoft Explorer browsers.
- Active content web pages can be used. Such active content web pages include Java applets or ActiveX controls, or any other active content technology developed now or in the future.
- the present invention is not intended to be limited to Java, JavaScript, or their enabled browsers, and are implemented in any programming language and browser, developed now or in the future, as would be apparent to a person skilled in the relevant art(s) given this description.
- the present invention is implemented using a high-level programming language (e.g., C++) and applications written for the Microsoft Windows NT or SUN OS environments. It will be apparent to persons skilled in the relevant art(s) how to implement the invention in alternative embodiments from the teachings herein.
- a high-level programming language e.g., C++
- applications written for the Microsoft Windows NT or SUN OS environments e.g., C++
- Computer system 1000 includes one or more processors, such as processor 1004 .
- processors 1004 execute software implementing the routines of the invention, described above.
- Each processor 1004 is connected to a communication infrastructure 1002 (e.g., a communications bus, cross-bar, or network).
- a communication infrastructure 1002 e.g., a communications bus, cross-bar, or network.
- Computer system 1000 includes a display interface 1008 that forwards graphics, text, and other data from the communication infrastructure 1002 (or from a frame buffer not shown) for display on the display unit 1010 .
- Computer system 1000 also includes a main memory 1006 , preferably random access memory (RAM), and also includes a secondary memory 1012 .
- the secondary memory 1012 includes, for example, a hard disk drive 1014 and/or a removable storage drive 1016 , representing a floppy disk drive, a magnetic tape drive, an optical disk drive, etc.
- the removable storage drive 1016 reads from and/or writes to a removable storage unit 1018 in a well known manner.
- Removable storage unit 1018 represents a floppy disk, magnetic tape, optical disk, etc., which is read by and written to by removable storage drive 1016 .
- the removable storage unit 1018 includes a computer usable storage medium having stored therein computer software and/or data.
- secondary memory 1012 includes other similar means for allowing computer programs or other instructions to be loaded into computer system 1000 .
- Such means include, for example, a removable storage unit 1022 and an interface 1020 .
- Examples include a program cartridge and cartridge interface (such as that found in video game console devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units 1022 and interfaces 1020 which allow software and data to be transferred from the removable storage unit 1022 to computer system 1000 .
- Computer system 1000 also includes a communications interface 1024 .
- Communications interface 1024 allows software and data to be transferred between computer system 1000 and external devices via communications path 1026 .
- Examples of communications interface 1024 include a modem, a network interface (such as Ethernet card), a communications port, interfaces described above, etc.
- Software and data transferred via communications interface 1024 are in the form of signals which are electronic, electromagnetic, optical or other signals capable of being received by communications interface 1024 , via communications path 1026 .
- communications interface 1024 provides a means by which computer system 1000 interfaces to a network such as the Internet.
- the present invention is implemented using software running (that is, executing) in an environment similar to that described above.
- the term “computer program product” is used to generally refer to removable storage unit 1018 , a hard disk installed in hard disk drive 1014 , or a carrier wave carrying software over a communication path 1026 (wireless link or cable) to communication interface 1024 .
- a computer useable medium includes magnetic media, optical media, or other recordable media, or media that transmits a carrier wave or other signal.
- Computer programs are stored in main memory 1006 and/or secondary memory 1012 . Computer programs are also received via communications interface 1024 . Such computer programs, when executed, enable the computer system 1000 to perform the features of the present invention as discussed herein. In particular, the computer programs, when executed, enable the processor 1004 to perform features of the present invention. Accordingly, such computer programs represent controllers of the computer system 1000 .
- the present invention is implemented as control logic in software, firmware, hardware or any combination thereof.
- the software is stored in a computer program product and loaded into computer system 1000 using removable storage drive 1006 , hard disk drive 1014 , or interface 1020 .
- the computer program product is downloaded to computer system 1000 over communications path 1026 .
- the control logic when executed by the one or more processors 1004 , causes the processor(s) 1004 to perform functions of the invention as described herein.
- the invention is implemented primarily in firmware and/or hardware using, for example, hardware components such as application specific integrated circuits (ASICs).
- ASICs application specific integrated circuits
Abstract
Description
-
- HelpBot>Welcome. Please enter your question.
The client enters into the instant messaging application window: - Client>How do I reset the password for my email application?
- HelpBot>Welcome. Please enter your question.
-
- HelpBot>Enter the number of the selection below and press enter:
- 1 How do I set up a screensaver password?
- 2 How do I change my password for my internet application?
- 3 How do I reset the password for my email application?
The client then presses 3 and the Help Bot responds with the pertinent information. - Client>3
- HelpBot>Open your email application.
- Select Tools.
- Select Options.
- Select the Passwords tab.
- Press the Reset Button.
Alternatively, if the information that the client is requesting is too lengthy, the Help Bot provides a URL to the client instead of displaying the requested information. The URL will link the client to a web page that will provide the requested information to the client.
- Client>3
- HelpBot>The following web page will help you: http:/server/email/passwords
Claims (44)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/002,685 US7287057B2 (en) | 2001-11-15 | 2001-11-15 | Accessing information using an instant messaging system |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/002,685 US7287057B2 (en) | 2001-11-15 | 2001-11-15 | Accessing information using an instant messaging system |
Publications (2)
Publication Number | Publication Date |
---|---|
US20030093480A1 US20030093480A1 (en) | 2003-05-15 |
US7287057B2 true US7287057B2 (en) | 2007-10-23 |
Family
ID=21701970
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/002,685 Active 2024-07-13 US7287057B2 (en) | 2001-11-15 | 2001-11-15 | Accessing information using an instant messaging system |
Country Status (1)
Country | Link |
---|---|
US (1) | US7287057B2 (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040019637A1 (en) * | 2002-07-26 | 2004-01-29 | International Business Machines Corporaion | Interactive one to many communication in a cooperating community of users |
US20060166735A1 (en) * | 2002-08-21 | 2006-07-27 | Mikohn Gaming Corporation | Equalizing different jackpot games with frequent pays |
US20060230112A1 (en) * | 2005-03-18 | 2006-10-12 | Yahoo! Inc. | Method for signing into a mobile device over a network |
US20080040485A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Customizable Personal Directory Services |
US20080037755A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Personal Directory Services with Directed Communication |
US20080040433A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Personal Directory Services with Presence Indication |
US20080177841A1 (en) * | 2007-01-19 | 2008-07-24 | Yahoo! Inc. | Dynamic combatting of spam and phishing attacks |
US20110078270A1 (en) * | 2003-10-06 | 2011-03-31 | Galli Marcio Dos Santos | System and method for seamlessly bringing external services into instant messaging session |
US20130144961A1 (en) * | 2011-12-01 | 2013-06-06 | Nhn Corporation | System and method for providing information interactively by instant messaging application |
US20150350123A1 (en) * | 2014-05-31 | 2015-12-03 | Samsung Electronics Co., Ltd. | User terminal apparatus, communication system, and method of controlling user terminal apparatus |
RU2658157C1 (en) * | 2017-04-26 | 2018-06-19 | Закрытое акционерное общество "Восточный Ветер" | Method for constructing temporary channels for data transmission between the im clients that use different communication protocols |
US10341267B2 (en) | 2016-06-20 | 2019-07-02 | Microsoft Technology Licensing, Llc | Anonymized identifiers for secure communication systems |
US10437841B2 (en) | 2016-10-10 | 2019-10-08 | Microsoft Technology Licensing, Llc | Digital assistant extension automatic ranking and selection |
US10838588B1 (en) | 2012-10-18 | 2020-11-17 | Gummarus, Llc | Methods, and computer program products for constraining a communication exchange |
US10841258B1 (en) | 2012-10-18 | 2020-11-17 | Gummarus, Llc | Methods and computer program products for browsing using a communicant identifier |
US10904178B1 (en) | 2010-07-09 | 2021-01-26 | Gummarus, Llc | Methods, systems, and computer program products for processing a request for a resource in a communication |
US11258731B2 (en) * | 2019-08-22 | 2022-02-22 | Orion Labs, Inc. | Bot proxy for group communication service |
US11611520B1 (en) | 2012-09-22 | 2023-03-21 | Motion Offense, Llc | Methods, systems, and computer program products for processing a data object identification request in a communication |
Families Citing this family (41)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7287057B2 (en) * | 2001-11-15 | 2007-10-23 | International Business Machines Corporation | Accessing information using an instant messaging system |
US20030131061A1 (en) * | 2001-11-28 | 2003-07-10 | Active Buddy, Inc. | Transparent proxy server for instant messaging system and methods |
US7310659B1 (en) | 2003-06-27 | 2007-12-18 | Sprint Communications Company L.P. | Interface and method for extending a target application over an instant message link of a communication network |
US20050027805A1 (en) * | 2003-07-15 | 2005-02-03 | Aoki Norihiro Edwin | Instant messaging and enhanced scheduling |
US7454469B2 (en) * | 2003-12-22 | 2008-11-18 | International Business Machines Corporation | Method and system for instant messaging Bots specification using state transition methodology and XML |
KR100597405B1 (en) * | 2004-05-28 | 2006-07-06 | 삼성전자주식회사 | System and method for relaying data by use of socket applicaton program |
US7668918B2 (en) * | 2004-08-02 | 2010-02-23 | Microsoft Corporation | Utilizing instant messaging to effectuate structured communication |
CN100362836C (en) * | 2004-08-31 | 2008-01-16 | 华为技术有限公司 | Method for announcing instant message |
US20080263571A1 (en) * | 2005-01-11 | 2008-10-23 | Sms.Ac | Systems and methods for automated user-initiated invitations |
US20060190557A1 (en) * | 2005-02-24 | 2006-08-24 | Ibm Corporation | Method and apparatus for forwarding user information among multiple information handling systems |
US7587596B2 (en) * | 2005-02-24 | 2009-09-08 | International Business Machines Corporation | Method and apparatus for updating information stored in multiple information handling systems |
US20060190547A1 (en) * | 2005-02-24 | 2006-08-24 | Ibm Corporation | Method and apparatus for restricting instant messaging during a scheduled event |
US20070011270A1 (en) * | 2005-06-14 | 2007-01-11 | Klein Stephen D | Methods and apparatus for initiating and alerting a conversation with an automated agent |
US20070172063A1 (en) * | 2006-01-20 | 2007-07-26 | Microsoft Corporation | Out-Of-Band Authentication for Automated Applications ("BOTS") |
US8261071B2 (en) * | 2006-01-31 | 2012-09-04 | Microsoft Corporation | Stateless human detection for real-time messaging systems |
EP2050008A4 (en) * | 2006-08-11 | 2011-01-26 | At & T Ip I Lp | Personal directory services with presence indication |
US8341221B2 (en) * | 2006-10-05 | 2012-12-25 | Verizon Patent And Licensing Inc. | Instant messenger location buddy |
US20080120380A1 (en) * | 2006-11-17 | 2008-05-22 | International Business Machines Corporation | Internet relay chat (irc) framework for a global enterprise service bus (esb) |
US20090005168A1 (en) * | 2007-06-27 | 2009-01-01 | Erica Frohm | Electronic or mechanical game with configurable columns |
US9177283B2 (en) * | 2007-06-29 | 2015-11-03 | Verizon Patent And Licensing Inc. | System and method for providing a community portal for chat-based support services |
US20090043857A1 (en) * | 2007-08-09 | 2009-02-12 | Sharp Laboratories Of America, Inc. | Systems and methods for sending and receiving a task via instant messaging |
US20090320050A1 (en) * | 2007-08-17 | 2009-12-24 | Sms.Ac | Mobile Network Community Platform Desktop API |
US8326998B2 (en) * | 2007-12-20 | 2012-12-04 | Verizon Patent And Licensing Inc. | Multimedia personal assistant |
US20100146499A1 (en) * | 2008-12-10 | 2010-06-10 | International Business Machines Corporation | Controlling Access to Electronic Devices by Meeting Invitees |
US8935633B2 (en) * | 2008-12-10 | 2015-01-13 | International Business Machines Corporation | Providing controlled access to the use of electronic devices |
TR201006485A2 (en) * | 2010-08-05 | 2011-06-21 | Nortel Networks Neta� Telekom�N�Kasyon A.�. | A method and system for hosting instant messaging robots |
US8935369B2 (en) | 2010-10-05 | 2015-01-13 | International Business Machines Corporation | Information technology for exchanging structural organizational information |
CN103546358B (en) * | 2012-07-09 | 2016-05-04 | 腾讯科技（深圳）有限公司 | Towards instant communication method and the system of third party's application |
BR102015004521B1 (en) * | 2015-02-27 | 2023-09-26 | Samsung Eletrônica da Amazônia Ltda. | METHOD FOR COMMUNICATION BETWEEN USERS AND SMART DEVICES |
KR101785420B1 (en) * | 2015-04-30 | 2017-11-06 | 주식회사 카카오 | Method for providing chatting service using cleint bot and apparatus for performing the method |
US10171410B2 (en) | 2016-03-28 | 2019-01-01 | Microsoft Technology Licensing, Llc | Cross-mode communiation |
US10587708B2 (en) | 2016-03-28 | 2020-03-10 | Microsoft Technology Licensing, Llc | Multi-modal conversational intercom |
US11487512B2 (en) | 2016-03-29 | 2022-11-01 | Microsoft Technology Licensing, Llc | Generating a services application |
WO2017214238A1 (en) | 2016-06-07 | 2017-12-14 | Orion Labs | Supplemental audio content for group communications |
US10491547B2 (en) | 2016-06-21 | 2019-11-26 | Oracle International Corporation | Internet cloud-hosted natural language interactive messaging system user resolver |
WO2017222615A1 (en) | 2016-06-21 | 2017-12-28 | Oracle International Corporation | Internet cloud-hosted natural language interactive messaging system sessionizer |
JP6999580B2 (en) * | 2016-06-21 | 2022-01-18 | オラクル・インターナショナル・コーポレイション | Interactive messaging system server cooperation in natural language hosted in the Internet cloud |
JP7441650B2 (en) | 2016-09-16 | 2024-03-01 | オラクル・インターナショナル・コーポレイション | Internet cloud-hosted natural language interactive messaging system with entity-based communication |
US10891627B2 (en) * | 2017-02-15 | 2021-01-12 | Salesforce.Com, Inc. | Methods and apparatus for using artificial intelligence entities to provide information to an end user |
CN109889423A (en) * | 2017-12-06 | 2019-06-14 | 腾讯科技（深圳）有限公司 | A kind of message treatment method, device and storage medium |
US10771407B2 (en) * | 2017-12-29 | 2020-09-08 | Paypal, Inc. | Multi-level bot architecture for data access |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6088796A (en) | 1998-08-06 | 2000-07-11 | Cianfrocca; Francis | Secure middleware and server control system for querying through a network firewall |
US20010034782A1 (en) * | 2000-01-14 | 2001-10-25 | Ian Kinkade | Efficient web based proxy message method and apparatus for message queuing middleware resident on a server computer |
US6366950B1 (en) * | 1999-04-02 | 2002-04-02 | Smithmicro Software | System and method for verifying users' identity in a network using e-mail communication |
US20020055975A1 (en) * | 2000-11-08 | 2002-05-09 | Yevgeniy Petrovykh | Method and apparatus for intelligent routing of instant messaging presence protocol (IMPP) events among a group of customer service representatives |
US6430602B1 (en) | 2000-08-22 | 2002-08-06 | Active Buddy, Inc. | Method and system for interactively responding to instant messaging requests |
US20030065776A1 (en) * | 2001-09-28 | 2003-04-03 | Dale Malik | Methods and systems for a communications and information resource manager |
US6549937B1 (en) * | 1999-07-21 | 2003-04-15 | Microsoft Corporation | System and method for multi-protocol communication in a computer network |
US20030093480A1 (en) * | 2001-11-15 | 2003-05-15 | International Business Machines Corporation | Accessing information using an instant messaging system |
US20040078424A1 (en) * | 2002-10-16 | 2004-04-22 | Nokia Corporation | Web services via instant messaging |
-
2001
- 2001-11-15 US US10/002,685 patent/US7287057B2/en active Active
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6088796A (en) | 1998-08-06 | 2000-07-11 | Cianfrocca; Francis | Secure middleware and server control system for querying through a network firewall |
US6366950B1 (en) * | 1999-04-02 | 2002-04-02 | Smithmicro Software | System and method for verifying users' identity in a network using e-mail communication |
US6549937B1 (en) * | 1999-07-21 | 2003-04-15 | Microsoft Corporation | System and method for multi-protocol communication in a computer network |
US20010034782A1 (en) * | 2000-01-14 | 2001-10-25 | Ian Kinkade | Efficient web based proxy message method and apparatus for message queuing middleware resident on a server computer |
US6430602B1 (en) | 2000-08-22 | 2002-08-06 | Active Buddy, Inc. | Method and system for interactively responding to instant messaging requests |
US20020055975A1 (en) * | 2000-11-08 | 2002-05-09 | Yevgeniy Petrovykh | Method and apparatus for intelligent routing of instant messaging presence protocol (IMPP) events among a group of customer service representatives |
US20030065776A1 (en) * | 2001-09-28 | 2003-04-03 | Dale Malik | Methods and systems for a communications and information resource manager |
US20030093480A1 (en) * | 2001-11-15 | 2003-05-15 | International Business Machines Corporation | Accessing information using an instant messaging system |
US20040078424A1 (en) * | 2002-10-16 | 2004-04-22 | Nokia Corporation | Web services via instant messaging |
Non-Patent Citations (2)
Title |
---|
A. Stanford-Clark, IBM Research Disclosure, "Linking instant Messaging to Publish/Subscribe Messaging", Oct. 2000. |
The Perl Journal, "Infobots and Purl", Issue #10, vol. 3, No. 2, Summer 1998, 11 pgs. |
Cited By (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040117444A1 (en) * | 2002-07-26 | 2004-06-17 | International Business Machines Corporation | Instant message response message with user information incorporated therein |
US20040128353A1 (en) * | 2002-07-26 | 2004-07-01 | Goodman Brian D. | Creating dynamic interactive alert messages based on extensible document definitions |
US20060020658A1 (en) * | 2002-07-26 | 2006-01-26 | International Business Machines Corporation | Saving information related to a concluding electronic conversation |
US9100219B2 (en) | 2002-07-26 | 2015-08-04 | International Business Machines Corporation | Instant message response message |
US8301701B2 (en) | 2002-07-26 | 2012-10-30 | International Business Machines Corporation | Creating dynamic interactive alert messages based on extensible document definitions |
US9124447B2 (en) | 2002-07-26 | 2015-09-01 | International Business Machines Corporation | Interactive client computer communication |
US20040019637A1 (en) * | 2002-07-26 | 2004-01-29 | International Business Machines Corporaion | Interactive one to many communication in a cooperating community of users |
US20060166735A1 (en) * | 2002-08-21 | 2006-07-27 | Mikohn Gaming Corporation | Equalizing different jackpot games with frequent pays |
US8016679B2 (en) * | 2002-08-21 | 2011-09-13 | Igt | Universal game modules for message communication between at least two casino controllers |
US20110078270A1 (en) * | 2003-10-06 | 2011-03-31 | Galli Marcio Dos Santos | System and method for seamlessly bringing external services into instant messaging session |
US8103734B2 (en) * | 2003-10-06 | 2012-01-24 | Aol Inc. | System and method for seamlessly bringing external services into instant messaging session |
US20060230112A1 (en) * | 2005-03-18 | 2006-10-12 | Yahoo! Inc. | Method for signing into a mobile device over a network |
US7707292B2 (en) * | 2005-03-18 | 2010-04-27 | Yahoo! Inc. | Method for signing into a mobile device over a network |
US20080040433A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Personal Directory Services with Presence Indication |
US20080037755A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Personal Directory Services with Directed Communication |
US20080040485A1 (en) * | 2006-08-11 | 2008-02-14 | Bellsouth Intellectual Property Corporation | Customizable Personal Directory Services |
US8332474B2 (en) | 2006-08-11 | 2012-12-11 | At&T Intellectual Property I, L.P. | Personal directory services with directed communication |
US8335825B2 (en) | 2006-08-11 | 2012-12-18 | At&T Intellectual Property I, L.P. | Personal directory services with presence indication |
US8375088B2 (en) | 2006-08-11 | 2013-02-12 | At&T Intellectual Property I, L.P. | Customizable personal directory services |
US8935350B2 (en) | 2006-08-11 | 2015-01-13 | At&T Intellectual Property I, L.P. | Personal directory services with directed communication |
US8473562B2 (en) | 2006-08-11 | 2013-06-25 | At&T Intellectual Property I, L.P. | Personal directory services with directed communication |
US8682994B2 (en) | 2006-08-11 | 2014-03-25 | At&T Intellectual Property I, L.P. | Personal directory services with directed communication |
US20080177841A1 (en) * | 2007-01-19 | 2008-07-24 | Yahoo! Inc. | Dynamic combatting of spam and phishing attacks |
US8209381B2 (en) * | 2007-01-19 | 2012-06-26 | Yahoo! Inc. | Dynamic combatting of SPAM and phishing attacks |
US10904178B1 (en) | 2010-07-09 | 2021-01-26 | Gummarus, Llc | Methods, systems, and computer program products for processing a request for a resource in a communication |
US20130144961A1 (en) * | 2011-12-01 | 2013-06-06 | Nhn Corporation | System and method for providing information interactively by instant messaging application |
US9621492B2 (en) * | 2011-12-01 | 2017-04-11 | Line Corporation | System and method for providing information interactively by instant messaging application |
US11611520B1 (en) | 2012-09-22 | 2023-03-21 | Motion Offense, Llc | Methods, systems, and computer program products for processing a data object identification request in a communication |
US10841258B1 (en) | 2012-10-18 | 2020-11-17 | Gummarus, Llc | Methods and computer program products for browsing using a communicant identifier |
US10838588B1 (en) | 2012-10-18 | 2020-11-17 | Gummarus, Llc | Methods, and computer program products for constraining a communication exchange |
US10637804B2 (en) * | 2014-05-31 | 2020-04-28 | Samsung Electronics Co., Ltd. | User terminal apparatus, communication system, and method of controlling user terminal apparatus which support a messenger service with additional functionality |
US20150350123A1 (en) * | 2014-05-31 | 2015-12-03 | Samsung Electronics Co., Ltd. | User terminal apparatus, communication system, and method of controlling user terminal apparatus |
US10341267B2 (en) | 2016-06-20 | 2019-07-02 | Microsoft Technology Licensing, Llc | Anonymized identifiers for secure communication systems |
US10437841B2 (en) | 2016-10-10 | 2019-10-08 | Microsoft Technology Licensing, Llc | Digital assistant extension automatic ranking and selection |
US11379489B2 (en) | 2016-10-10 | 2022-07-05 | Microsoft Technology Licensing, Llc | Digital assistant extension automatic ranking and selection |
RU2658157C1 (en) * | 2017-04-26 | 2018-06-19 | Закрытое акционерное общество "Восточный Ветер" | Method for constructing temporary channels for data transmission between the im clients that use different communication protocols |
US11258731B2 (en) * | 2019-08-22 | 2022-02-22 | Orion Labs, Inc. | Bot proxy for group communication service |
US20220141161A1 (en) * | 2019-08-22 | 2022-05-05 | Orion Labs | Bot proxy for group communication service |
Also Published As
Publication number | Publication date |
---|---|
US20030093480A1 (en) | 2003-05-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7287057B2 (en) | Accessing information using an instant messaging system | |
US6360252B1 (en) | Managing the transfer of e-mail attachments to rendering devices other than an original e-mail recipient | |
US7606911B1 (en) | System and method for providing status information from multiple information sources in a single display | |
US7133919B2 (en) | System and method for providing status information from multiple information sources in a single display | |
US7013326B1 (en) | Chat system, dummy client system for chat system, and computer readable medium storing dummy client program | |
US6973620B2 (en) | Method and apparatus for providing user support based on contextual information | |
US6871322B2 (en) | Method and apparatus for providing user support through an intelligent help agent | |
US8412785B2 (en) | Instant messaging system and method | |
US7353247B2 (en) | Querying applications using online messenger service | |
EP1562347B1 (en) | Methods and apparatus for utilizing user software to communicate with network-resident services | |
EP1449345B1 (en) | Servicing requests that are issued in a protocol other than the protocol expected by the service | |
US20020021307A1 (en) | Method and apparatus for utilizing online presence information | |
US20050198124A1 (en) | System and method for embedded instant messaging collaboration | |
US20020042830A1 (en) | System, method and applications real-time messaging over HTTP-based protocols | |
US20070043878A1 (en) | Virtual robot communication format customized by endpoint | |
JP2003508855A (en) | Information communication system between one group of participants | |
WO2002077840A1 (en) | Instant messaging system and method | |
JPH10124415A (en) | Method for transmitting electronic message with browser as base | |
WO2011022206A2 (en) | Social network virtual private network | |
US7467126B2 (en) | Removal of stale information | |
US20030018721A1 (en) | Unified messaging with separate media component storage | |
CN1540945A (en) | Communication device and communication method | |
US20030046410A1 (en) | Method and apparatus for providing entitlement information for interactive support | |
WO2003030002A1 (en) | Systems and methods for providing secured electronic messaging | |
US20060172750A1 (en) | Server apparatus, message |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LAGARDE, KONRAD C.;ROONEY, JOHN;STEWART, EBEN P.;REEL/FRAME:012354/0777Effective date: 20011114 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026131/0161Effective date: 20110328 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
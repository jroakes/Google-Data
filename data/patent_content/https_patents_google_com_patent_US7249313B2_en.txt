US7249313B2 - Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line - Google Patents
Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line Download PDFInfo
- Publication number
- US7249313B2 US7249313B2 US10/183,650 US18365002A US7249313B2 US 7249313 B2 US7249313 B2 US 7249313B2 US 18365002 A US18365002 A US 18365002A US 7249313 B2 US7249313 B2 US 7249313B2
- Authority
- US
- United States
- Prior art keywords
- web
- wizard
- application
- running
- line
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
Definitions
- This invention relates to enabling linked documents to be downloaded from a server to a client over a network; and more specifically, to a system, method, and program for enabling dynamic Web pages to be downloaded and run off-line.
- This invention relates to running applications off-line at a client; and more specifically, to running dynamic Web pages, downloaded from a server, off-line at a client.
- computational devices include large mainframe computers, workstations, personal computers, laptops and other portable devices including wireless telephones, personal digital assistants, automobile-based computers, etc. Such portable computational devices are also referred to as “pervasive” devices.
- the term “computer” or “computational device”, as used herein, may refer to any of such device which contains a processor and some type of memory.
- the computational networks may be connected in any type of network including the Internet, an intranet, a local area network (LAN) or a wide area network (WAN).
- the networks connecting computational devices may be “wired” networks, formed using lines such as copper wire or fiber optic cable, wireless networks employing earth and/or satellite-based wireless transmission links, or combinations of wired and wireless network portions.
- Many such networks may be organized using a client/server architecture, in which “server” computational devices manage resources, such as files, peripheral devices, or processing power, which may be requested by “client” computational devices.
- “Proxy servers” can act on behalf of other machines, such as either clients or servers.
- a widely used network is the Internet.
- the Internet initially referred to as a collection of “interconnected networks”, is a set of computer networks, possibly dissimilar, joined together by means of gateways that handle data transfer and the conversion of messages from the sending network to the protocols used by the receiving network.
- gateways that handle data transfer and the conversion of messages from the sending network to the protocols used by the receiving network.
- Internet refers to the collection of networks and gateways that use the TCP/IP suite or protocols.
- the Web World Wide Web environment
- Other Internet resources exist for transferring information, such as File Transfer Protocol (FTP) and Gopher, but have not achieved the popularity of the Web.
- FTP File Transfer Protocol
- servers and clients effect data transfer using the Hypertext Transfer Protocol (HTTP), a known protocol for handling the transfer of various data files (e.g., text, still graphic images, audio, motion video, etc.).
- HTTP Hypertext Transfer Protocol
- e-commerce is used herein to refer to any commercial activity using computers interconnected by a communication network, e.g., the Internet. Because of the unique characteristics of the Internet, carrying out commercial transactions over the Internet presents new issues and new opportunities.
- Off-line generated forms can easily be generated off-line and later submitted on-line if the form is static, that is, if the form data does not change. However, if the required input is dynamic, that is dependent on a previous user input, or is dependent upon other dynamic data, such as current data from a remote database, the ability for a user to generate all of the user input completely off-line is currently not being provided for.
- a mobile client may include personal digital assistants (PDAs), Palm Pilots, laptops, etc.
- One type of on-line transaction involves the buying of books over the network from an electronic commerce merchant.
- An on-line transaction to purchase a book would require the user to access, over the network, a product database of currently available books and current prices.
- the server application that enables this on-line transaction also requires database access to access the user's profile. For example, based upon the user profile, the user may be presented with certain discounts or promotional offers not available to everyone else. Because of the dynamic nature of the server application, and the database accesses required, this type of application has not been able to be downloaded and run off-line. If a separate client application were to be created, it would be limited in the amount of selectable data available, such as the number of available books. In addition, the data, such as the pricing data, would be outdated in a very short time after the creation of the separate client application.
- an interactive Web page transactional application e.g., dynamic Web pages
- the system, method, and program of the current invention enables a dynamic Web Site that includes at least one of i) at least one database access, and ii) a dynamic presentation order of Web pages, to be downloaded and run off-line.
- a preferred embodiment provides a four step process that enables a user to process an on-line transaction while running off-line.
- a wizard is utilized while the Web site carrying out the transaction is being created. The wizard learns the dynamic nature of the application as the application is being built.
- the application, the wizard, and applicable data are downloaded.
- the wizard provides the necessary interdependencies.
- the completed Web pages are then uploaded to the merchant's Web site to complete the transaction when the client is running again on-line. More specifically, these four steps are carried out in the system, method, and program of the invention as further described.
- a GUI wizard is provided in the integrated developer environment to assist in the creation of the Web site.
- the wizard GUI learns the interdependencies between the different pages of the Web site, i.e., as a user would progress through the on-line transaction; and the interdependencies with databases, user profiles, user cookies, etc.
- the wizard GUI helps the Web master create the Web site, and keeps track of the interdependencies of the relationships of the pages and the databases.
- a run off-line button is enabled. Otherwise, a user will not be able to run off-line at that given point in the application.
- the user When the user first accesses the application on-line, the user makes a selection indicating that the user desires to run the application off-line. The user may be queried as to the amount of data the user desires to download, or the data may have already been selected within the server application before selecting to go off-line. For example, the user may have selected all of the merchant's product database, such as books, to be downloaded, or the user may have selected only a subset of the products by category, such as books in the category of gardening, to be downloaded.
- the user's storage capability on the client machine may be taken into consideration on the amount of data to be downloaded.
- the user would download the Web site, i.e., the application, the interdependencies, the database access, the user profile, and anything else that was needed to fill out the required information off-line.
- At least part of the wizard would also be downloaded to enable the application to be run off-line.
- the wizard After downloading, the user can then run off-line at any time. While off-line, the wizard would automatically playback the downloaded Web pages in a sequence dependent upon the acquired interdependencies. As the user clicked through the downloaded Web pages, the wizard would fill in the product selection, e.g., if a user subcategorized the product database, and process the other interdependencies. The off-line processing would appear to the user as if the user were on-line. Once the user completed the transaction, for example, once the user purchased some number of books, the user would enter submit. The transaction is not submitted to the on-line merchant since the client is off-line. However, the next time that the client became connected on-line, and the browser was brought up, the wizard would submit the client data, i.e., the completed Web pages, to the on-line merchant.
- client data i.e., the completed Web pages
- FIG. 1 depicts one embodiment of a computer system with which the method, system, and program of the present invention may be advantageously utilized;
- FIG. 2 is a flow chart illustrating the four-part process for creating and downloading a dynamic Web site, for running the downloaded dynamic Web site off-line, and for submitting the Web pages with user data when reconnected on-line;
- FIGS. 3A-3G is an illustrative example of a set of dynamic Web pages
- FIG. 4 illustrates the interdependencies between the Web pages and data accesses
- FIGS. 5A and 5B illustrates the process steps and program flow of developing a wizard that learns the interdependencies of the Web pages as they are being built;
- FIG. 6 illustrates the process flow and program logic for a user running a Web page transaction on-line that desires to run the Web page transaction off-line;
- FIGS. 7A-7B illustrate the process flow and program logic being implemented when a customer runs off-line.
- FIG. 8 illustrates the process flow and program logic when the user is reconnected on-line.
- the present invention is carried out between at least two computers such as between a server and a client computing system.
- the client and server systems may be any one of a variety of systems, including a variety of computing systems and electronic devices under a number of different operating systems.
- the client computing system is a portable computing system such as a notebook computer, a palmtop computer, a personal digital assistant, a telephone or other electronic computing system that may also incorporate communications features that provide for telephony, enhanced telephony, messaging and information services.
- the client computing system, as well as the server system may also be, for example, a desktop computer, a network computer, a midrange computer, a server system or a mainframe computer. Therefore, in general, the present invention is preferably executed in a computer system that performs computing tasks such as manipulating data in storage that is accessible to the computer system.
- the computer system preferably includes at least one output device and at least one input device.
- Computer system 10 comprises a bus 22 or other communication device for communicating information within computer system 10 , and at least one processing device such as processor 12 , coupled to bus 22 for processing information.
- Bus 22 preferably includes low-latency and high-latency paths that are connected by bridges and controlled within computer system 10 by multiple bus controllers.
- Processor 12 may be a general-purpose processor such as IBM's PowerPCTM processor that, during normal operation, processes data under the control of operating system and application software stored in a dynamic storage device such as a random access memory (RAM) 14 and a static storage device such as Read Only Memory (ROM) 16 .
- the operating system preferably provides a graphical user interface (GUI) to the user.
- GUI graphical user interface
- one application may include a messaging system client application (e.g., a browser) capable of transmitting and receiving messages containing commands to and from a messaging system server application within a server within a data processing system network.
- System 10 may execute one or more applications, either within browser application or apart from browser application. Such application(s) include the functionality describe below to run dynamic Web pages off-line utilizing a wizard application.
- application software contains machine executable instructions that when executed on processor 12 carry out the operations depicted in the flowcharts described herein.
- steps of the present invention might be performed by specific hardware components that contain hardwire logic for performing the steps, or by any combination of programmed computer components and custom hardware components.
- peripheral components may be added to computer system 10 .
- a display 24 is also attached to bus 22 for providing visual, tactile or other graphical representation formats. Audio output through a speaker or other audio projection device may be controlled by audio output device 28 attached to bus 22 .
- a keyboard 26 and cursor control device 30 are coupled to bus 22 as interfaces for user inputs to computer system 10 . It should be understood that keyboard 26 and cursor control device 30 are examples of multiple types of input devices that may be utilized in the present invention. In alternate embodiments of the present invention, additional input and output peripheral components may be added.
- the present invention may be provided as a computer program product, included on a machine-readable medium having stored thereon the machine executable instructions used to program computer system 10 to perform a process according to the present invention.
- machine-readable-medium includes any medium that participates in providing instructions to processor 12 or other components of computer system 10 for execution. Such a medium may take many forms including, but not limited to, nonvolatile media, volatile media, and transmission media.
- nonvolatile media include, for example, a floppy disk, a flexible disk, a hard disk, magnetic tape or any other magnetic medium, a compact disc ROM (CD-ROM), a digital video disc-ROM (DVD-ROM) or any other optical medium, a programmable ROM (PROM), an erasable PROM (EPROM), electrically EPROM (EEPROM), a flash memory, any other memory chip or cartridge, or any other medium from which computer system 10 can read and which is suitable for storing instructions.
- an example of nonvolatile media is storage device 18 .
- Volatile media includes dynamic memory such as RAM 14 .
- Transmission media includes coaxial cables, copper wire or fiber optics, including the wires that comprise bus 22 . Transmission media can also take the form of acoustic or light waves, such as those generated during radio wave or infrared data communications.
- the present invention may be downloaded as a computer program product, wherein the program instructions may be transferred from a remote computer such as server 39 to requesting computer system 10 by way of data signals embodied in a carrier wave or other propagation medium via a network link 34 (e.g., a modem or network connection) to a communications interface 32 coupled to bus 22 .
- Communications interface 32 provides a two-way data communications coupling to network link 34 that may be connected, for example, to a local area network (LAN), wide are network (WAN), or as depicted herein, directly to an Internet Service Provider (ISP) 37 .
- network link 34 may provide wired and/or wireless network communications to one or more networks.
- ISP 37 in turn provides data communication services through the Internet 38 or other network.
- Internet 38 may refer to the worldwide collection of networks and gateways that use a particular protocol, such as Transmission Control Protocol (TCP) and Internet Protocol (IP), to communicate with one another.
- TCP Transmission Control Protocol
- IP Internet Protocol
- ISP 37 and Internet 38 both use electrical, electromagnetic, or optical signals that carry digital or analog data streams.
- the signals through the various networks and the signals on network link 34 and through communications interface 32 which carry the digital or analog data to and from computer system 10 , are exemplary forms of carrier waves transporting the information.
- a data processing network may include one or more servers which are accessible as part of the Internet or other network, and one or more clients which may access servers.
- Content may be accessed using any of a variety of messaging system protocols including Hypertext Transfer Protocol (HTTP), File Transfer Protocol (FTP), Network News Transfer Protocol (NNTP), Internet Mail Access Protocol (IMAP) or Post Office Protocol (POP), etc.
- HTTP Hypertext Transfer Protocol
- FTP File Transfer Protocol
- NTP Network News Transfer Protocol
- IMAP Internet Mail Access Protocol
- POP Post Office Protocol
- HTML Hypertext Markup Language
- FIG. 2 is a flow chart illustrating the four (4) part process for creating and downloading a dynamic Web site for running off-line by running a wizard in the background.
- the rules for the wizard were created and saved during the Web page development phase.
- the four part process includes i) creating a Web page using a wizard that keeps track of the background tasks that take place as result of an expected interaction with the Web page, 201 ; ii) an online user interaction with the Web page while the wizard runs in the background to keep track of what is needed for off-line execution for when the user selects to go off-line, 202 ; iii) running the Web page off-line, 203 ; and iv) reconnecting with the network and submitting the transactional Web pages, 204 , that were interacted with while off-line.
- a Web page is created such as by using a Web page production tool, e.g., Websphere Studio Application Builder, Frontpage, etc.
- a wizard is running in the background keeping track of the interdependencies of all of the Web pages involved.
- the tool generates a list of URLs and may utilize XML to describe the dependencies. This list is used later when the Web page is selected to run off-line.
- the wizard also keeps track of what database information is needed for each subsequent page. The wizard knows the dependencies, and is able to download all of the pages/data that might be needed in order for the user to interact with the Web pages off-line.
- the wizard runs in the background and keeps track of what needs to be downloaded to a user's system if the user selects the “run off-line” button.
- the wizard keeps track of what part of a database needs to be downloaded, the user personal information, and the exact page interdependencies that are previously defined from the first phase.
- the wizard runs the pages through a browser just as if the user were online. Instead of the transactional application being run by a server, the transactional application is run by the wizard with calls to XML and a database. In general, the user would not be able to tell the difference between running online versus off-line. If the user buys an item while off-line, it is kept in a special folder in a browser.
- the wizard executes the submission to the server as if the user had run the transaction.
- the wizard keeps track of the page interdependencies, the database accesses that it would need, and data access to the consumer's personal information such as an address. There is an indication in the wizard to go and get the consumer personal information.
- the wizard would also be developed to keep track of what database limitations the user selected, while the user was online, to scope down the available products. As such, as the web page was being developed, such as to offer products for sale, the wizard would keep track of the page interdependencies and where the personal data would need to be used. A pointer would be kept to the off-line version.
- XML list of the things that the wizard would need to have to run off-line including personal information, databases, page and subsequent pages from the point where the user selected to run off-line.
- Keeping track of the interdependencies involves keeping track of a list of the URLs and subURLs.
- the wizard would know whether the user is running off-line or online. If running off-line, the wizard would know to go to the XML data to fill in the blanks for the information.
- the database queries depending upon the application, there are several different embodiments for keeping the database while running off-line.
- the result from any database queries are downloaded into an XML type of format.
- the database is downloaded into a database on the hard drive of the client.
- the wizard keeps track of what pointers need to be automatically pre-filled when running off-line, as well as the page interdependencies and what database access need to be hit to fill in the necessary information or for database queries for that section.
- the wizard gets all personal information and puts the personal information into a database or an XML format.
- the “run off-line” selectable button may be on the browser or embedded in each Web page at points where the designer of the Web page allows the user to go off-line.
- the wizard determines the size of the database that the wizard needs to go to. The wizard would then keep track to know to download the certain size database if a selection to run off-line is made at that point in the program.
- the wizard keeps track of what a user would need to run the application off-line from the point in the application where the user selects to run off-line. Typically what is needed is the portion of the database of products that the user has narrowed the user's selection down to, the “add to cart” button, and any checkout pages.
- the checkout pages may access the customer personal information to find the customer's name to display on a “Thank You” “Customer” page, and for filling in the credit card number and any name and address for shipping.
- FIGS. 3A-3G which together make an illustrative example of a set of dynamic Web pages.
- the illustrative set of Web pages create a transactional application for buying shoes over the Internet.
- the home page of Shoes Galore has a URL of shoesgalore.com.
- the home page 310 states that the types of shoes offered are men's, women's and children's shoes in either a sport, casual, or dress style.
- There is a “go off-line” button 319 which would tell the wizard to go off-line at this point in the program.
- the wizard would have to download the entire Shoes Galore shoe database if the user selected to go off-line at this point in the program.
- a user would not be enabled to go off-line until after the user makes a selection and narrows the goods from the database.
- a user selection of either the “next” button 312 , or the “search for your shoe size and shoe type” button 311 will take the user to a next page, 320 .
- a next Web page, 320 , FIG. 3B enables the user to select the size 321 and type 322 , 323 of shoe.
- the URL being used as an example for this Web page is shoesgalore.com/selectsearch.
- the Web page shows a selection having been made by a user for a men's sport shoe in size 10.5.
- the user is enabled to go off-line at this point by selecting button 329 , or submit the search via button 327 , or return to the home page via selectable area 328 . If the user chooses to go off-line at this point in the transactional Web page application, only the data matching the search criteria would be downloaded from the database.
- a next Web page, 330 , FIG. 3C displays the search results from the search criteria previously submitted.
- the user can add any of the selections to the shopping cart via buttons 331 , go off-line via button 339 , or return to the home page via selectable area 338 .
- a “check out your shopping cart” page 340 FIG. 3D , would follow showing the current selections made.
- the user can go to a next page by selecting the “next” button 342 , go off-line by selecting the “go off-line” button 349 , or return to the home page by selecting selectable area 348 .
- the next page 350 FIG. 3E , takes payment and shipping information from the user. Either during on-line processing, or off-line processing by the wizard, user data such as from a cookie stored at the client by the Shoes Galore Web site, would be automatically accessed and used to populate the input form.
- the users personal information would always be downloaded, or available to the wizard when running at the client. In other embodiments, the information is filled in by the user. The user can either go off-line at this point by selecting button 359 , or checkout and commit the transaction by selecting the checkout button 357 , or return to the home page through selectable area 358 .
- a running total of amounts spent by the user is determined by adding the current total, 356 , to a cumulative total from any previous transactions by this user. If the running total surpasses a predetermined amount, Web page 360 , FIG. 3F , will be displayed to the user.
- This is a dynamic Web page since whether or not it is displayed to a user is dependent upon current user input in a previous page. As shown in this example, this Web site offers a gift to be selected if the running total is over $300.00.
- the user is enabled to select one of the gifts, 361 , 362 , select “submit” 366 to receive the selected gift, decline a gift at this time by selecting “decline” 367 , or select to go “off-line,” 369 .
- FIG. 3G enables a user to return to the home page via selectable area 378 .
- FIG. 4 shows the interrelationship among these pages.
- the home page, shoesgalore.com 310 can be returned to via any of the pages 320 , 330 , 340 , 350 , 370 via selectable areas 328 , 338 , 348 , 358 , 378 , respectively.
- a next page 320 is reached via buttons 311 or 312 , then page 330 via button 327 , then page 340 via button 331 , then page 350 via button 342 .
- a determination is made whether a running total amount is greater than a predetermined amount, 410 . If the amount is greater, the next page is page 360 and then page 370 via selection 366 or selection 367 . If the amount is not greater, the next page is the last “thank you” page 370 .
- a wizard running in the background keeps track of the interdependencies between the pages as shown in FIG. 4 and any intervening calculations as shown at block 410 .
- the wizard keeps track of any database accesses that are needed, or other access to data, to generate the data to be presented to a user in subsequent Web pages or that are needed to perform the intervening calculations.
- the wizard keeps track that i) the shoe inventory database 420 would need to be accessed from Web page 320 ; ii) any search results from page 320 are needed for page 330 ; iii) a user selection of an item to be added to the shopping cart of Web page 330 is to be stored in shopping cart storage 430 and used in the “Check Out Your Shopping Cart” Web page 340 ; iv) after leaving Web page 340 , user data 440 must be accessed to get the user information such as credit card number, name, billing address and shipping address; v) the total 356 from Web page 350 , FIG. 3E , is to be stored in user database 450 and added to a user's accumulative total.
- FIGS. 5A and 5B illustrate the process steps and program flow of building Web pages with a wizard that learns the interdependencies of the Web pages as they are being built.
- the wizard is run after the Web page is created; i.e., the wizard learns the interdependencies as the Web pages are being run.
- FIG. 5A illustrates the development of a wizard when developing transactional Web pages so that the wizard can execute certain functions to enable Web pages to be processed off-line in a same or similar way as if they were being processed on-line.
- a given Web page will be made available off line, 551 . If it is not available, then the wizard backs into a front page, 553 . If a given Web page will be made available to a user off-line, then the Web site creator will specify to the wizard what information will need to be available for that Web page to be run off-line, 552 . The wizard is also told how the information will be stored. It is up to the developer of the Web page to determine how the information is to be stored. For example, for proprietary information, the information may be encoded. If a large scale database needs to be downloaded, an application may need to be downloaded that initializes the database with data.
- an expiration date of the database application may be included which would inform the user to go back on-line to download more current information before running off-line. For example, if the transaction program were to be downloaded in February, but the wizard determines the current date of running off-line is June, the wizard may inform the user to go back on-line so that more current information could be downloaded.
- the wizard hooks into the browser to notify the browser when the user is running off-line. In this way, if the user goes to a URL while running off-line, the wizard will bring up the off-line version of the Web site and not the on-line cached version of the Web site.
- the wizard process of FIG. 5A is utilized when developing Web pages for a Web site such as one involving a purchase transaction for an item from a catalog of items as previously described.
- FIG. 5B further illustrates a process flow for the scenario when a trigger is being utilized as previously discussed with respect to FIG. 5A . More specifically, in this scenario, the trigger exists because the Web site offers a free or discounted gift to loyal customers that have purchased a certain amount from an accumulation of all previous transactions.
- the wizard is either informed by the Web page creator, or the wizard figures out as the Web pages are being created, as discussed below, that certain information is needed, e.g., current account information, all or part of the catalog, and any page interactions, 560 .
- the wizard is informed of any triggers being implemented, 561 .
- a trigger may be implemented for the Web page that is being made to receive current purchase information.
- the wizard would then know that the current account information for the user, e.g., a running total of amounts previously purchased, as indicated at block 560 , would need to be downloaded before the user ran off-line.
- the Web page creator would have written the following rules for the wizard a) access the downloaded account information for the running total of purchases; b) add to that running total the current purchase amount from the current Web page for a new running total purchase amount, 563 ; and c) determine if the new running total is equal to or greater than a specified amount, 564 . If it is not, the wizard causes the regular check out Web page to be presented to the user, 566 . If the new running total is equal to or greater than the specified amount, then the wizard causes a different Web page, such as a loyalty gift selection page, to pop up to the user, 565 .
- a different Web page such as a loyalty gift selection page
- an XML list is generated of the things that the wizard would have to have in order to run off-line.
- the XML list would include the user's personal information, databases, the page where a user selects to run off-line, the pages after that page that are needed to run off-line, the interdependencies of the Web pages, the triggers, and the rules for each trigger.
- the number of pages needed to run off line may be as few as one or as many as ten or so.
- the interdependencies are the order in which the Web pages need to be presented to the user based upon user data inputted or generated in a current Web page.
- FIG. 6 illustrates the process flow and program logic for a user running a Web page transaction on-line that desires to run the Web page transaction off-line.
- a page on the Web site would provide a selectable item that a user could select to indicate that the user desires to continue off-line with the transaction, such as button 319 , 329 , 339 , 349 , 359 , 369 , FIGS. 3A-3F .
- the selectable item, 603 is not selected, the user continues to run on-line as normal, 605 , If the selectable item is selected, then the wizard selected data, applets and pages are downloaded, 607 .
- a parallel or corresponding set of pages are downloaded since the pages presented to the user off-line may not be identical to the pages available to the user on-line.
- the downloaded data, applet, and pages will be stored automatically in an off-line folder, 609 .
- the downloaded data, applet, and pages may be stored in a user defined save to file.
- An index to HTML is created to load the page that was selected and subsequent pages downward, 611 . As such, all of the preparation data (the wizard, databases, data, applets, and Web pages) is downloaded. There is a hook into the browser to load index.html if that URL is loaded during off-line mode.
- FIG. 7A illustrates the process flow and program logic being implemented when a customer runs off-line.
- the wizard i.e., applet
- the functions of the wizard include collecting form data stored in a structured form. Such structured forms may include proprietary databases, XML, flat files, DB2, or any other form that the Web page creator defined it for the wizard as the Web page was being developed.
- the wizard also watches for, and identifies when there is a rule trigger. The wizard takes the appropriate action when there is a trigger. The wizard enables the next page or a popup to be displayed.
- the wizard has total screen control.
- the wizard knows if the data is a committed transaction.
- the wizard distinguishes between transient data and committed data and when to commit, 702 .
- the user brings up a URL or file in off-line mode, 711 .
- the wizard determines from the user's computer clock and the date stored in the wizard during the download whether the expiration date for the downloaded data is acceptable, i.e., whether the expiration date has not passed, 713 . If the date has passed, the wizard displays an error message indicating that the user must go back online to download more current data, 715 . If the expiration date has not passed, then the process continues to step 717 .
- the wizard runs the downloaded server program off-line as if the program were running online.
- the wizard runs the program as normal from the entry point as selected by the user for running off-line, or as specified by the wizard and web site designer.
- a given program that is enabled to be downloaded and run off-line in conjunction with the wizard may request the user to select a category of books that are of interest in a first page or so of the program running online. If a user is required to run online until the category of books is selected, then only the data for that category of books needs to be downloaded, instead of all books in all categories.
- the wizard determines if input from the user is a committed transaction, 719 .
- the wizard saves the shopping cart or other data as decided by the developer of the wizard and the Web site. If the transaction is a committed transaction, then the wizard saves in the outbox of the browser, or sets a flag in the browser to launch and upload the Web pages with the user's input when reconnected, 723 .
- FIG. 8 illustrates the process flow and program logic when the user is reconnected on-line.
- the browser starts automatically when reconnected online, 801 .
- the browser receives the URL from the user, 803 .
- the browser determines if the browser is off-line, 805 . If it has gone off-line, then the browser determines if there is an off-line applet (i.e., the wizard) to handle the URL, 807 . If there is, the applet is launched, 809 , and the process continues as illustrated in FIGS. 7A-7B . If there is not an off-line applet, then the browser runs the cached URL, 811 .
- an off-line applet i.e., the wizard
- the browser determines if there is any off-line work that has been queued, 813 . If yes, then the wizard applet that handles the transaction to the Web site is launched, 815 . If there is no queued off-line work, then the URL is run as normal online, 817 .
- the launched wizard can run behind the scenes and automatically commit the transaction, or it can run in a simulated browser environment.
- the wizard saves all of the Web pages with the user selections and inputs in an outgoing box in the browser.
- the wizard goes through and submits all of the pages as if the browser were on line.
- the Web site does not know the difference between the user running online and the user having previously inputted the information while running off-line. That is, the Web site is not aware that the client is not connected in real time, at that time, to the Web site.
Abstract
Description
-
home page 310, FIG. 3A—- shoesgalore.com
-
search page 320, FIG. 3B—- shoesgalore.com/selectsearch
-
results page 330, FIG. 3C—- shoesgalore.com/selectsearch/$mens$sport$10.5
- checkout shopping cart page, 340, FIG. 3D—
- shoesgalore.com/checkoutshoppingcart
- payment and shipping page, 350, FIG. 3E,—
- shoesgalore.com/payandship
- loyalty gift page, 360, FIG. 3F—
- shoesgalore.com/loyaltygifts
- Thank You page, 370, FIG. 3G—
- shoesgalore.com/thankyou
Claims (16)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/183,650 US7249313B2 (en) | 2002-06-26 | 2002-06-26 | Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/183,650 US7249313B2 (en) | 2002-06-26 | 2002-06-26 | Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line |
Publications (2)
Publication Number | Publication Date |
---|---|
US20040003345A1 US20040003345A1 (en) | 2004-01-01 |
US7249313B2 true US7249313B2 (en) | 2007-07-24 |
Family
ID=29779173
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/183,650 Expired - Lifetime US7249313B2 (en) | 2002-06-26 | 2002-06-26 | Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line |
Country Status (1)
Country | Link |
---|---|
US (1) | US7249313B2 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100161831A1 (en) * | 2008-12-19 | 2010-06-24 | David Haas | Optimizing content and communication in multiaccess mobile device exhibiting communication functionalities responsive of tempo spatial parameters |
US20100275215A1 (en) * | 2009-04-22 | 2010-10-28 | Nokia Corporation | Method and apparatus for linking services |
US20110035431A1 (en) * | 2004-05-13 | 2011-02-10 | Guttapercha Partners, Inc. | Dissemination of Information In an Intermittent Network Connectivity |
US20110112933A1 (en) * | 2009-11-11 | 2011-05-12 | Joe Smith | System and method of media distribution management |
Families Citing this family (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8216071B2 (en) * | 2002-03-20 | 2012-07-10 | Intel Corporation | Method and apparatus for software delivery and management |
US7200645B2 (en) * | 2002-06-26 | 2007-04-03 | International Business Machines Corporation | Running dynamic web pages off-line with a wizard |
US20040010626A1 (en) * | 2002-07-11 | 2004-01-15 | Gillam Richard James | System and method of processing transactions off-line |
US20050005007A1 (en) * | 2003-07-01 | 2005-01-06 | International Business Machines Corporation | World wide web document distribution system to receiving web display stations with tracking at the receiving station of the extent of usage of documents previously accessed and stored at receiving station |
US20070079282A1 (en) * | 2005-09-30 | 2007-04-05 | Pawan Nachnani | Browser based designer and player |
CA2757668C (en) * | 2008-04-11 | 2021-03-02 | Desire2Learn Incorporated | Systems, methods and apparatus for providing media content |
JP2011060237A (en) * | 2009-09-14 | 2011-03-24 | Ricoh Co Ltd | Device and system for supporting program introduction, method and program for controlling display, and recording medium with the program recorded |
WO2011146898A2 (en) | 2010-05-21 | 2011-11-24 | Bologh Mark J | Internet system for ultra high video quality |
US8700804B1 (en) | 2011-03-16 | 2014-04-15 | EP Visual Design, Inc. | Methods and apparatus for managing mobile content |
KR20140118667A (en) * | 2013-03-29 | 2014-10-08 | 삼성전자주식회사 | Display apparatus and control method thereof |
US10659566B1 (en) * | 2014-10-31 | 2020-05-19 | Wells Fargo Bank, N.A. | Demo recording utility |
Citations (55)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5740430A (en) | 1995-11-06 | 1998-04-14 | C/Net, Inc. | Method and apparatus for server-independent caching of dynamically-generated customized pages |
JPH10187456A (en) | 1996-12-27 | 1998-07-21 | Hitachi Ltd | Program download system |
US5784562A (en) | 1995-10-10 | 1998-07-21 | U S West Advanced Technologies, Inc. | System for using a dialog session context to process electronic forms data on the world wide web |
US5799285A (en) | 1996-06-07 | 1998-08-25 | Klingman; Edwin E. | Secure system for electronic selling |
US5838916A (en) | 1996-03-14 | 1998-11-17 | Domenikos; Steven D. | Systems and methods for executing application programs from a memory device linked to a server |
US5892909A (en) | 1996-09-27 | 1999-04-06 | Diffusion, Inc. | Intranet-based system with methods for co-active delivery of information to multiple users |
US5893116A (en) | 1996-09-30 | 1999-04-06 | Novell, Inc. | Accessing network resources using network resource replicator and captured login script for use when the computer is disconnected from the network |
US5974572A (en) | 1996-10-15 | 1999-10-26 | Mercury Interactive Corporation | Software system and methods for generating a load test using a server access log |
US5983227A (en) | 1997-06-12 | 1999-11-09 | Yahoo, Inc. | Dynamic page generator |
US6026433A (en) | 1997-03-17 | 2000-02-15 | Silicon Graphics, Inc. | Method of creating and editing a web site in a client-server environment using customizable web site templates |
US6026417A (en) | 1997-05-02 | 2000-02-15 | Microsoft Corporation | Desktop publishing software for automatically changing the layout of content-filled documents |
US6035324A (en) | 1997-08-28 | 2000-03-07 | International Business Machines Corporation | Client-side asynchronous form management |
US6061733A (en) | 1997-10-16 | 2000-05-09 | International Business Machines Corp. | Method and apparatus for improving internet download integrity via client/server dynamic file sizes |
WO2000042528A1 (en) | 1999-01-15 | 2000-07-20 | Onyeabor Gillis E | Method and system for database-driven, scalable web page development, deployment-download, and execution |
WO2000070511A1 (en) | 1999-05-18 | 2000-11-23 | Maxiem Pty Limited | A website development system |
US6163779A (en) | 1997-09-29 | 2000-12-19 | International Business Machines Corporation | Method of saving a web page to a local hard drive to enable client-side browsing |
US6167441A (en) | 1997-11-21 | 2000-12-26 | International Business Machines Corporation | Customization of web pages based on requester type |
US6182122B1 (en) | 1997-03-26 | 2001-01-30 | International Business Machines Corporation | Precaching data at an intermediate server based on historical data requests by users of the intermediate server |
US6182050B1 (en) * | 1998-05-28 | 2001-01-30 | Acceleration Software International Corporation | Advertisements distributed on-line using target criteria screening with method for maintaining end user privacy |
DE19942432A1 (en) | 1999-09-06 | 2001-03-08 | Iconparc Gmbh | Offline web application execution method uses web browser for loading offline web application stored on offline storage medium into personal computer for dynamic web page generation |
US6219680B1 (en) | 1997-06-19 | 2001-04-17 | International Business Machines Corporation | System and method for building a web site for use in E-commerce with user specific pricing |
US6226648B1 (en) | 1997-02-07 | 2001-05-01 | About.Com, Inc. | System and method for modification of included files used in a automatic web page generation system |
US6237006B1 (en) | 1996-10-15 | 2001-05-22 | Mercury Interactive Corporation | Methods for graphically representing web sites and hierarchical node structures |
US6243761B1 (en) | 1998-03-26 | 2001-06-05 | Digital Equipment Corporation | Method for dynamically adjusting multimedia content of a web page by a server in accordance to network path characteristics between client and server |
US20010003828A1 (en) | 1997-10-28 | 2001-06-14 | Joe Peterson | Client-side system for scheduling delivery of web content and locally managing the web content |
WO2001044988A1 (en) | 1999-12-16 | 2001-06-21 | Supermedia Networks, Inc. | Method of background downloading of information from a computer network |
US6263352B1 (en) | 1997-11-14 | 2001-07-17 | Microsoft Corporation | Automated web site creation using template driven generation of active server page applications |
US6262729B1 (en) | 1997-04-14 | 2001-07-17 | Apple Computer, Inc. | Method and apparatus for binding user interface objects to application objects |
US20010011250A1 (en) * | 1997-11-12 | 2001-08-02 | Cris T. Paltenghe | Distributed network based electronic wallet |
US6275833B1 (en) | 1997-07-15 | 2001-08-14 | International Business Machines Corporation | Method and system for generating materials for presentation on a non-frame capable web browser |
US6285998B1 (en) | 1999-02-23 | 2001-09-04 | Microsoft Corporation | System and method for generating reusable database queries |
US20010027439A1 (en) | 1999-07-16 | 2001-10-04 | Holtzman Henry N. | Method and system for computerized form completion |
US6304886B1 (en) | 1997-06-19 | 2001-10-16 | International Business Machines Corporation | System and method for building a web site using specific interface |
US6308188B1 (en) | 1997-06-19 | 2001-10-23 | International Business Machines Corporation | System and method for building a web site with automated workflow |
US6308164B1 (en) | 1997-04-28 | 2001-10-23 | Jeff Nummelin | Distributed project management system and method |
US20010034016A1 (en) | 2000-02-10 | 2001-10-25 | Ziv-El Shimon G. | Method and system for online teaching using web pages |
US20010039541A1 (en) | 2000-03-22 | 2001-11-08 | Digital Soken Inc. | Information retrieval system on internet |
WO2001088762A2 (en) | 2000-05-16 | 2001-11-22 | Open Market, Inc. | Distributed dynamic web page caching system |
US6330575B1 (en) | 1998-03-31 | 2001-12-11 | International Business Machines Corporation | Web commerce tool kit for distributed payment processing |
US6332134B1 (en) * | 1999-11-01 | 2001-12-18 | Chuck Foster | Financial transaction system |
US20010056370A1 (en) | 2000-02-10 | 2001-12-27 | Sivan Tafla | Method and system for presenting an animated advertisement on a web page |
US20020004760A1 (en) | 2000-06-05 | 2002-01-10 | Toshio Yoshida | Online settlement system, method thereof and storage medium |
US6340977B1 (en) | 1999-05-07 | 2002-01-22 | Philip Lui | System and method for dynamic assistance in software applications using behavior and host application models |
US20020010746A1 (en) | 2000-02-14 | 2002-01-24 | Jilk David J. | System, method, apparatus and computer program product for operating a web site by electronic mail |
US20020013788A1 (en) * | 1998-11-10 | 2002-01-31 | Pennell Mark E. | System and method for automatically learning information used for electronic form-filling |
US6345308B1 (en) | 1998-02-27 | 2002-02-05 | Kabushiki Kaisha Toshiba | Network computer system and method for executing data synchronization process thereof |
US20020023057A1 (en) * | 1999-06-01 | 2002-02-21 | Goodwin Johnathan David | Web-enabled value bearing item printing |
US20020095462A1 (en) * | 1998-02-20 | 2002-07-18 | Genesys Telecommunications Laboratories, Inc. | Method and apparatus for providing media-independent self-help modules within a multimedia communication-center customer interface |
US20020122060A1 (en) * | 2000-12-18 | 2002-09-05 | Markel Steven O. | Wizard generating HTML web pages using XML and XSL |
US20020152197A1 (en) * | 2001-03-01 | 2002-10-17 | Stocker Jeffrey A. | Automatic generation of personal homepages for a sales force |
US20030065558A1 (en) * | 2001-09-12 | 2003-04-03 | Cameron Shaw | Method and apparatus for multi-vendor powered business portal with intelligent service promotion and user profile gathering |
US20030158947A1 (en) * | 2002-01-16 | 2003-08-21 | Bloch Eric D. | Enabling online and offline operation |
US6651217B1 (en) * | 1999-09-01 | 2003-11-18 | Microsoft Corporation | System and method for populating forms with previously used data values |
US6795830B1 (en) * | 2000-09-08 | 2004-09-21 | Oracle International Corporation | Techniques for providing off-host storage for a database application |
US6862612B1 (en) * | 1999-12-10 | 2005-03-01 | Dell Products L.P. | Multiple ‘express buy’ profiles for multiple stores (dell.com and gigabuys.com) |
-
2002
- 2002-06-26 US US10/183,650 patent/US7249313B2/en not_active Expired - Lifetime
Patent Citations (55)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5784562A (en) | 1995-10-10 | 1998-07-21 | U S West Advanced Technologies, Inc. | System for using a dialog session context to process electronic forms data on the world wide web |
US5740430A (en) | 1995-11-06 | 1998-04-14 | C/Net, Inc. | Method and apparatus for server-independent caching of dynamically-generated customized pages |
US5838916A (en) | 1996-03-14 | 1998-11-17 | Domenikos; Steven D. | Systems and methods for executing application programs from a memory device linked to a server |
US5799285A (en) | 1996-06-07 | 1998-08-25 | Klingman; Edwin E. | Secure system for electronic selling |
US5892909A (en) | 1996-09-27 | 1999-04-06 | Diffusion, Inc. | Intranet-based system with methods for co-active delivery of information to multiple users |
US5893116A (en) | 1996-09-30 | 1999-04-06 | Novell, Inc. | Accessing network resources using network resource replicator and captured login script for use when the computer is disconnected from the network |
US5974572A (en) | 1996-10-15 | 1999-10-26 | Mercury Interactive Corporation | Software system and methods for generating a load test using a server access log |
US6237006B1 (en) | 1996-10-15 | 2001-05-22 | Mercury Interactive Corporation | Methods for graphically representing web sites and hierarchical node structures |
JPH10187456A (en) | 1996-12-27 | 1998-07-21 | Hitachi Ltd | Program download system |
US6226648B1 (en) | 1997-02-07 | 2001-05-01 | About.Com, Inc. | System and method for modification of included files used in a automatic web page generation system |
US6026433A (en) | 1997-03-17 | 2000-02-15 | Silicon Graphics, Inc. | Method of creating and editing a web site in a client-server environment using customizable web site templates |
US6182122B1 (en) | 1997-03-26 | 2001-01-30 | International Business Machines Corporation | Precaching data at an intermediate server based on historical data requests by users of the intermediate server |
US6262729B1 (en) | 1997-04-14 | 2001-07-17 | Apple Computer, Inc. | Method and apparatus for binding user interface objects to application objects |
US6308164B1 (en) | 1997-04-28 | 2001-10-23 | Jeff Nummelin | Distributed project management system and method |
US6026417A (en) | 1997-05-02 | 2000-02-15 | Microsoft Corporation | Desktop publishing software for automatically changing the layout of content-filled documents |
US5983227A (en) | 1997-06-12 | 1999-11-09 | Yahoo, Inc. | Dynamic page generator |
US6304886B1 (en) | 1997-06-19 | 2001-10-16 | International Business Machines Corporation | System and method for building a web site using specific interface |
US6219680B1 (en) | 1997-06-19 | 2001-04-17 | International Business Machines Corporation | System and method for building a web site for use in E-commerce with user specific pricing |
US6308188B1 (en) | 1997-06-19 | 2001-10-23 | International Business Machines Corporation | System and method for building a web site with automated workflow |
US6275833B1 (en) | 1997-07-15 | 2001-08-14 | International Business Machines Corporation | Method and system for generating materials for presentation on a non-frame capable web browser |
US6035324A (en) | 1997-08-28 | 2000-03-07 | International Business Machines Corporation | Client-side asynchronous form management |
US6163779A (en) | 1997-09-29 | 2000-12-19 | International Business Machines Corporation | Method of saving a web page to a local hard drive to enable client-side browsing |
US6061733A (en) | 1997-10-16 | 2000-05-09 | International Business Machines Corp. | Method and apparatus for improving internet download integrity via client/server dynamic file sizes |
US20010003828A1 (en) | 1997-10-28 | 2001-06-14 | Joe Peterson | Client-side system for scheduling delivery of web content and locally managing the web content |
US20010011250A1 (en) * | 1997-11-12 | 2001-08-02 | Cris T. Paltenghe | Distributed network based electronic wallet |
US6263352B1 (en) | 1997-11-14 | 2001-07-17 | Microsoft Corporation | Automated web site creation using template driven generation of active server page applications |
US6167441A (en) | 1997-11-21 | 2000-12-26 | International Business Machines Corporation | Customization of web pages based on requester type |
US20020095462A1 (en) * | 1998-02-20 | 2002-07-18 | Genesys Telecommunications Laboratories, Inc. | Method and apparatus for providing media-independent self-help modules within a multimedia communication-center customer interface |
US6345308B1 (en) | 1998-02-27 | 2002-02-05 | Kabushiki Kaisha Toshiba | Network computer system and method for executing data synchronization process thereof |
US6243761B1 (en) | 1998-03-26 | 2001-06-05 | Digital Equipment Corporation | Method for dynamically adjusting multimedia content of a web page by a server in accordance to network path characteristics between client and server |
US6330575B1 (en) | 1998-03-31 | 2001-12-11 | International Business Machines Corporation | Web commerce tool kit for distributed payment processing |
US6182050B1 (en) * | 1998-05-28 | 2001-01-30 | Acceleration Software International Corporation | Advertisements distributed on-line using target criteria screening with method for maintaining end user privacy |
US20020013788A1 (en) * | 1998-11-10 | 2002-01-31 | Pennell Mark E. | System and method for automatically learning information used for electronic form-filling |
WO2000042528A1 (en) | 1999-01-15 | 2000-07-20 | Onyeabor Gillis E | Method and system for database-driven, scalable web page development, deployment-download, and execution |
US6285998B1 (en) | 1999-02-23 | 2001-09-04 | Microsoft Corporation | System and method for generating reusable database queries |
US6340977B1 (en) | 1999-05-07 | 2002-01-22 | Philip Lui | System and method for dynamic assistance in software applications using behavior and host application models |
WO2000070511A1 (en) | 1999-05-18 | 2000-11-23 | Maxiem Pty Limited | A website development system |
US20020023057A1 (en) * | 1999-06-01 | 2002-02-21 | Goodwin Johnathan David | Web-enabled value bearing item printing |
US20010027439A1 (en) | 1999-07-16 | 2001-10-04 | Holtzman Henry N. | Method and system for computerized form completion |
US6651217B1 (en) * | 1999-09-01 | 2003-11-18 | Microsoft Corporation | System and method for populating forms with previously used data values |
DE19942432A1 (en) | 1999-09-06 | 2001-03-08 | Iconparc Gmbh | Offline web application execution method uses web browser for loading offline web application stored on offline storage medium into personal computer for dynamic web page generation |
US6332134B1 (en) * | 1999-11-01 | 2001-12-18 | Chuck Foster | Financial transaction system |
US6862612B1 (en) * | 1999-12-10 | 2005-03-01 | Dell Products L.P. | Multiple ‘express buy’ profiles for multiple stores (dell.com and gigabuys.com) |
WO2001044988A1 (en) | 1999-12-16 | 2001-06-21 | Supermedia Networks, Inc. | Method of background downloading of information from a computer network |
US20010056370A1 (en) | 2000-02-10 | 2001-12-27 | Sivan Tafla | Method and system for presenting an animated advertisement on a web page |
US20010034016A1 (en) | 2000-02-10 | 2001-10-25 | Ziv-El Shimon G. | Method and system for online teaching using web pages |
US20020010746A1 (en) | 2000-02-14 | 2002-01-24 | Jilk David J. | System, method, apparatus and computer program product for operating a web site by electronic mail |
US20010039541A1 (en) | 2000-03-22 | 2001-11-08 | Digital Soken Inc. | Information retrieval system on internet |
WO2001088762A2 (en) | 2000-05-16 | 2001-11-22 | Open Market, Inc. | Distributed dynamic web page caching system |
US20020004760A1 (en) | 2000-06-05 | 2002-01-10 | Toshio Yoshida | Online settlement system, method thereof and storage medium |
US6795830B1 (en) * | 2000-09-08 | 2004-09-21 | Oracle International Corporation | Techniques for providing off-host storage for a database application |
US20020122060A1 (en) * | 2000-12-18 | 2002-09-05 | Markel Steven O. | Wizard generating HTML web pages using XML and XSL |
US20020152197A1 (en) * | 2001-03-01 | 2002-10-17 | Stocker Jeffrey A. | Automatic generation of personal homepages for a sales force |
US20030065558A1 (en) * | 2001-09-12 | 2003-04-03 | Cameron Shaw | Method and apparatus for multi-vendor powered business portal with intelligent service promotion and user profile gathering |
US20030158947A1 (en) * | 2002-01-16 | 2003-08-21 | Bloch Eric D. | Enabling online and offline operation |
Non-Patent Citations (9)
Title |
---|
A Distributed Computing Environment for Building Scalable Management Services, IEEE online library, Nikolaos Anerousis, pp. 547-562, May 24-28, 1999. |
IBM Technical Disclosure Bulletin, vol. 26, No. 6, Nov. 1983, A Journal Architecture for A Segmented, Single Level Store, pp. 2908-2911. |
IBM Technical Disclosure Bulletin, vol. 40, No. 06, Jun. 1997, Archiving Agent for the World Wide Web, pp. 33-34. |
IBM, Running Dynamic Web Pages Off-Line With a Wizard, 53 pages, co-pending filing date with IBM, Jun. 26, 2002. |
Modeling of HTTP Traffic, IEEE online library, Eduardo Casilari, et al; 2001, pp. 272-274. |
Mosaic for X version 2.0 Fill-Out Form Support, http://www.uni-karlsruhe.de/Betrieb/Mosaic/Docs/fill-out-forms/overview.html, Feb. 5, 2002. |
Research Disclosure, Feb. 2001, 442109, Method for disconnected host terminal emulation, pp. 276-277. |
Research Disclosure, Sep. 1998, 413121, Using a Template Processor to Simplify Programing, pp. 1272-1273. |
The WURD on Saving Time by Reading News Offline, Feb. 5, 2002. http://www.wurd.com/eng/ABCs/offline<SUB>-</SUB>news.html. |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110035431A1 (en) * | 2004-05-13 | 2011-02-10 | Guttapercha Partners, Inc. | Dissemination of Information In an Intermittent Network Connectivity |
US20100161831A1 (en) * | 2008-12-19 | 2010-06-24 | David Haas | Optimizing content and communication in multiaccess mobile device exhibiting communication functionalities responsive of tempo spatial parameters |
US9336178B2 (en) | 2008-12-19 | 2016-05-10 | Velocee Ltd. | Optimizing content and communication in multiaccess mobile device exhibiting communication functionalities responsive of tempo spatial parameters |
US20100275215A1 (en) * | 2009-04-22 | 2010-10-28 | Nokia Corporation | Method and apparatus for linking services |
US20110112933A1 (en) * | 2009-11-11 | 2011-05-12 | Joe Smith | System and method of media distribution management |
US8306873B2 (en) | 2009-11-11 | 2012-11-06 | Joe Smith | System and method of media distribution management |
Also Published As
Publication number | Publication date |
---|---|
US20040003345A1 (en) | 2004-01-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7200645B2 (en) | Running dynamic web pages off-line with a wizard | |
JP5132086B2 (en) | Presentation of alternative product package offers from web vendors | |
US10497047B2 (en) | Dynamic hosted shopping cart | |
US7756752B2 (en) | Customization of an online shopping experience | |
US7975019B1 (en) | Dynamic supplementation of rendered web pages with content supplied by a separate source | |
US7975020B1 (en) | Dynamic updating of rendered web pages with supplemental content | |
US6058373A (en) | System and method for processing electronic order forms | |
CN106164822B (en) | Method, system, and machine-readable medium for preserving state of a communication session | |
US7249313B2 (en) | Creating and utilizing a wizard to capture an application's interdependencies between web pages and data accesses for running the application's downloadable dynamic web pages off-line | |
AU2007336480B2 (en) | Interactive marketplace infrastructure | |
US7356606B2 (en) | Dynamic web storefront technology | |
US20140046780A1 (en) | Software System for Decentralizing eCommerce with Single Page Buy | |
US7949573B1 (en) | Displaying product recommendations in electronic commerce | |
US10373214B1 (en) | Method and apparatus for efficient delta pricing | |
AU7225301A (en) | Web based visual self calculating order system | |
US20030130910A1 (en) | Shopping cart presentation | |
US11379904B2 (en) | Buy now option from map view | |
US20030088483A1 (en) | System, method and computer program product for an enhanced E-commerce graphical user interface | |
WO2005098716A2 (en) | Method and system for facilitating commerce via a communications network | |
JP2014146364A (en) | Monetization of interactive network-based information objects | |
US7099834B2 (en) | Method, system, and program for transferring data between servers through a client computer over a network | |
US20020087412A1 (en) | Method for post-sales customer retention | |
US20030004857A1 (en) | Coordinating manufacturing by local and remote manufacturers for a personalized design in an electronic commerce system | |
US11205209B2 (en) | Methods for searching and obtaining clothing designs while discouraging copying | |
US20070011325A1 (en) | Protocol mediation for adaptation in semantic web services |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BROWN, MICHAEL WAYNE;MALCOLM, JERRY WALTER;REED, AARON KEITH;AND OTHERS;REEL/FRAME:013071/0017;SIGNING DATES FROM 20020620 TO 20020625 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
SULP | Surcharge for late payment | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026664/0866Effective date: 20110503 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
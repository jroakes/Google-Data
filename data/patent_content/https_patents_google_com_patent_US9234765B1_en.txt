US9234765B1 - Discovering theme and attribute oriented travel routes and relevant geographic entities along a route - Google Patents
Discovering theme and attribute oriented travel routes and relevant geographic entities along a route Download PDFInfo
- Publication number
- US9234765B1 US9234765B1 US14/283,417 US201414283417A US9234765B1 US 9234765 B1 US9234765 B1 US 9234765B1 US 201414283417 A US201414283417 A US 201414283417A US 9234765 B1 US9234765 B1 US 9234765B1
- Authority
- US
- United States
- Prior art keywords
- attributes
- routes
- route
- entities
- emerging
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3605—Destination input or retrieval
- G01C21/3617—Destination input or retrieval using user history, behaviour, conditions or preferences, e.g. predicted or inferred from previous use or current movement
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/20—Instruments for performing navigational calculations
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/28—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network with correlation of data from several navigational instruments
- G01C21/30—Map- or contour-matching
- G01C21/32—Structuring or formatting of map data
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3453—Special cost functions, i.e. other than distance or default speed limit of road segments
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09B—EDUCATIONAL OR DEMONSTRATION APPLIANCES; APPLIANCES FOR TEACHING, OR COMMUNICATING WITH, THE BLIND, DEAF OR MUTE; MODELS; PLANETARIA; GLOBES; MAPS; DIAGRAMS
- G09B29/00—Maps; Plans; Charts; Diagrams, e.g. route diagram
- G09B29/003—Maps
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09B—EDUCATIONAL OR DEMONSTRATION APPLIANCES; APPLIANCES FOR TEACHING, OR COMMUNICATING WITH, THE BLIND, DEAF OR MUTE; MODELS; PLANETARIA; GLOBES; MAPS; DIAGRAMS
- G09B29/00—Maps; Plans; Charts; Diagrams, e.g. route diagram
- G09B29/10—Map spot or coordinate position indicators; Map reading aids
Definitions
- An application such as a map application can provide a route between a starting point and a destination point that is designated by a user.
- Conventional map applications can provide the user with options regarding available routes, such as options relating to tolls or types of roads (i.e., freeways only), and a user can be presented a route that satisfies designated options or other default constraints associated with the map applications.
- one innovative aspect of the subject matter described in this specification can be implemented in methods that include a computer-implemented method for determining routes.
- the method includes identifying a starting point and a destination point for travel by a user including any constraints of the user regarding the travel.
- the method further includes determining one or more initial routes between the starting point and the destination point.
- the method further includes for each initial route, segmenting the route into a plurality of segments based on one or more criteria and determining attribute oriented routes using the segments.
- the method further includes determining one or more entities associated with each segment and identifying attributes for each determined entity.
- the method further includes aggregating and ranking the attributes along all the determined initial routes and determining one or more emerging attributes.
- Determining one or more attribute oriented routes based on the emerging attributes can include identifying a theme for an attribute oriented route based on one or more of the emerging attributes, identifying a set of entities from the determined entities that are associated with the one or more emerging attributes, and creating the attribute oriented route that passes through a region that includes the set of entities.
- the method further includes providing at least one attribute oriented route and information related to the theme to a device associated with the user.
- Identifying can include receiving the starting point, destination point and constraints, and the constraints can include limitations that affect a choice of the attribute oriented route.
- Determining the one or more initial routes can further include determining a plurality of direct routes between the starting point and the destination point.
- the one or more criteria can include a distance criterion, and segmenting can include segmenting the route into plural substantially equal segments.
- the one or more criteria can include a function, and a segment can be a length equal to the function applied to a respective route.
- Segmenting the route can further include locating one or more intermediary points along the route in accordance with the criteria, each intermediary point representing an end of one segment and a beginning of a new segment, and determining one or more entities that are in proximity to each segment can further include for each intermediary point, determining one or more entities in an area around a given intermediary point. Determining one or more entities in an area can include determining one or more entities in a radius around the intermediary point. Determining the entities in an area can include performing a geographical search around starting and end points for each segment.
- Aggregating and ranking the attributes along all the determined routes and determining one or more emerging attributes can further include accumulating the attributes, evaluating the accumulated attributes to determine top attributes for entities along the determined routes, and identifying the emerging attributes from the determined top attributes.
- Determining one or more attribute oriented routes can include scoring a region based on matching emerging attributes of the region as compared to one or more goals and determining routes within an area that maximize an aggregate rank based on the scoring under the constraints.
- the method can further include identifying regions along the determined routes based on the emerging attributes.
- the area can be a bounding area within which attribute oriented routes are selected.
- the one or more goals can define a set of optimization goals, and the method can further include receiving the set of optimization goals from the user or deriving the set of optimization goals from a profile associated with the user.
- the method can further include optimizing routes in, eliminating routes from, the one or more attributed oriented routes based the constraints provided by the user.
- the constraints can include a total maximum travel time between the starting point and destination point.
- Determining one or more attribute oriented routes can further include searching the attribute oriented routes for one that passes through regions with highest aggregate scores for a set of selected attributes of the emerging attributes.
- a theme can be based on a set of emerging attributes.
- Identifying can include receiving the starting point, destination point and constraints, and the constraints can include limitations that affect a choice of the attribute oriented route.
- a system comprising one or more processors and one or more memory elements including instructions.
- the instructions when executed, cause the one or more processors to: identify a starting point and a destination point for travel by a user including any constraints of the user regarding the travel; determine one or more initial routes between the starting point and the destination point; for each initial route, segment the route into a plurality of segments based on one or more criteria; and determine attribute oriented routes using the segments including: determine one or more entities associated with each segment; identify attributes for each determined entity; aggregate and rank the attributes along all the determined initial routes and determining one or more emerging attributes; determine one or more attribute oriented routes based on the emerging attributes including identifying a theme for an attribute oriented route based on one or more of the emerging attributes, identifying a set of entities from the determined entities that are associated with the one or more emerging attributes, and creating the attribute oriented route that passes through a region that includes the set of entities; and provide at least one attribute oriented route
- a user can be provided with a route that includes features associated with one or more themes that may be of interest to the user.
- FIG. 1 is a block diagram illustrating an example travel planning system for determining travel routes.
- FIG. 2 is a flowchart of an example process 200 for identifying attribute oriented routes.
- FIG. 3 shows a diagram of an example attribute oriented route determined from initial routes generated by searching geographical entities between a starting point and a destination point.
- FIG. 4 is a block diagram of an example computer system that can be used to implement the methods, systems and processes described in this disclosure.
- Systems, methods, and computer program products are described for identifying travel routes, e.g., related to the discovery and recommendation of relevant routes to users and interesting nearby places along routes. For example, identification of routes can occur through the process of optimization, inference and ranking of geographic entities and their attributes along a route. Systems, methods, and computer program products for identifying travel routes can equally apply to different modes of transportation along a route, such as, without limitation, driving or walking. Selection and recommendation of routes can also be based on criteria through a process of optimization.
- Conventional systems may deal with ways to optimize some cost of finding points of interest along a route, or finding points of interest near the route, or the inverse, namely, methods to generate routes given a list of points of interest.
- This disclosure deals with a different problem, which is—without any predetermined set of points of interest, identifying routes that possess certain attributes or themes. Given a departure location and final destination, for example, routes can be discovered that are associated with certain themes, such as routes going through wineries. Such themes or attributes can emerge from the geography and can also be optionally matched with a goal set of input attributes.
- identifying travel routes can enable discovery of interesting routes and enable reasoning, ranking and understanding of entities along or within some distance from routes.
- entities can be drawn, for example, from a wide range of place types, including but not limited to businesses, events, geographical regions such as populated places, parks or neighborhoods, etc.
- routes can be discovered and recommended based both on emergent attributes—discovered through the process of inference—for which routes may be interesting to users, as well as based on users providing selection criteria and constraints.
- identifying travel routes can have applications in other areas, such as any area that uses and/or can be enhanced by discovering and recommending routes to users or other computer systems and applications, such as in travel, web search, social networks and local search, among others.
- FIG. 1 is a block diagram illustrating an example travel planning computer system 100 for determining travel routes.
- the travel planning computer system (TCPS) 100 includes or is communicably coupled with a travel planning server (TPS) 102 and at least one client 140 that communicate across a network 130 .
- TPS travel planning server
- the TPS 102 is an electronic computing device operable to receive, transmit, process, store, or manage data and information associated with the TPCS 100 using a GUI 142 providing a TPCS 100 user (hereinafter “user”) with an efficient, user-friendly, and secure presentation of data provided by or communicated within the TPCS 100 .
- the TPS 102 provides various integrated tools and associated functionality, for example, through a particular graphical user interface (GUI) used to compare, among other things, routes, attribute oriented routes, geographical features, themes, or the like by selecting, defining, editing, and/or confirming choices for components that make up a particular travel experience.
- GUI graphical user interface
- the TPS 102 is responsible for receiving application requests, for example route planning requests, e.g., including requests for an attribute oriented route, described below with reference to FIGS. 2-3 .
- requests can be received from one or more client applications 146 associated with a particular client 140 of the TPCS 100 and responding to the received requests by processing the received vacation planning requests in a travel planning engine (TPE) 107 , rule engine 108 , and/or user interface engine (UIE) 109 , and sending an appropriate response back to the requesting client application 146 .
- TPE travel planning engine
- rule engine 108 rule engine
- UOE user interface engine
- requests associated with a particular TPE 107 , rule engine 108 , and/or UIE 109 may also be sent from internal users, external or third-party users, other automated applications (not illustrated), as well as any other appropriate entities, individuals, systems, or computers associated with the TPS 102 and/or other components of the TPCS 100 .
- the TPS 102 may also include or be communicably coupled with an e-mail server, a web server, a caching server, a streaming data server, and/or other suitable server.
- At least a portion of the TPE 107 , rule engine 108 , and/or UIE 109 is executed using requests/responses sent from/to a client 140 within and communicably coupled to the illustrated TPCS 100 using network 130 .
- requests/responses can be sent directly to TPS 102 from a user accessing TPS 102 directly.
- the TPS 102 may store a plurality of TPE 107 , rule engine 108 , and/or UIE 109 instances.
- the TPS 102 may comprise a web server, where one or more of the components of TPS 102 represent web-based applications accessed and executed by the client 140 using the network 130 or directly at the TPS 102 to perform the programmed tasks or operations of the various components of the TPS 102 .
- any and/or all of components of the TPS 102 may interface with each other and/or an interface 104 (described below) using an application programming interface (API) 112 and/or a service layer 113 .
- the API 112 may include specifications for routines, data structures, and object classes.
- the API 112 may be either computer language-independent or -dependent and refer to a complete interface, a single function, or even a set of APIs.
- the service layer 113 provides software services to the TPCS 100 .
- the functionality of the TPS 102 may be accessible for all service consumers using this service layer.
- Software services provide reusable, defined business functionalities through a defined interface.
- the interface may be software written in JAVA, C++, or other suitable language providing data in extensible markup language (XML) format or other suitable format.
- API 112 and/or service layer 113 may include the API 112 and/or service layer 113 as a stand-alone component in relation to other components of the TPCS 100 .
- any or all parts of the API 112 and/or service layer 113 may be implemented as a child or sub-modules of another software module, enterprise application, or hardware module without departing from the scope of this disclosure.
- the TPS 102 includes an interface 104 . Although illustrated as a single interface 104 in FIG. 1 , two or more interfaces 104 may be used according to particular needs, desires, or particular implementations of the TPCS 100 .
- the interface 104 is used by the TPS 102 for communicating with other systems in a distributed environment—including within the TPCS 100 —connected to the network 130 ; for example, the client 140 as well as other systems (not illustrated) communicably coupled to the network 130 .
- the interface 104 comprises logic encoded in software and/or hardware in a suitable combination and operable to communicate with the network 130 . More specifically, the interface 104 may comprise software supporting one or more communication protocols associated with communications such that the network 130 or interface's hardware is operable to communicate physical signals within and outside of the TPCS 100 .
- the TPS 102 includes a processor 105 . Although illustrated as a single processor 105 in FIG. 1 , two or more processors may be used according to particular needs, desires, or particular implementations of the TPCS 100 . Generally, the processor 105 executes instructions and manipulates data to perform the operations of the TPS 102 . Specifically, the processor 105 executes the functionality required to determine attribute oriented routes for travel.
- the TPS 102 also includes a memory 106 that holds data for the TPS 102 .
- a memory 106 that holds data for the TPS 102 .
- memory 106 is illustrated as a single memory 106 in FIG. 1 , two or more memories may be used according to particular needs, desires, or particular implementations of the TPCS 100 .
- memory 106 is illustrated as an integral component of the TPS 102 , in alternative implementations, memory 106 can be external to the TPS 102 and/or the TPCS 100 .
- the memory 106 holds/manages the description and/or data for all objects in the TPS 102 , includes one or more instances of transportation data 114 , entity data 116 , destination data 118 , and/or user profile data 120 .
- the transportation data 114 is data identifying available forms of transportation associated with various components of a trip.
- the transportation data 114 can be associated with air carriers, trains, boats/ships, subways, taxi service, bus service, shuttle services, and the like.
- the transportation data 114 is accessed by the TPE 107 and/or the rule engine 108 .
- the TPE 107 and/or the rule engine 108 can access, analyze, and/or process the transportation data 114 , and subsequently use the UIE 109 to display appropriate results to a user using a particular client application 146 , e.g., an application that displays travel routes based at least in part on user inputs.
- the transportation data 114 can be accessed by a remote access system or software, a local or remote client 140 , or other suitable TPCS 100 component.
- the TPE 107 can perform functions used for identifying attribute oriented routes. For example, the TPE 107 can identify initial routes that connect a user-provided starting point to a user-provided destination point. The TPE 107 can segment each of the determined initial routes into segments having, for example, a predetermined length. The TPE 107 can construct plural attribute oriented routes using the segments and identify one or more entities for each of the segments. The TPE 107 can identify attributes, such as “Beach” and “winery,” as attributes in regions that include the determined segments, and aggregate and rank the attributes that correspond to each of the initial routes.
- attributes such as “Beach” and “winery,” as attributes in regions that include the determined segments, and aggregate and rank the attributes that correspond to each of the initial routes.
- the TPE 107 can produce or identify a set of attribute related routes from the segments, and each attribute related route can be based on plural attributes (e.g., wineries) that are associated with entities (e.g., specific wineries) associated a given theme.
- the TPE 107 can select at least one attribute oriented route for presentation to the user.
- the route(s) chosen, for example, can include the route having or being in proximity to the entities that have the most attributes that are perceived to be of interest to the user.
- the entity data 116 is data identifying entities associated with geographical regions.
- the entity data 116 can be associated with towns, cities, landmarks or other geographic features.
- Entity data can include local attractions and/or any other suitable data with respect to a geographic region, such as tourism information, physical features, events, activities or other attributes associated with a specific entity.
- the entity data 116 is accessed by the TPE 107 and/or the rule engine 108 .
- the TPE 107 and/or the rule engine 108 can access, analyze, and/or process the entity data 116 , and subsequently use the UIE 109 to display appropriate results to a user using a particular client application 146 .
- the entity data 116 can be accessed by a remote access system or software, a local or remote client 140 , or other suitable TPCS 100 component.
- the rule engine 108 can be used, e.g., by the TPE 107 , to access and use rules for identifying attribute oriented routes based on rules for selecting routes from segments that are associated with particular attributes (e.g., because of their proximity to a given geographical feature or entity).
- the rules for example, can identify maximum distances to add to a route in order to include a particular entity for consideration when determining an attribute oriented route. Other rules for generating attribute oriented routes are possible.
- the destination data 118 is a specific subset of the entity data identifying available destinations.
- the destination data 118 can be associated with geographic regions, countries, cities, towns, and the like.
- the destination data 118 may include and/or indicate where to access name, geographic coordinates, population, demographics, weather data, major highways, available airports, train stations, bus stops, location industry, location attractions, special events, tax rates, laws, history, and/or any other suitable data with respect to a given city.
- the destination data 118 is accessed by the TPE 107 and/or the rule engine 108 .
- the TPE 107 and/or the rule engine 108 can access, analyze, and/or process the destination data 118 , and subsequently use the UIE 109 to display appropriate results to a user using a particular client application 146 .
- the destination data 118 can be accessed by a remote access system or software, a local or remote client 140 , or other suitable TPCS 100 component. For example, after segmentation of initial routes, a destination in proximity to a segment end can be identified. The destination data 118 can be used to locate entities in proximity to the destination. Segmentation and entity location is discussed in greater detail below.
- the user profile data 120 is data associated with a particular user and/or group of users.
- the user profile data 120 may include, for example, name, address, identification number (such as a U.S. Social Security Number), age, birthdate, place of birth, nationality, race, religion, sex, marital status, relationship status, education level, employer, interests, travel history, prior TPCS 100 system choices made, data about friends and/or acquaintances, and other suitable user profile data.
- the user profile data 120 could be used by the TPE 107 , rule engine 108 , and or UIE 109 to make proposals to a user about potential routes.
- the TPCS 100 could provide current beach and mountain routes with a higher weighting in deciding which routes to present to a user.
- the user profile data 120 can also be used to filter and/or recommend routes. For example, a married female planning a vacation may be presented with “romantic” type routes.
- user profile date 120 can include preferences and/or other inputs by the user, e.g., input in the GUI 142 , that indicate specific user interests (e.g., scenic drives, French restaurants, wine, max distance to drive, etc.). User preferences, for example, can be used as constraints when generating suggested routes.
- the user profile data 120 can be, among other things, updated, edited, and/or deleted by a suitable component of the TPCS 100 , such as the TPE 107 and/or client application 146 . These operations can take place whether or not the user is accessing TPCS 100 .
- the user can update their user profile data 120 using the client application 146 and/or based on travel actions/choices made by other users in a user's demographic group, the user profile data 100 can be updated to indicate a greater likelihood for the user to select certain travel.
- a particular user's choices made using client application 146 can also result in the user profile data 120 for the particular user being modified in some way.
- the user profile data 120 is accessed by the TPE 107 and/or the rule engine 108 .
- the TPE 107 and/or the rule engine 108 can access, analyze, and/or process the user profile data 120 , and subsequently use the UIE 109 to display appropriate results to a user using a particular client application 146 .
- the user profile data 120 can be accessed by a remote access system or software, a local or remote client 140 , or other suitable TPCS 100 component.
- the travel planning engine (TPE) 107 can be any application, program, module, process, or other software that may provide methods/functionality for, among other things, providing route-related component data to display; analyzing and processing user input provided by the UIE 109 ; providing instructions to the UIE 109 ; interfacing with the rule engine 108 to determine allowable/desirable routes or combinations thereof and attending data related thereto (such as travel time on a given route); requesting, analyzing/processing and displaying third-party route data; and other services (such a travel planning or vacation planning services).
- TPE travel planning engine
- the TPE 107 can also filter available component data (e.g., entity data and destination data) based upon, for example, user selections, the user profile data 120 , and/or other suitable data, to present more personalized/contextually appropriate data to a particular user.
- the TPE 107 can provide methods/functionality to recommend (e.g., assign a higher weighting value) particular routes based on user selections, the user profile data 120 , and/or other suitable data.
- the TPE 107 can interface with the rule engine 108 , UIE 109 , and/or the client application 146 , as appropriate, to provide filtering, weighting, proposals, and/or other suitable functionality.
- TPE 107 can access, process, and/or modify data associated with the transportation data 114 , entity data 116 , destination data 118 , user profile data 120 , and/or other suitable data.
- a particular TPE 107 can operate in response to and in connection with at least one request received from an associated client 140 . Additionally, the particular TPE 107 may operate in response to and in connection with at least one request received from other TPEs 107 , including TPEs 107 associated with other TPSs 102 . In some implementations, each TPE 107 can represent a web-based application accessed and executed by one or more remote clients 140 across the network 130 (e.g., through the Internet, or using at least one cloud-based service associated with the TPE 107 ).
- part of a particular TPE 107 may be a web-based service associated with a TPE 107 that is remotely called, while another part of the particular TPE 107 may be an interface object or agent bundled for processing at a remote client 140 .
- any or all of a particular TPE 107 may be a child or sub-module of another software module (not illustrated).
- parts of the particular TPE 107 may be executed or accessed by a user working directly at the TPS 102 , as well as remotely at a corresponding client 140 .
- the transportation data 114 , entity data 116 , destination data 118 , and/or user profile data 120 can be defined with and stored within the TPE 107 , as opposed to memory 106 .
- the rule engine 108 can be any application, program, module, process, or other software that may provide methods to evaluate and/or execute a rule instance (not illustrated) to support, among other things, calculating routes, ranking routes, ranking regions, and other operations for, filtering, displaying, and/or selecting a theme, emerging attributes, and/or optimizing a route.
- the rule engine 108 can interface with the TPE 107 , UIE 109 , and/or the client application 146 , as appropriate, to provide described functionality.
- the above-mentioned rule instance may represent conditions, parameters, variables, algorithms, instructions, constraints, references, and any other appropriate information for determining allowable/suggested/desirable routes to a user.
- the rule instance may specify that selecting a particular city to be included in a particular route assists in satisfying one or more goals associated with a user.
- rule engine 108 can access, process, and/or modify data associated with the transportation data 114 , entity data 116 , destination data 118 , user profile data 120 , and/or other suitable data.
- a particular rule engine 108 can operate in response to and in connection with at least one request received from an associated client 140 . Additionally, the particular rule engine 108 may operate in response to and in connection with at least one request received from other rule engines 108 , including rule engines 108 associated with other TPSes 102 . In some implementations, each rule engine 108 can represent a web-based application accessed and executed by one or more remote clients 140 across the network 130 (e.g., through the Internet, or using at least one cloud-based service associated with the rule engine 108 ).
- part of a particular rule engine 108 may be a web-based service associated with a rule engine 108 that is remotely called, while another part of the particular rule engine 108 may be an interface object or agent bundled for processing at a remote client 140 .
- any or all of a particular rule engine 108 may be a child or sub-module of another software module (not illustrated).
- parts of the particular rule engine 108 may be executed or accessed by a user working directly at the TPS 102 , as well as remotely at a corresponding client 140 .
- the transportation data 114 , entity data 116 , destination data 118 , and/or user profile data 120 can be defined with and stored within the rule engine 108 , as opposed to memory 106 .
- the user interface engine (UIE) 109 can be any application, program, module, process, or other software that may provide a travel planning GUI environment, for example, a GUI displayed using a client 140 .
- GUI user interface engine
- Other implementations consistent with this disclosure are envisioned and the provided figures are in no way intended to limit the scope of a particular GUI environment provided by the UIE 109 .
- a format of the GUI, displayed data, and/or other characteristics associated with the GUI can be determined from the user profile data 120 and/or other suitable data. For example, a user may prefer that displayed images are no smaller than a defined minimum dimension.
- the UIE 109 can then display and modify other GUI elements as necessary to meet the user's request.
- the UIE 109 can also modifies the GUI based upon user selections.
- the UIE 109 can change the GUI to display specific information about the selected city.
- the UIE 109 can interface with the TPE 107 , the rule engine 108 , and/or the client application 146 , as appropriate, to provide described functionality.
- the UIE 109 can access, process, and/or modify data associated with the transportation data 114 , entity data 116 , destination data 118 , user profile data 120 , and/or other suitable data.
- a particular UIE 109 may operate in response to and in connection with at least one request received from other UIEs 109 , including a UIE 109 associated with another TPS 102 , as well as other components of the TPCS 100 .
- the UIE 109 can be and/or include a web server.
- each UIE 109 can represent a network-based application accessed and executed using the network 130 (e.g., through the Internet, or using at least one cloud-based service associated with the UIE 109 ).
- a portion of a particular UIE 109 may be a Web service associated with the UIE 109 that is remotely called, while another portion of the UIE 109 may be an interface object or agent bundled for processing at a remote client 140 .
- any or all of a particular UIE 109 may be a child or sub-module of another software module or enterprise application (not illustrated) without departing from the scope of this disclosure.
- portions of the particular UIE 109 may be executed or accessed by a user working directly at the TPS 102 , as well as remotely at a corresponding client 140 .
- the TPCS 100 also includes a client 140 .
- the client 140 may be any computing device operable to connect to or communicate with the TPS 102 using the network 130 .
- the client 140 comprises an electronic device operable to receive, transmit, process, present and store any appropriate data associated with the TPCS 100 .
- the illustrated client 140 further includes a client application 146 .
- the client application 146 is any type of application that allows the client 140 to request, view, edit, and or delete content on the client 140 as well as to interact with the client 140 .
- the client application 146 can be and/or include a web browser.
- the client-application 146 can use parameters, metadata, and other information received at launch to access a particular set of data, applications, etc. from the TPS 102 .
- a user may interactively process a task, event, or other information associated with the TPS 102 , including, among other things, evaluating routes by selecting, defining, editing, and/or confirming choices for components that make up a route.
- the client application 146 may be implemented as multiple client applications in the client 140 .
- the illustrated client 140 is intended to encompass any computing device such as a desktop computer 140 a , laptop/notebook computer 140 b , wireless data port, smart phone 140 d , personal data assistant (PDA), tablet computing device 140 c , one or more processors within these devices, or any other suitable processing device.
- the client 140 may comprise a computer that includes a camera; an input device, such as a keypad, touch screen, or other device that can accept user information; and an output device that conveys information associated with the operation of the TPS 102 or the client 140 itself, including digital data, visual information, or a GUI 142 , as shown with respect to the client 140 .
- the illustrated client 140 further includes an interface 149 , a processor 144 , and a memory 148 .
- the interface 149 is used by the client 140 for communicating with other systems in a distributed environment—including within the TPCS 100 —connected to the network 130 ; for example, the TPS 102 , as well as other systems (not illustrated) communicably coupled to the network 130 .
- the interface 149 may also be consistent with the above-described interface 104 of the TPS 102 and/or other interfaces within the TPCS 100 .
- the processor 144 may be consistent with the above-described processor 105 of the TPS 102 and/or other processors within the TPCS 100 .
- the processor 144 executes instructions and manipulates data to perform the operations of the client 140 , including the functionality required to send requests to the TPS 102 and to receive and process respective responses.
- the memory 148 may be consistent with the above-described memory 106 of the TPS 102 and/or other memories within the TPCS 100 , but storing objects and/or data associated with the purposes of the client 140 .
- Memory 148 may also be used by the TPS 102 and/or other component (not illustrated) of the TPCS 100 to store any type of data for the purposes of the client 140 or of the storing component.
- the illustrated client 140 includes a GUI 142 .
- the GUI 142 interfaces with at least a portion of the TPCS 100 for any suitable purpose, including generating a visual representation in a web browser.
- the GUI 142 may be used to view and navigate various internal/external web pages associated with the TPS 102 as well as to interact with all provided GUIs, data, and/or functions associated with comparing and presenting routes.
- the client application 146 may act as a GUI interface for the TPS 102 , for example, a particular user interface generated by the UIE 109 .
- the TPS 102 and/or other components of the TPCS 100 can transmit executable components to the client application 146 for analysis and execution on the client 140 , for example, GUI code and/or data-gathering code, and/or provide content to the client application 146 for display, for example, the changing cost of a travel destination based upon a specifically selected vacation component value(s).
- clients 140 there may be any number of clients 140 associated with, or external to, the TPCS 100 .
- the illustrated TPCS 100 includes one client 140 communicably coupled to the TPS 102 using network 130
- alternative implementations of the TPCS 100 may include any number of clients 140 suitable to the purposes of the TPCS 100 .
- client and “user” may be used interchangeably as appropriate, without departing from the scope of this disclosure.
- the client 140 is described in terms of being used by a single user, this disclosure contemplates that many users may use one computer, or that one user may use multiple computers.
- FIG. 2 is a flowchart of an example process 200 for identifying attribute oriented routes.
- the TPS 102 can perform steps of the process 200 using instructions that are executed by one or more processors.
- FIGS. 1 and 3 are used to provide example structures for performing the steps of the process 200 .
- a starting point and a destination point are identified for travel by a user, including any constraints of the user regarding the travel ( 202 ).
- a user using the GUI 142 or some other interface can identify a starting point 302 and a destination point 304 , e.g., as described below with reference to FIG. 3 .
- start and end points for routes can be provided through a web form or a text input box.
- additional user inputs, such as constraints can be specified through various input methods including free-form text, queries, sliders for indicating the distance from the route, check boxes and/or radio buttons to indicate preferences, and other input methods.
- identifying the starting point and destination point can include receiving the starting point, destination point and constraints (e.g., from the GUI 142 ), and the constraints can include limitations that affect a choice of the attribute oriented route.
- the constraints can include limitations that affect a choice of the attribute oriented route.
- user input in the GUI 142 can include constraints that the overall route is to be five hours or shorter. Other constraints are possible.
- One or more initial routes are determined between the starting point and the destination point ( 204 ).
- the TPE 107 can identify initial routes that connect the starting point 302 and the destination point 304 .
- determining the one or more initial routes can further include determining a plurality of direct routes between the starting point and the destination point.
- routes identified by the TPE 107 can include routes that are identified solely on the basis of geographic considerations associated with distance and time. Other factors, such as weather conditions and road construction, can also be considered.
- the route is segmented into a plurality of segments based on one or more criteria ( 206 ).
- the TPE 107 can break each of the determined initial routes into segments, where each segment is of a certain length, as described below with reference to FIG. 3 .
- Other factors, in addition to or in combination with length, can be used in segmenting a route, such as topology, road type/condition, and other factors.
- the one or more criteria can include a distance criterion, and segmenting can include segmenting the route into plural substantially equal segments.
- the criteria may include a maximum distance (e.g., 200 miles) or a maximum time for a route, as specified by the user, and segmenting by the TPE 107 can including segmenting each route into segments having a certain length (e.g., 50 miles). Segments can also be determined based on time, such as depending on speed limits on the segments, and/or other factors.
- Other criteria used in segmenting can include, for example, kid-friendliness, scenic quality (e.g., is the segment scenic), terrain features (e.g., is the segment along the coast or in a valley), and other criteria.
- the one or more criteria can include a function
- a segment can be a length equal to the function applied to a respective route.
- segmenting the route can further include locating one or more intermediary points along the route in accordance with the criteria, each intermediary point representing an end of one segment and a beginning of a new segment. As will be discussed in greater detail below, for each intermediary point, one or more entities in an area around a given intermediary point can be determined in order to develop attribute oriented routes.
- the TPE 107 can identify intermediate points, such as via points, that are included in the route.
- the TPE 107 can also identify specific entities, such as wineries, that are near each of the intermediary points. Segments that are determined in this way may be of differing lengths, e.g., adjusted so that the beginning and/or the ending of each segment is near an entity.
- determining one or more entities in an area can include determining one or more entities in a radius around an intermediary point. For example, for an entity to be considered by the TPE 107 , the entity may need to be within a radius of N miles or some other distance or time metric. In some implementations, determining the entities in an area includes performing a geographical search around starting and end points for each segment. As an example, the TPE can perform a search for entities (e.g., businesses, attractions, etc.) that are within the defined radius of an end point associated with a segment. Entity identification is discussed in greater detail below.
- Attribute oriented routes are determined using the segments ( 208 ).
- step 208 can include the following sub-steps.
- the TPE 107 can construct plural attribute oriented routes using the segments, as described below with reference to FIG. 3 .
- One or more entities associated with each segment are determined ( 210 ).
- the TPE 107 can identify one or more entities (e.g., specific coastal wineries) for each of the segments, as described below with reference to FIG. 3 .
- Entities can be of the form of geographical features such as towns, cities, national parks, attractions, museums, shopping malls and stores, natural features (e.g., waterfalls), scenic overlooks, historical sites, restaurants, or other geographic features.
- Attributes are identified for each determined entity ( 212 ).
- the TPE 107 can identify attributes, such as “Beach” and “winery” as attributes in regions that include the determined segments, as described below with reference to FIG. 3 .
- Attributes can include attractions, features, reasons for tourism, descriptors for the attractions, features or reasons for tourism or the same.
- the attributes can correspond to popular and interesting beach towns 306 along the attribute oriented route 12 .
- the attributes are aggregated and ranked along all the determined initial routes and one or more emerging attributes are determined ( 214 ).
- the TPE 107 can aggregate and rank the attributes that correspond to each of the initial routes, and the TPE 107 can identify patterns of emerging attributes, e.g., based on a large number of wineries in a region.
- approaches can include aggregation/counting, or approaches can identify the most significant attributes relative to the general popularity of the certain attributes. For example, if certain, most or all tourist locations have a high density of hotels and restaurants, then this might not be sufficient in identifying this attribute as being interesting and/or significant. However, relative to the general popularity of a particular attribute, a beach might be more relevant and would rank higher.
- aggregating and ranking the attributes along all the determined routes and determining one or more emerging attributes can further include accumulating the attributes, evaluating the accumulated attributes to determine top attributes for entities along the determined routes, and identifying the emerging attributes from the determined top attributes.
- the TPE 107 can keep track of a number of attributes (e.g., by subject) along each route, e.g., five attributes related to wine. Based on the numbers of attributes that are related, for example, the TPE 107 can identify emerging attributes, e.g., to identify wine country as an emerging attribute (e.g., if there are several wineries) versus car museums as a non-emerging attribute (e.g., if there is a single car museum).
- One or more attribute oriented routes are determined based on the emerging attributes including identifying a theme for an attribute oriented route based on one or more of the emerging attributes, identifying a set of entities from the determined entities that are associated with the one or more emerging attributes, and creating the attribute oriented route that passes through a region that includes the set of entities ( 216 ).
- the TPE 107 can produce a set of attribute related routes (e.g., including the attribute oriented route 12 ) from the segments, and each attribute oriented route can be based on plural attributes (e.g., wine, food, and culinary attributes being associated with a “wine country” route) that are associated with entities (e.g., specific wineries, restaurants, museums, tours or the like) associated with a particular region.
- the theme of wine or wine country can be based on wine being an emerging attribute.
- some combinations of available segments and attributes may not result in determining any attribute oriented routes, such as if routes and/or segments are too short and/or go through uninhabited regions.
- determining one or more attribute oriented routes can include scoring a region based on matching emerging attributes of the region as compared to one or more goals and determining routes within an area (e.g., a bounding area) that maximizes an aggregate rank based on the scoring under the constraints.
- the TPE 107 can score attribute oriented routes based on the number of emerging attributes discovered for each route, and regions that are include can be scored, e.g., based on the number of emerging attributes that a region contains.
- the process 200 can further include identifying regions along the determined routes based on the emerging attributes.
- the TPE 107 can identify a region between the starting point 302 and the destination point 304 , e.g., as a region that is rich in wine related activities.
- the one or more goals can define a set of optimization goals
- the method can further comprise receiving the set of optimization goals from the user or deriving the set of optimization goals from a profile associated with the user.
- the TPE 107 can score regions based on goals (e.g., interests) provided by the user (e.g., using the GUI 142 ) and/or goals determined or inferred from user profile data 120 .
- determining the one or more attribute oriented routes can further include searching the attribute oriented routes for one that passes through regions with highest aggregate scores for a set of selected attributes of the emerging attributes. For example, the TPE 107 can identify (e.g., and rank) attribute oriented routes based on scores that represent the highest number of attractions of interest to the user.
- At least one attribute oriented route and information related to the theme are provided to a device associated with the user ( 218 ).
- the TPE 107 can select the attribute oriented route 12 for presentation to the user.
- the theme can for example represent the sum of the emerging attributes that are associated with the selected route.
- the theme can be specific or be an indicator of a general topic associated with the emerging attributes that are associated with entities in proximity to a selected route.
- the process 200 can further include optimizing routes in, or eliminating routes from, the one or more attributed oriented routes based the constraints provided by the user.
- the TPE 107 can eliminate routes that exceed a length (e.g., in distance or time) that is designated by the user, or some other criteria, e.g., the route exceeds a total travel time, or the route includes a visit to an attraction that exceeds a duration or cost specified by the user.
- Other criteria for optimizing or eliminating routes can be used.
- the length or maximum travel time can be constraints that the user specifies, and the algorithm can use these constraints to produce results that satisfy user requirements for route optimization.
- FIG. 3 is a diagram of an example attribute oriented route 12 determined from initial routes generated by searching geographical entities between a starting point 302 and a destination point 304 .
- the attribute oriented route 12 can represent a route from location A to location B and a distance D.
- Discovering attribute oriented routes can be based on relevance criteria, optimization constraints and relevant emerging attributes.
- C be a set of constraints
- G be the set of optimization goals
- R be a geographical region.
- a and B represent the origin (e.g., starting point 302 ) and destination (e.g., destination point 304 ) for the routes.
- ATTR represent an attribute or set of attributes of a region.
- Area(A,B) is defined as a function that returns the bounding area within which occurs a search for optimal routes.
- Rank(R,G) is defined as a function that scores a particular region R based on matching emerging attributes of the region with the optimization goals G. Two steps can be used, for example, to maximize ranks associated with routes.
- Rank(R,G) is compared to derive a matching score.
- a search occurs for routes within Area(A,B) that maximize the aggregate of Rank(R,G) under constraints C.
- the second step for example, defines a search optimization function within a bounding area and makes use also of a routing function, allowing the retrieval of navigable route information based on origin, destination and set of “via points” to meet along the route.
- constraints can define some time limit, maximum number of via points, limit on turns and directions and so on. Any appropriate optimization method can be used to perform this search.
- optimization goals G can include a goal that parts of the suggested route are scenic and a goal that there are French restaurants along the route.
- Rank2(R,G,ATTR) can be defined as a function that scores the set of attributes ATTR of the region R with the optimization goals G.
- Rank2(R,G,ATTR) can be computed to derive a score for each attribute in R. Searching can occur for routes within Area(A,B) that maximize n aggregates of Rank2(R,G,ATTR). That is, routes are searched for within Area(A,B) that have the highest aggregated scores of n selected attributes.
- a user plans to travel between location A and location B.
- a particular route can be found that goes along the coast near or within several interesting beach towns, and another route can be found that goes through well-known wineries.
- Geographic regions can be inferred with regard to some criteria.
- travel destinations can be inferred based on the density, volume and popularity of places located within the destination.
- patent application Ser. No. 14/162,596 which is hereby incorporated in its entirety, provides more detail for processes of inferring high level place entities, such as regions and destinations, from lower level places, such as the collection of businesses within a region.
- Emerging attributes can be extracted for the inferred regions.
- a region can be described by a set of dominant attributes.
- a destination e.g., a town
- a set of dominant travel related categories such as for example, having Latin American Restaurants, a Lake and Wineries.
- patent application Ser. No. 14/162,596 provides more detail on extracting emergent attributes for geographical regions.
- the following algorithm can be used to compute possible routes that are strongly related to particular attributes.
- the algorithm can be used to identify routes for an origin location A, a destination location B, a mapping service M, and optionally a list of attributes of interest.
- mapping service M can be used to retrieve routes from location A to location B.
- a route minimally contains a collection of geographical positions along the route, typically a collection of latitude and longitude position pairs.
- regions of interest are discovered, such as interesting towns, within a distance D form the route.
- Regions can be located within distance from a route, for example, by segmenting the route, and for each position at the beginning of a segment, retrieving regions of interest that are within D (e.g., using similar techniques as used for discovering regions).
- the relevant attributes are retrieved and extracted. Attributes can be aggregated and rank by unity or numerical rank/value to create a value sum of each attribute over entire discovered destinations for a route.
- n attributes with highest values from aggregated list are selected.
- n attributes exist that represent the top emerging attributes nearby a route.
- attributes such as “Beach,” “Winery,” and “Great Outdoors,” may exist for some routes, e.g., representing important destinations that have such attributes within some distance D from the route.
- the regions having the top attributes are retrieved.
- Fifth, routes going through or near the top-attributed regions are retrieved and returned, e.g., using a mapping service.
- the selection of attribute oriented route 12 demonstrates the discovery of a route that is different than what a typical GPS system, map application, or direction service provides.
- a route 10 provided by a GPS or a direction service may be determined using major roads and optimized based on the duration of travel under traffic conditions.
- the attribute oriented route 12 that is determined as described above shows a travel route going through popular and interesting beach towns 306 along the coast, which emerge from the geography that is within some distance of the origin and destination (e.g., starting point 302 and destination point 304 , respectively).
- the techniques described above can be used to locate routes based on users' interests. For example, users can look for travel routes that are near wineries or beach towns or national parks, etc., and within constraints such as duration or length of travel.
- the techniques described above can be used to generate routes that are associated with emerging attributes in the geography, which are not pre-selected by users, and letting users of the system explore and select routes that are associated with one or more such attributers.
- the techniques described above can be used during research and planning phases for discovering and recommending interesting routes and places of interest nearby these routes.
- alternate routes can be identified dynamically at runtime. For example, if the current route is busy due to high traffic or an accident, an alternate route can either be requested by the user or suggested automatically as a way to show a scenic option or a themed route.
- the techniques described above can be included in a discovery service, e.g., through set of APIs to support other computer programs.
- the service can be used to discover routes associated with emerging or predefined themes or attributes, e.g., given initial inputs of origin and destination.
- FIG. 4 is a block diagram of example computing devices 400 , 450 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 400 is further intended to represent any other typically non-mobile devices, such as televisions or other electronic devices with one or more processers embedded therein or attached thereto.
- Computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 400 includes a processor 402 , memory 404 , a storage device 406 , a high-speed controller 408 connecting to memory 404 and high-speed expansion ports 410 , and a low-speed controller 412 connecting to low-speed bus 414 and storage device 406 .
- Each of the components 402 , 404 , 406 , 408 , 410 , and 412 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 402 can process instructions for execution within the computing device 400 , including instructions stored in the memory 404 or on the storage device 406 to display graphical information for a GUI on an external input/output device, such as display 416 coupled to high-speed controller 408 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 404 stores information within the computing device 400 .
- the memory 404 is a computer-readable medium.
- the memory 404 is a volatile memory unit or units.
- the memory 404 is a non-volatile memory unit or units.
- the storage device 406 is capable of providing mass storage for the computing device 400 .
- the storage device 406 is a computer-readable medium.
- the storage device 406 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 404 , the storage device 406 , or memory on processor 402 .
- the high-speed controller 408 manages bandwidth-intensive operations for the computing device 400 , while the low-speed controller 412 manages lower bandwidth-intensive operations. Such allocation of duties is an example only.
- the high-speed controller 408 is coupled to memory 404 , display 416 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 410 , which may accept various expansion cards (not shown).
- low-speed controller 412 is coupled to storage device 406 and low-speed bus 414 .
- the low-speed bus 414 (e.g., a low-speed expansion port), which may include various communication ports (e.g., USB, Bluetooth®, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 420 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 424 . In addition, it may be implemented in a personal computer such as a laptop computer 422 . Alternatively, components from computing device 400 may be combined with other components in a mobile device (not shown), such as computing device 450 . Each of such devices may contain one or more of computing devices 400 , 450 , and an entire system may be made up of multiple computing devices 400 , 450 communicating with each other.
- Computing device 450 includes a processor 452 , memory 464 , an input/output device such as a display 454 , a communication interface 466 , and a transceiver 468 , among other components.
- the computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 450 , 452 , 464 , 454 , 466 , and 468 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 452 can process instructions for execution within the computing device 450 , including instructions stored in the memory 464 .
- the processor may also include separate analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the computing device 450 , such as control of user interfaces, applications run by computing device 450 , and wireless communication by computing device 450 .
- Processor 452 may communicate with a user through control interface 458 and display interface 456 coupled to a display 454 .
- the display 454 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology.
- the display interface 456 may comprise appropriate circuitry for driving the display 454 to present graphical and other information to a user.
- the control interface 458 may receive commands from a user and convert them for submission to the processor 452 .
- an external interface 462 may be provided in communication with processor 452 , so as to enable near area communication of computing device 450 with other devices. External interface 462 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth® or other such technologies).
- the memory 464 stores information within the computing device 450 .
- the memory 464 is a computer-readable medium.
- the memory 464 is a volatile memory unit or units.
- the memory 464 is a non-volatile memory unit or units.
- Expansion memory 474 may also be provided and connected to computing device 450 through expansion interface 472 , which may include, for example, a subscriber identification module (SIM) card interface.
- SIM subscriber identification module
- expansion memory 474 may provide extra storage space for computing device 450 , or may also store applications or other information for computing device 450 .
- expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 474 may be provide as a security module for computing device 450 , and may be programmed with instructions that permit secure use of computing device 450 .
- secure applications may be provided via the SIM cards, along with additional information, such as placing identifying information on the SIM card in a non-hackable manner.
- the memory may include for example, flash memory and/or MRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 464 , expansion memory 474 , or memory on processor 452 .
- Computing device 450 may communicate wirelessly through communication interface 466 , which may include digital signal processing circuitry where necessary. Communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 468 (e.g., a radio-frequency transceiver). In addition, short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown). In addition, GPS receiver module 470 may provide additional wireless data to computing device 450 , which may be used as appropriate by applications running on computing device 450 .
- transceiver 468 e.g., a radio-frequency transceiver
- short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown).
- GPS receiver module 470 may provide additional wireless data to computing device 450 , which
- Computing device 450 may also communicate audibly using audio codec 460 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- Audio codec 460 may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- the computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 480 . It may also be implemented as part of a smartphone 482 , personal digital assistant, or other mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/283,417 US9234765B1 (en) | 2013-06-05 | 2014-05-21 | Discovering theme and attribute oriented travel routes and relevant geographic entities along a route |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201361831390P | 2013-06-05 | 2013-06-05 | |
US14/283,417 US9234765B1 (en) | 2013-06-05 | 2014-05-21 | Discovering theme and attribute oriented travel routes and relevant geographic entities along a route |
Publications (1)
Publication Number | Publication Date |
---|---|
US9234765B1 true US9234765B1 (en) | 2016-01-12 |
Family
ID=55026420
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/283,417 Active US9234765B1 (en) | 2013-06-05 | 2014-05-21 | Discovering theme and attribute oriented travel routes and relevant geographic entities along a route |
Country Status (1)
Country | Link |
---|---|
US (1) | US9234765B1 (en) |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160069699A1 (en) * | 2014-09-10 | 2016-03-10 | Volkswagen Ag | Apparatus, system and method for clustering points of interest in a navigation system |
US20160131493A1 (en) * | 2014-11-10 | 2016-05-12 | International Business Machines Corporation | Social media based weighted route selection |
US9534913B2 (en) * | 2015-04-09 | 2017-01-03 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
DE102017215210A1 (en) * | 2017-08-31 | 2019-02-28 | Bayerische Motoren Werke Aktiengesellschaft | Route determination for a motor vehicle |
CN109558977A (en) * | 2018-11-26 | 2019-04-02 | 上海景域文化传播股份有限公司 | Tour schedule assessment, planing method |
US10753756B2 (en) * | 2017-07-27 | 2020-08-25 | Toyota Jidosha Kabushiki Kaisha | Method of determining route, information processing apparatus, and non-transitory storage medium storing program |
US20220114505A1 (en) * | 2020-10-08 | 2022-04-14 | Hyundai Mobis Co., Ltd. | Transportation system and operation method thereof |
US11619507B2 (en) * | 2019-08-29 | 2023-04-04 | Subaru Corporation | Information processor, information processing method, and computer-readable recording medium |
US11965748B2 (en) | 2020-10-08 | 2024-04-23 | Hyundai Mobis Co., Ltd. | Transportation system and operation method thereof |
Citations (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6282489B1 (en) | 1993-05-28 | 2001-08-28 | Mapquest.Com, Inc. | Methods and apparatus for displaying a travel route and generating a list of places of interest located near the travel route |
US6622087B2 (en) | 2000-12-26 | 2003-09-16 | Intel Corporation | Method and apparatus for deriving travel profiles |
US20030210825A1 (en) * | 1998-09-17 | 2003-11-13 | Matthew Friederich | Method and system for compressing data and a geographic database formed therewith and methods for use thereof in a navigation application program |
US20040073362A1 (en) * | 2000-12-08 | 2004-04-15 | Thomas Fabian | Method for automatically deleting a traffic announcement |
US7054743B1 (en) | 2003-08-04 | 2006-05-30 | American Online, Inc. | Using a corridor search to identify locations of interest along a travel route |
US20070219706A1 (en) | 2006-03-15 | 2007-09-20 | Qualcomm Incorporated | Method And Apparatus For Determining Relevant Point Of Interest Information Based Upon Route Of User |
US20070244632A1 (en) * | 2004-02-27 | 2007-10-18 | Guido Mueller | Method for Storing, in a Navigation System, Map Data that Represent Traffic Path Segments, and Navigation System |
US7324896B1 (en) | 2003-08-04 | 2008-01-29 | Aol Llc | Using a corridor search to identify locations of interest along a travel route |
EP1955211A2 (en) | 2005-10-12 | 2008-08-13 | Google, Inc. | Entity display priority in a distributed geographic information system |
US20100299065A1 (en) * | 2008-07-25 | 2010-11-25 | Mays Joseph P | Link-node maps based on open area maps |
US8095303B1 (en) | 2006-12-29 | 2012-01-10 | Mapquest, Inc. | Identifying a route configured to travel through multiple points of interest |
US8275546B2 (en) | 2009-09-29 | 2012-09-25 | Microsoft Corporation | Travelogue-based travel route planning |
US8335990B2 (en) | 2009-08-18 | 2012-12-18 | Nokia Corporation | Method and apparatus for grouping points-of-interest on a map |
US8401786B2 (en) | 2009-04-01 | 2013-03-19 | Decarta Inc. | Point of interest search along a route with return |
-
2014
- 2014-05-21 US US14/283,417 patent/US9234765B1/en active Active
Patent Citations (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6498982B2 (en) | 1993-05-28 | 2002-12-24 | Mapquest. Com, Inc. | Methods and apparatus for displaying a travel route and/or generating a list of places of interest located near the travel route |
US6282489B1 (en) | 1993-05-28 | 2001-08-28 | Mapquest.Com, Inc. | Methods and apparatus for displaying a travel route and generating a list of places of interest located near the travel route |
US20030210825A1 (en) * | 1998-09-17 | 2003-11-13 | Matthew Friederich | Method and system for compressing data and a geographic database formed therewith and methods for use thereof in a navigation application program |
US20040073362A1 (en) * | 2000-12-08 | 2004-04-15 | Thomas Fabian | Method for automatically deleting a traffic announcement |
US6622087B2 (en) | 2000-12-26 | 2003-09-16 | Intel Corporation | Method and apparatus for deriving travel profiles |
US7324896B1 (en) | 2003-08-04 | 2008-01-29 | Aol Llc | Using a corridor search to identify locations of interest along a travel route |
US7054743B1 (en) | 2003-08-04 | 2006-05-30 | American Online, Inc. | Using a corridor search to identify locations of interest along a travel route |
US7194357B2 (en) | 2003-08-04 | 2007-03-20 | Aol Llc | Using a corridor search to identify locations of interest along a travel route |
US7599792B1 (en) | 2003-08-04 | 2009-10-06 | Mapquest, Inc. | Using a corridor search to identify locations of interest along a travel route |
US20070244632A1 (en) * | 2004-02-27 | 2007-10-18 | Guido Mueller | Method for Storing, in a Navigation System, Map Data that Represent Traffic Path Segments, and Navigation System |
EP1955211A2 (en) | 2005-10-12 | 2008-08-13 | Google, Inc. | Entity display priority in a distributed geographic information system |
US20070219706A1 (en) | 2006-03-15 | 2007-09-20 | Qualcomm Incorporated | Method And Apparatus For Determining Relevant Point Of Interest Information Based Upon Route Of User |
US8095303B1 (en) | 2006-12-29 | 2012-01-10 | Mapquest, Inc. | Identifying a route configured to travel through multiple points of interest |
US20100299065A1 (en) * | 2008-07-25 | 2010-11-25 | Mays Joseph P | Link-node maps based on open area maps |
US8417446B2 (en) * | 2008-07-25 | 2013-04-09 | Navteq B.V. | Link-node maps based on open area maps |
US8401786B2 (en) | 2009-04-01 | 2013-03-19 | Decarta Inc. | Point of interest search along a route with return |
US8335990B2 (en) | 2009-08-18 | 2012-12-18 | Nokia Corporation | Method and apparatus for grouping points-of-interest on a map |
US8275546B2 (en) | 2009-09-29 | 2012-09-25 | Microsoft Corporation | Travelogue-based travel route planning |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9464909B2 (en) * | 2014-09-10 | 2016-10-11 | Volkswagen Ag | Apparatus, system and method for clustering points of interest in a navigation system |
US20160069699A1 (en) * | 2014-09-10 | 2016-03-10 | Volkswagen Ag | Apparatus, system and method for clustering points of interest in a navigation system |
US20160131493A1 (en) * | 2014-11-10 | 2016-05-12 | International Business Machines Corporation | Social media based weighted route selection |
US9599484B2 (en) * | 2014-11-10 | 2017-03-21 | International Business Machines Corporation | Social media based weighted route selection |
US10648822B2 (en) * | 2015-04-09 | 2020-05-12 | Verizon Patent And Licensing Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
US9534913B2 (en) * | 2015-04-09 | 2017-01-03 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
US20170074669A1 (en) * | 2015-04-09 | 2017-03-16 | Mapquest, Inc. | Systems and methods for simultaneous electronic display of various modes of transportation for viewing and comparing |
US10753756B2 (en) * | 2017-07-27 | 2020-08-25 | Toyota Jidosha Kabushiki Kaisha | Method of determining route, information processing apparatus, and non-transitory storage medium storing program |
DE102017215210A1 (en) * | 2017-08-31 | 2019-02-28 | Bayerische Motoren Werke Aktiengesellschaft | Route determination for a motor vehicle |
CN109558977A (en) * | 2018-11-26 | 2019-04-02 | 上海景域文化传播股份有限公司 | Tour schedule assessment, planing method |
US11619507B2 (en) * | 2019-08-29 | 2023-04-04 | Subaru Corporation | Information processor, information processing method, and computer-readable recording medium |
US20220114505A1 (en) * | 2020-10-08 | 2022-04-14 | Hyundai Mobis Co., Ltd. | Transportation system and operation method thereof |
US11965748B2 (en) | 2020-10-08 | 2024-04-23 | Hyundai Mobis Co., Ltd. | Transportation system and operation method thereof |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9234765B1 (en) | Discovering theme and attribute oriented travel routes and relevant geographic entities along a route | |
CN107407572B (en) | Searching along a route | |
US11055325B2 (en) | System and method for context enhanced mapping | |
US20230350925A1 (en) | Method and apparatus for aggregating and presenting data associated with geographic locations | |
US8600619B2 (en) | Method and apparatus for providing smart zooming of a geographic representation | |
US10044818B2 (en) | Notification related to predicted future geographic location of mobile device | |
US9488485B2 (en) | Method and apparatus for route selection based on recorded and calculated routes | |
US9026917B2 (en) | System and method for context enhanced mapping within a user interface | |
JP6488588B2 (en) | Speech recognition method and speech recognition system | |
US8762053B1 (en) | Enhanced identification of interesting points-of-interest | |
US9146129B1 (en) | Suggesting points of interest on a mapped route using user interests | |
US8566029B1 (en) | Enhanced identification of interesting points-of-interest | |
US9282161B1 (en) | Points of interest recommendations | |
US20050278371A1 (en) | Method and system for georeferential blogging, bookmarking a location, and advanced off-board data processing for mobile systems | |
US20150112963A1 (en) | Time and location based information search and discovery | |
US20110087685A1 (en) | Location-based service middleware | |
US20160283516A1 (en) | Method and apparatus for providing map selection and filtering using a drawing input | |
US20140280053A1 (en) | Contextual socially aware local search | |
EP3975170A1 (en) | Method, apparatus, and system for mapping conversation and audio data to locations | |
WO2023198161A1 (en) | Map display method, readable medium and electronic device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:PADOVITZ, AMIR;JAVA, AKSHAY;REEL/FRAME:033077/0651Effective date: 20140409 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |